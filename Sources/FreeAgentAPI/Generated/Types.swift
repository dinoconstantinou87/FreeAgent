// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Refresh access token
    ///
    /// Request an new Access Token using an existing Refresh Token (you'll need to provide a Refresh Token in the request body params)
    ///
    /// https://dev.freeagent.com/docs/oauth/#refreshing-the-access-token
    ///
    /// - Remark: HTTP `POST /v2/token_endpoint`.
    /// - Remark: Generated from `#/paths//v2/token_endpoint/post(refreshAccessToken)`.
    func refreshAccessToken(_ input: Operations.RefreshAccessToken.Input) async throws -> Operations.RefreshAccessToken.Output
    /// List all clients
    ///
    /// List all clients
    ///
    /// - Remark: HTTP `GET /v2/clients`.
    /// - Remark: Generated from `#/paths//v2/clients/get(listAllClients)`.
    func listAllClients(_ input: Operations.ListAllClients.Input) async throws -> Operations.ListAllClients.Output
    /// List all account managers
    ///
    /// List all account managers
    ///
    /// - Remark: HTTP `GET /v2/account_managers`.
    /// - Remark: Generated from `#/paths//v2/account_managers/get(listAllAccountManagers)`.
    func listAllAccountManagers(_ input: Operations.ListAllAccountManagers.Input) async throws -> Operations.ListAllAccountManagers.Output
    /// Get a single account manager
    ///
    /// Get a single account manager
    ///
    /// - Remark: HTTP `GET /v2/account_managers/{id}`.
    /// - Remark: Generated from `#/paths//v2/account_managers/{id}/get(getASingleAccountManager)`.
    func getASingleAccountManager(_ input: Operations.GetASingleAccountManager.Input) async throws -> Operations.GetASingleAccountManager.Output
    /// Show Attachment
    ///
    /// Show Attachment
    ///
    /// - Remark: HTTP `GET /v2/attachments/{id}`.
    /// - Remark: Generated from `#/paths//v2/attachments/{id}/get(showAttachment)`.
    func showAttachment(_ input: Operations.ShowAttachment.Input) async throws -> Operations.ShowAttachment.Output
    /// Delete Attachment
    ///
    /// Delete Attachment
    ///
    /// - Remark: HTTP `DELETE /v2/attachments/{id}`.
    /// - Remark: Generated from `#/paths//v2/attachments/{id}/delete(deleteAttachment)`.
    func deleteAttachment(_ input: Operations.DeleteAttachment.Input) async throws -> Operations.DeleteAttachment.Output
    /// List Bank Accounts
    ///
    /// List Bank Accounts
    ///
    /// - Remark: HTTP `GET /v2/bank_accounts`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/get(listBankAccounts)`.
    func listBankAccounts(_ input: Operations.ListBankAccounts.Input) async throws -> Operations.ListBankAccounts.Output
    /// Create Bank Account
    ///
    /// Create Bank Account
    ///
    /// - Remark: HTTP `POST /v2/bank_accounts`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/post(createBankAccount)`.
    func createBankAccount(_ input: Operations.CreateBankAccount.Input) async throws -> Operations.CreateBankAccount.Output
    /// Show Bank Account
    ///
    /// Show Bank Account
    ///
    /// - Remark: HTTP `GET /v2/bank_accounts/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/get(showBankAccount)`.
    func showBankAccount(_ input: Operations.ShowBankAccount.Input) async throws -> Operations.ShowBankAccount.Output
    /// Update Bank Account
    ///
    /// Update Bank Account
    ///
    /// - Remark: HTTP `PUT /v2/bank_accounts/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/put(updateBankAccount)`.
    func updateBankAccount(_ input: Operations.UpdateBankAccount.Input) async throws -> Operations.UpdateBankAccount.Output
    /// Delete Bank Account
    ///
    /// Delete Bank Account
    ///
    /// - Remark: HTTP `DELETE /v2/bank_accounts/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/delete(deleteBankAccount)`.
    func deleteBankAccount(_ input: Operations.DeleteBankAccount.Input) async throws -> Operations.DeleteBankAccount.Output
    /// List all bank transaction explanations
    ///
    /// List all bank transaction explanations
    ///
    /// - Remark: HTTP `GET /v2/bank_transaction_explanations`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/get(listAllBankTransactionExplanations)`.
    func listAllBankTransactionExplanations(_ input: Operations.ListAllBankTransactionExplanations.Input) async throws -> Operations.ListAllBankTransactionExplanations.Output
    /// Create a bank transaction explanation
    ///
    /// Create a bank transaction explanation
    ///
    /// - Remark: HTTP `POST /v2/bank_transaction_explanations`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/post(createABankTransactionExplanation)`.
    func createABankTransactionExplanation(_ input: Operations.CreateABankTransactionExplanation.Input) async throws -> Operations.CreateABankTransactionExplanation.Output
    /// Update a bank transaction explanation
    ///
    /// Update a bank transaction explanation
    ///
    /// - Remark: HTTP `PUT /v2/bank_transaction_explanations`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/put(updateABankTransactionExplanation)`.
    func updateABankTransactionExplanation(_ input: Operations.UpdateABankTransactionExplanation.Input) async throws -> Operations.UpdateABankTransactionExplanation.Output
    /// Get a single bank transaction explanation
    ///
    /// Get a single bank transaction explanation
    ///
    /// - Remark: HTTP `GET /v2/bank_transaction_explanations/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/{id}/get(getASingleBankTransactionExplanation)`.
    func getASingleBankTransactionExplanation(_ input: Operations.GetASingleBankTransactionExplanation.Input) async throws -> Operations.GetASingleBankTransactionExplanation.Output
    /// Delete a bank transaction explanation
    ///
    /// Delete a bank transaction explanation
    ///
    /// - Remark: HTTP `DELETE /v2/bank_transaction_explanations/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/{id}/delete(deleteABankTransactionExplanation)`.
    func deleteABankTransactionExplanation(_ input: Operations.DeleteABankTransactionExplanation.Input) async throws -> Operations.DeleteABankTransactionExplanation.Output
    /// List all bank transactions under a certain bank account
    ///
    /// List all bank transactions under a certain bank account
    ///
    /// - Remark: HTTP `GET /v2/bank_transactions`.
    /// - Remark: Generated from `#/paths//v2/bank_transactions/get(listAllBankTransactionsUnderACertainBankAccount)`.
    func listAllBankTransactionsUnderACertainBankAccount(_ input: Operations.ListAllBankTransactionsUnderACertainBankAccount.Input) async throws -> Operations.ListAllBankTransactionsUnderACertainBankAccount.Output
    /// Get a single bank transaction
    ///
    /// Get a single bank transaction
    ///
    /// - Remark: HTTP `GET /v2/bank_transactions/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_transactions/{id}/get(getASingleBankTransaction)`.
    func getASingleBankTransaction(_ input: Operations.GetASingleBankTransaction.Input) async throws -> Operations.GetASingleBankTransaction.Output
    /// Upload a bank statement
    ///
    /// Upload a bank statement
    ///
    /// - Remark: HTTP `POST /v2/bank_transactions/statement`.
    /// - Remark: Generated from `#/paths//v2/bank_transactions/statement/post(uploadABankStatement)`.
    func uploadABankStatement(_ input: Operations.UploadABankStatement.Input) async throws -> Operations.UploadABankStatement.Output
    /// List Bills
    ///
    /// List Bills
    ///
    /// - Remark: HTTP `GET /v2/bills`.
    /// - Remark: Generated from `#/paths//v2/bills/get(listBills)`.
    func listBills(_ input: Operations.ListBills.Input) async throws -> Operations.ListBills.Output
    /// Create Bill
    ///
    /// Create Bill
    ///
    /// - Remark: HTTP `POST /v2/bills`.
    /// - Remark: Generated from `#/paths//v2/bills/post(createBill)`.
    func createBill(_ input: Operations.CreateBill.Input) async throws -> Operations.CreateBill.Output
    /// Show Bill
    ///
    /// Show Bill
    ///
    /// - Remark: HTTP `GET /v2/bills/{id}`.
    /// - Remark: Generated from `#/paths//v2/bills/{id}/get(showBill)`.
    func showBill(_ input: Operations.ShowBill.Input) async throws -> Operations.ShowBill.Output
    /// Update Bill
    ///
    /// Update Bill
    ///
    /// - Remark: HTTP `PUT /v2/bills/{id}`.
    /// - Remark: Generated from `#/paths//v2/bills/{id}/put(updateBill)`.
    func updateBill(_ input: Operations.UpdateBill.Input) async throws -> Operations.UpdateBill.Output
    /// Delete Bill
    ///
    /// Delete Bill
    ///
    /// - Remark: HTTP `DELETE /v2/bills/{id}`.
    /// - Remark: Generated from `#/paths//v2/bills/{id}/delete(deleteBill)`.
    func deleteBill(_ input: Operations.DeleteBill.Input) async throws -> Operations.DeleteBill.Output
    /// List Bill Items
    ///
    /// List Bill Items
    ///
    /// - Remark: HTTP `GET /v2/bill_items`.
    /// - Remark: Generated from `#/paths//v2/bill_items/get(listBillItems)`.
    func listBillItems(_ input: Operations.ListBillItems.Input) async throws -> Operations.ListBillItems.Output
    /// Show Bill Item
    ///
    /// Show Bill Item
    ///
    /// - Remark: HTTP `GET /v2/bill_items/{bill_item_id}`.
    /// - Remark: Generated from `#/paths//v2/bill_items/{bill_item_id}/get(showBillItem)`.
    func showBillItem(_ input: Operations.ShowBillItem.Input) async throws -> Operations.ShowBillItem.Output
    /// List all capital assets
    ///
    /// List all capital assets
    ///
    /// - Remark: HTTP `GET /v2/capital_assets`.
    /// - Remark: Generated from `#/paths//v2/capital_assets/get(listAllCapitalAssets)`.
    func listAllCapitalAssets(_ input: Operations.ListAllCapitalAssets.Input) async throws -> Operations.ListAllCapitalAssets.Output
    /// Get a single capital asset
    ///
    /// Get a single capital asset
    ///
    /// - Remark: HTTP `GET /v2/capital_assets/{id}/`.
    /// - Remark: Generated from `#/paths//v2/capital_assets/{id}//get(getASingleCapitalAsset)`.
    func getASingleCapitalAsset(_ input: Operations.GetASingleCapitalAsset.Input) async throws -> Operations.GetASingleCapitalAsset.Output
    /// List all capital asset types
    ///
    /// List all capital asset types
    ///
    /// - Remark: HTTP `GET /v2/capital_asset_types`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/get(listAllCapitalAssetTypes)`.
    func listAllCapitalAssetTypes(_ input: Operations.ListAllCapitalAssetTypes.Input) async throws -> Operations.ListAllCapitalAssetTypes.Output
    /// Create capital asset type
    ///
    /// Create capital asset type
    ///
    /// - Remark: HTTP `POST /v2/capital_asset_types`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/post(createCapitalAssetType)`.
    func createCapitalAssetType(_ input: Operations.CreateCapitalAssetType.Input) async throws -> Operations.CreateCapitalAssetType.Output
    /// Get a single capital asset type
    ///
    /// Get a single capital asset type
    ///
    /// - Remark: HTTP `GET /v2/capital_asset_types/{id}`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/get(getASingleCapitalAssetType)`.
    func getASingleCapitalAssetType(_ input: Operations.GetASingleCapitalAssetType.Input) async throws -> Operations.GetASingleCapitalAssetType.Output
    /// Update capital asset type
    ///
    /// Update capital asset type
    ///
    /// - Remark: HTTP `PUT /v2/capital_asset_types/{id}`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/put(updateCapitalAssetType)`.
    func updateCapitalAssetType(_ input: Operations.UpdateCapitalAssetType.Input) async throws -> Operations.UpdateCapitalAssetType.Output
    /// Delete capital asset type
    ///
    /// Delete capital asset type
    ///
    /// - Remark: HTTP `DELETE /v2/capital_asset_types/{id}`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/delete(deleteCapitalAssetType)`.
    func deleteCapitalAssetType(_ input: Operations.DeleteCapitalAssetType.Input) async throws -> Operations.DeleteCapitalAssetType.Output
    /// Cashflow summary for a given date range
    ///
    /// Cashflow summary for a given date range
    ///
    /// - Remark: HTTP `GET /v2/cashflow`.
    /// - Remark: Generated from `#/paths//v2/cashflow/get(cashflowSummaryForAGivenDateRange)`.
    func cashflowSummaryForAGivenDateRange(_ input: Operations.CashflowSummaryForAGivenDateRange.Input) async throws -> Operations.CashflowSummaryForAGivenDateRange.Output
    /// List Categories
    ///
    /// List Categories
    ///
    /// - Remark: HTTP `GET /v2/categories`.
    /// - Remark: Generated from `#/paths//v2/categories/get(listCategories)`.
    func listCategories(_ input: Operations.ListCategories.Input) async throws -> Operations.ListCategories.Output
    /// Create category
    ///
    /// Documentation: https://dev.freeagent.com/docs/categories#create-a-category
    ///
    /// - Remark: HTTP `POST /v2/categories`.
    /// - Remark: Generated from `#/paths//v2/categories/post(createCategory)`.
    func createCategory(_ input: Operations.CreateCategory.Input) async throws -> Operations.CreateCategory.Output
    /// Get a single category
    ///
    /// Get a single category
    ///
    /// - Remark: HTTP `GET /v2/categories/{nominal_code}`.
    /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/get(getASingleCategory)`.
    func getASingleCategory(_ input: Operations.GetASingleCategory.Input) async throws -> Operations.GetASingleCategory.Output
    /// Update category
    ///
    /// Update category
    ///
    /// - Remark: HTTP `PUT /v2/categories/{nominal_code}`.
    /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/put(updateCategory)`.
    func updateCategory(_ input: Operations.UpdateCategory.Input) async throws -> Operations.UpdateCategory.Output
    /// Delete category
    ///
    /// Delete category
    ///
    /// - Remark: HTTP `DELETE /v2/categories/{nominal_code}`.
    /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/delete(deleteCategory)`.
    func deleteCategory(_ input: Operations.DeleteCategory.Input) async throws -> Operations.DeleteCategory.Output
    /// List all CIS bands for a company
    ///
    /// List all CIS bands for a company
    ///
    /// - Remark: HTTP `GET /v2/cis_bands`.
    /// - Remark: Generated from `#/paths//v2/cis_bands/get(listAllCisBandsForACompany)`.
    func listAllCisBandsForACompany(_ input: Operations.ListAllCisBandsForACompany.Input) async throws -> Operations.ListAllCisBandsForACompany.Output
    /// Company Details
    ///
    /// Company Details
    ///
    /// - Remark: HTTP `GET /v2/company`.
    /// - Remark: Generated from `#/paths//v2/company/get(companyDetails)`.
    func companyDetails(_ input: Operations.CompanyDetails.Input) async throws -> Operations.CompanyDetails.Output
    /// List business categories
    ///
    /// List business categories
    ///
    /// - Remark: HTTP `GET /v2/company/business_categories`.
    /// - Remark: Generated from `#/paths//v2/company/business_categories/get(listBusinessCategories)`.
    func listBusinessCategories(_ input: Operations.ListBusinessCategories.Input) async throws -> Operations.ListBusinessCategories.Output
    /// Show Tax Timeline
    ///
    /// Show Tax Timeline
    ///
    /// - Remark: HTTP `GET /v2/company/tax_timeline`.
    /// - Remark: Generated from `#/paths//v2/company/tax_timeline/get(showTaxTimeline)`.
    func showTaxTimeline(_ input: Operations.ShowTaxTimeline.Input) async throws -> Operations.ShowTaxTimeline.Output
    /// List Contacts
    ///
    /// List Contacts
    ///
    /// - Remark: HTTP `GET /v2/contacts`.
    /// - Remark: Generated from `#/paths//v2/contacts/get(listContacts)`.
    func listContacts(_ input: Operations.ListContacts.Input) async throws -> Operations.ListContacts.Output
    /// Create Contact
    ///
    /// Create Contact
    ///
    /// - Remark: HTTP `POST /v2/contacts`.
    /// - Remark: Generated from `#/paths//v2/contacts/post(createContact)`.
    func createContact(_ input: Operations.CreateContact.Input) async throws -> Operations.CreateContact.Output
    /// Show Contact
    ///
    /// Show Contact
    ///
    /// - Remark: HTTP `GET /v2/contacts/{id}`.
    /// - Remark: Generated from `#/paths//v2/contacts/{id}/get(showContact)`.
    func showContact(_ input: Operations.ShowContact.Input) async throws -> Operations.ShowContact.Output
    /// Update Contact
    ///
    /// Update Contact
    ///
    /// - Remark: HTTP `PUT /v2/contacts/{id}`.
    /// - Remark: Generated from `#/paths//v2/contacts/{id}/put(updateContact)`.
    func updateContact(_ input: Operations.UpdateContact.Input) async throws -> Operations.UpdateContact.Output
    /// Delete Contact
    ///
    /// Delete Contact
    ///
    /// - Remark: HTTP `DELETE /v2/contacts/{id}`.
    /// - Remark: Generated from `#/paths//v2/contacts/{id}/delete(deleteContact)`.
    func deleteContact(_ input: Operations.DeleteContact.Input) async throws -> Operations.DeleteContact.Output
    /// Mark Credit Note as sent
    ///
    /// Mark Credit Note as sent
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}/transitions/mark_as_sent`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_sent/put(markCreditNoteAsSent)`.
    func markCreditNoteAsSent(_ input: Operations.MarkCreditNoteAsSent.Input) async throws -> Operations.MarkCreditNoteAsSent.Output
    /// Mark Credit Note as cancelled
    ///
    /// Mark Credit Note as cancelled
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}/transitions/mark_as_cancelled`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_cancelled/put(markCreditNoteAsCancelled)`.
    func markCreditNoteAsCancelled(_ input: Operations.MarkCreditNoteAsCancelled.Input) async throws -> Operations.MarkCreditNoteAsCancelled.Output
    /// Mark Credit Notes as draft
    ///
    /// Mark Credit Notes as draft
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}/transitions/mark_as_draft`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_draft/put(markCreditNotesAsDraft)`.
    func markCreditNotesAsDraft(_ input: Operations.MarkCreditNotesAsDraft.Input) async throws -> Operations.MarkCreditNotesAsDraft.Output
    /// List Credit Notes
    ///
    /// List Credit Notes
    ///
    /// - Remark: HTTP `GET /v2/credit_notes`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/get(listCreditNotes)`.
    func listCreditNotes(_ input: Operations.ListCreditNotes.Input) async throws -> Operations.ListCreditNotes.Output
    /// Create Credit Note
    ///
    /// Create Credit Note
    ///
    /// - Remark: HTTP `POST /v2/credit_notes`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/post(createCreditNote)`.
    func createCreditNote(_ input: Operations.CreateCreditNote.Input) async throws -> Operations.CreateCreditNote.Output
    /// Show Credit Note
    ///
    /// Show Credit Note
    ///
    /// - Remark: HTTP `GET /v2/credit_notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/get(showCreditNote)`.
    func showCreditNote(_ input: Operations.ShowCreditNote.Input) async throws -> Operations.ShowCreditNote.Output
    /// Update Credit Note
    ///
    /// Update Credit Note
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/put(updateCreditNote)`.
    func updateCreditNote(_ input: Operations.UpdateCreditNote.Input) async throws -> Operations.UpdateCreditNote.Output
    /// Delete Credit Notes
    ///
    /// Delete Credit Notes
    ///
    /// - Remark: HTTP `DELETE /v2/credit_notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/delete(deleteCreditNotes)`.
    func deleteCreditNotes(_ input: Operations.DeleteCreditNotes.Input) async throws -> Operations.DeleteCreditNotes.Output
    /// Show Credit Note as PDF
    ///
    /// Show Credit Note as PDF
    ///
    /// - Remark: HTTP `GET /v2/credit_notes/{id}/pdf`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/pdf/get(showCreditNoteAsPdf)`.
    func showCreditNoteAsPdf(_ input: Operations.ShowCreditNoteAsPdf.Input) async throws -> Operations.ShowCreditNoteAsPdf.Output
    /// Send Credit Note Email
    ///
    /// Send Credit Note Email
    ///
    /// - Remark: HTTP `POST /v2/credit_notes/{id}/send_email`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/send_email/post(sendCreditNoteEmail)`.
    func sendCreditNoteEmail(_ input: Operations.SendCreditNoteEmail.Input) async throws -> Operations.SendCreditNoteEmail.Output
    /// List Credit Note Reconciliations
    ///
    /// List Credit Note Reconciliations
    ///
    /// - Remark: HTTP `GET /v2/credit_note_reconciliations`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/get(listCreditNoteReconciliations)`.
    func listCreditNoteReconciliations(_ input: Operations.ListCreditNoteReconciliations.Input) async throws -> Operations.ListCreditNoteReconciliations.Output
    /// Create Credit Note Reconciliation
    ///
    /// Create Credit Note Reconciliation
    ///
    /// - Remark: HTTP `POST /v2/credit_note_reconciliations`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/post(createCreditNoteReconciliation)`.
    func createCreditNoteReconciliation(_ input: Operations.CreateCreditNoteReconciliation.Input) async throws -> Operations.CreateCreditNoteReconciliation.Output
    /// Show Credit Note Reconciliation
    ///
    /// Show Credit Note Reconciliation
    ///
    /// - Remark: HTTP `GET /v2/credit_note_reconciliations/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/get(showCreditNoteReconciliation)`.
    func showCreditNoteReconciliation(_ input: Operations.ShowCreditNoteReconciliation.Input) async throws -> Operations.ShowCreditNoteReconciliation.Output
    /// Update Credit Note Reconciliation
    ///
    /// Update Credit Note Reconciliation
    ///
    /// - Remark: HTTP `PUT /v2/credit_note_reconciliations/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/put(updateCreditNoteReconciliation)`.
    func updateCreditNoteReconciliation(_ input: Operations.UpdateCreditNoteReconciliation.Input) async throws -> Operations.UpdateCreditNoteReconciliation.Output
    /// Delete Credit Note Reconciliation
    ///
    /// Delete Credit Note Reconciliation
    ///
    /// - Remark: HTTP `DELETE /v2/credit_note_reconciliations/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/delete(deleteCreditNoteReconciliation)`.
    func deleteCreditNoteReconciliation(_ input: Operations.DeleteCreditNoteReconciliation.Input) async throws -> Operations.DeleteCreditNoteReconciliation.Output
    /// Get a list of verified sender email addresses
    ///
    /// Get a list of verified sender email addresses
    ///
    /// - Remark: HTTP `GET /v2/email_addresses`.
    /// - Remark: Generated from `#/paths//v2/email_addresses/get(getAListOfVerifiedSenderEmailAddresses)`.
    func getAListOfVerifiedSenderEmailAddresses(_ input: Operations.GetAListOfVerifiedSenderEmailAddresses.Input) async throws -> Operations.GetAListOfVerifiedSenderEmailAddresses.Output
    /// Mark estimate as sent
    ///
    /// Mark estimate as sent
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_sent`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_sent/put(markEstimateAsSent)`.
    func markEstimateAsSent(_ input: Operations.MarkEstimateAsSent.Input) async throws -> Operations.MarkEstimateAsSent.Output
    /// Mark estimate as draft
    ///
    /// Mark estimate as draft
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_draft`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_draft/put(markEstimateAsDraft)`.
    func markEstimateAsDraft(_ input: Operations.MarkEstimateAsDraft.Input) async throws -> Operations.MarkEstimateAsDraft.Output
    /// Mark estimate as approved
    ///
    /// Mark estimate as approved
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_approved`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_approved/put(markEstimateAsApproved)`.
    func markEstimateAsApproved(_ input: Operations.MarkEstimateAsApproved.Input) async throws -> Operations.MarkEstimateAsApproved.Output
    /// Mark estimate as rejected
    ///
    /// Mark estimate as rejected
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_rejected`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_rejected/put(markEstimateAsRejected)`.
    func markEstimateAsRejected(_ input: Operations.MarkEstimateAsRejected.Input) async throws -> Operations.MarkEstimateAsRejected.Output
    /// Create Estimate Item
    ///
    /// Create Estimate Item
    ///
    /// - Remark: HTTP `POST /v2/estimate_items`.
    /// - Remark: Generated from `#/paths//v2/estimate_items/post(createEstimateItem)`.
    func createEstimateItem(_ input: Operations.CreateEstimateItem.Input) async throws -> Operations.CreateEstimateItem.Output
    /// Update Estimate Item
    ///
    /// Update Estimate Item
    ///
    /// - Remark: HTTP `PUT /v2/estimate_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimate_items/{id}/put(updateEstimateItem)`.
    func updateEstimateItem(_ input: Operations.UpdateEstimateItem.Input) async throws -> Operations.UpdateEstimateItem.Output
    /// Delete Estimate Item
    ///
    /// Delete Estimate Item
    ///
    /// - Remark: HTTP `DELETE /v2/estimate_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimate_items/{id}/delete(deleteEstimateItem)`.
    func deleteEstimateItem(_ input: Operations.DeleteEstimateItem.Input) async throws -> Operations.DeleteEstimateItem.Output
    /// List Estimates
    ///
    /// List Estimates
    ///
    /// - Remark: HTTP `GET /v2/estimates`.
    /// - Remark: Generated from `#/paths//v2/estimates/get(listEstimates)`.
    func listEstimates(_ input: Operations.ListEstimates.Input) async throws -> Operations.ListEstimates.Output
    /// Create Estimate
    ///
    /// Create Estimate
    ///
    /// - Remark: HTTP `POST /v2/estimates`.
    /// - Remark: Generated from `#/paths//v2/estimates/post(createEstimate)`.
    func createEstimate(_ input: Operations.CreateEstimate.Input) async throws -> Operations.CreateEstimate.Output
    /// Show Estimate
    ///
    /// Show Estimate
    ///
    /// - Remark: HTTP `GET /v2/estimates/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/get(showEstimate)`.
    func showEstimate(_ input: Operations.ShowEstimate.Input) async throws -> Operations.ShowEstimate.Output
    /// Update Estimate
    ///
    /// Update Estimate
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/put(updateEstimate)`.
    func updateEstimate(_ input: Operations.UpdateEstimate.Input) async throws -> Operations.UpdateEstimate.Output
    /// Delete Estimate
    ///
    /// Delete Estimate
    ///
    /// - Remark: HTTP `DELETE /v2/estimates/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/delete(deleteEstimate)`.
    func deleteEstimate(_ input: Operations.DeleteEstimate.Input) async throws -> Operations.DeleteEstimate.Output
    /// Show Estimate as PDF
    ///
    /// Show Estimate as PDF
    ///
    /// - Remark: HTTP `GET /v2/estimates/{id}/pdf`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/pdf/get(showEstimateAsPdf)`.
    func showEstimateAsPdf(_ input: Operations.ShowEstimateAsPdf.Input) async throws -> Operations.ShowEstimateAsPdf.Output
    /// List all expenses
    ///
    /// List all expenses
    ///
    /// - Remark: HTTP `GET /v2/expenses`.
    /// - Remark: Generated from `#/paths//v2/expenses/get(listAllExpenses)`.
    func listAllExpenses(_ input: Operations.ListAllExpenses.Input) async throws -> Operations.ListAllExpenses.Output
    /// Create expense
    ///
    /// Create expense
    ///
    /// - Remark: HTTP `POST /v2/expenses`.
    /// - Remark: Generated from `#/paths//v2/expenses/post(createExpense)`.
    func createExpense(_ input: Operations.CreateExpense.Input) async throws -> Operations.CreateExpense.Output
    /// Get a single expense
    ///
    /// Get a single expense
    ///
    /// - Remark: HTTP `GET /v2/expenses/{id}`.
    /// - Remark: Generated from `#/paths//v2/expenses/{id}/get(getASingleExpense)`.
    func getASingleExpense(_ input: Operations.GetASingleExpense.Input) async throws -> Operations.GetASingleExpense.Output
    /// Delete expense
    ///
    /// Delete expense
    ///
    /// - Remark: HTTP `DELETE /v2/expenses/{id}`.
    /// - Remark: Generated from `#/paths//v2/expenses/{id}/delete(deleteExpense)`.
    func deleteExpense(_ input: Operations.DeleteExpense.Input) async throws -> Operations.DeleteExpense.Output
    /// Get mileage settings
    ///
    /// Get mileage settings
    ///
    /// - Remark: HTTP `GET /v2/expenses/mileage_settings`.
    /// - Remark: Generated from `#/paths//v2/expenses/mileage_settings/get(getMileageSettings)`.
    func getMileageSettings(_ input: Operations.GetMileageSettings.Input) async throws -> Operations.GetMileageSettings.Output
    /// Mark invoice as sent
    ///
    /// Mark invoice as sent
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_sent`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_sent/put(markInvoiceAsSent)`.
    func markInvoiceAsSent(_ input: Operations.MarkInvoiceAsSent.Input) async throws -> Operations.MarkInvoiceAsSent.Output
    /// Mark invoice as cancelled
    ///
    /// Mark invoice as cancelled
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_cancelled`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_cancelled/put(markInvoiceAsCancelled)`.
    func markInvoiceAsCancelled(_ input: Operations.MarkInvoiceAsCancelled.Input) async throws -> Operations.MarkInvoiceAsCancelled.Output
    /// Mark invoice as scheduled
    ///
    /// Mark invoice as scheduled
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_scheduled`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_scheduled/put(markInvoiceAsScheduled)`.
    func markInvoiceAsScheduled(_ input: Operations.MarkInvoiceAsScheduled.Input) async throws -> Operations.MarkInvoiceAsScheduled.Output
    /// Mark invoice as draft
    ///
    /// Mark invoice as draft
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_draft`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_draft/put(markInvoiceAsDraft)`.
    func markInvoiceAsDraft(_ input: Operations.MarkInvoiceAsDraft.Input) async throws -> Operations.MarkInvoiceAsDraft.Output
    /// List Invoices
    ///
    /// List Invoices
    ///
    /// - Remark: HTTP `GET /v2/invoices`.
    /// - Remark: Generated from `#/paths//v2/invoices/get(listInvoices)`.
    func listInvoices(_ input: Operations.ListInvoices.Input) async throws -> Operations.ListInvoices.Output
    /// Create Invoice
    ///
    /// Create Invoice
    ///
    /// - Remark: HTTP `POST /v2/invoices`.
    /// - Remark: Generated from `#/paths//v2/invoices/post(createInvoice)`.
    func createInvoice(_ input: Operations.CreateInvoice.Input) async throws -> Operations.CreateInvoice.Output
    /// Show Invoice
    ///
    /// Show Invoice
    ///
    /// - Remark: HTTP `GET /v2/invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/get(showInvoice)`.
    func showInvoice(_ input: Operations.ShowInvoice.Input) async throws -> Operations.ShowInvoice.Output
    /// Update Invoice
    ///
    /// Update Invoice
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/put(updateInvoice)`.
    func updateInvoice(_ input: Operations.UpdateInvoice.Input) async throws -> Operations.UpdateInvoice.Output
    /// Delete Invoice
    ///
    /// Delete Invoice
    ///
    /// - Remark: HTTP `DELETE /v2/invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/delete(deleteInvoice)`.
    func deleteInvoice(_ input: Operations.DeleteInvoice.Input) async throws -> Operations.DeleteInvoice.Output
    /// Get invoice timeline
    ///
    /// Get invoice timeline
    ///
    /// - Remark: HTTP `GET /v2/invoices/timeline`.
    /// - Remark: Generated from `#/paths//v2/invoices/timeline/get(getInvoiceTimeline)`.
    func getInvoiceTimeline(_ input: Operations.GetInvoiceTimeline.Input) async throws -> Operations.GetInvoiceTimeline.Output
    /// Show Invoice as PDF
    ///
    /// Show Invoice as PDF
    ///
    /// - Remark: HTTP `GET /v2/invoices/{id}/pdf`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/pdf/get(showInvoiceAsPdf)`.
    func showInvoiceAsPdf(_ input: Operations.ShowInvoiceAsPdf.Input) async throws -> Operations.ShowInvoiceAsPdf.Output
    /// Send Invoice Email
    ///
    /// Send Invoice Email
    ///
    /// - Remark: HTTP `POST /v2/invoices/{id}/send_email`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/send_email/post(sendInvoiceEmail)`.
    func sendInvoiceEmail(_ input: Operations.SendInvoiceEmail.Input) async throws -> Operations.SendInvoiceEmail.Output
    /// Take Payment using GoCardless Direct Debit Mandate
    ///
    /// Only available for invoices which fit the following criteria:
    ///
    /// - The invoice must be sent
    /// - The invoice must have gocardless_preauth available and enabled as a payment method
    /// - The invoice must not have already had a payment taken for it
    ///
    /// - Remark: HTTP `POST /v2/invoices/{id}/direct_debit`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/direct_debit/post(takePaymentUsingGocardlessDirectDebitMandate)`.
    func takePaymentUsingGocardlessDirectDebitMandate(_ input: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input) async throws -> Operations.TakePaymentUsingGocardlessDirectDebitMandate.Output
    /// Create Invoice Item
    ///
    /// Create Invoice Item
    ///
    /// - Remark: HTTP `POST /v2/invoice_items`.
    /// - Remark: Generated from `#/paths//v2/invoice_items/post(createInvoiceItem)`.
    func createInvoiceItem(_ input: Operations.CreateInvoiceItem.Input) async throws -> Operations.CreateInvoiceItem.Output
    /// List all journal sets
    ///
    /// List all journal sets
    ///
    /// - Remark: HTTP `GET /v2/journal_sets`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/get(listAllJournalSets)`.
    func listAllJournalSets(_ input: Operations.ListAllJournalSets.Input) async throws -> Operations.ListAllJournalSets.Output
    /// Create a journal set
    ///
    /// Create a journal set
    ///
    /// - Remark: HTTP `POST /v2/journal_sets`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/post(createAJournalSet)`.
    func createAJournalSet(_ input: Operations.CreateAJournalSet.Input) async throws -> Operations.CreateAJournalSet.Output
    /// Update a journal set
    ///
    /// Update a journal set
    ///
    /// - Remark: HTTP `PUT /v2/journal_sets`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/put(updateAJournalSet)`.
    func updateAJournalSet(_ input: Operations.UpdateAJournalSet.Input) async throws -> Operations.UpdateAJournalSet.Output
    /// Get a single journal set
    ///
    /// Get a single journal set
    ///
    /// - Remark: HTTP `GET /v2/journal_sets/{id}`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/{id}/get(getASingleJournalSet)`.
    func getASingleJournalSet(_ input: Operations.GetASingleJournalSet.Input) async throws -> Operations.GetASingleJournalSet.Output
    /// Delete a journal set
    ///
    /// Delete a journal set
    ///
    /// - Remark: HTTP `DELETE /v2/journal_sets/{id}`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/{id}/delete(deleteAJournalSet)`.
    func deleteAJournalSet(_ input: Operations.DeleteAJournalSet.Input) async throws -> Operations.DeleteAJournalSet.Output
    /// Get the Opening Balances
    ///
    /// Get the Opening Balances
    ///
    /// - Remark: HTTP `GET /v2/journal_sets/opening_balances`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/opening_balances/get(getTheOpeningBalances)`.
    func getTheOpeningBalances(_ input: Operations.GetTheOpeningBalances.Input) async throws -> Operations.GetTheOpeningBalances.Output
    /// List Notes
    ///
    /// List Notes
    ///
    /// - Remark: HTTP `GET /v2/notes`.
    /// - Remark: Generated from `#/paths//v2/notes/get(listNotes)`.
    func listNotes(_ input: Operations.ListNotes.Input) async throws -> Operations.ListNotes.Output
    /// Get a single note
    ///
    /// Get a single note
    ///
    /// - Remark: HTTP `GET /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/get(getASingleNote)`.
    func getASingleNote(_ input: Operations.GetASingleNote.Input) async throws -> Operations.GetASingleNote.Output
    /// Create a Note
    ///
    /// Create a Note
    ///
    /// - Remark: HTTP `POST /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/post(createANote)`.
    func createANote(_ input: Operations.CreateANote.Input) async throws -> Operations.CreateANote.Output
    /// Update a Note
    ///
    /// Update a Note
    ///
    /// - Remark: HTTP `PUT /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/put(updateANote)`.
    func updateANote(_ input: Operations.UpdateANote.Input) async throws -> Operations.UpdateANote.Output
    /// Delete a note
    ///
    /// Delete a note
    ///
    /// - Remark: HTTP `DELETE /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/delete(deleteANote)`.
    func deleteANote(_ input: Operations.DeleteANote.Input) async throws -> Operations.DeleteANote.Output
    /// List all periods for a given tax year
    ///
    /// List all periods for a given tax year
    ///
    /// - Remark: HTTP `GET /v2/payroll/{year}`.
    /// - Remark: Generated from `#/paths//v2/payroll/{year}/get(listAllPeriodsForAGivenTaxYear)`.
    func listAllPeriodsForAGivenTaxYear(_ input: Operations.ListAllPeriodsForAGivenTaxYear.Input) async throws -> Operations.ListAllPeriodsForAGivenTaxYear.Output
    /// List all payslips for a given period
    ///
    /// List all payslips for a given period
    ///
    /// - Remark: HTTP `GET /v2/payroll/{year}/{period}`.
    /// - Remark: Generated from `#/paths//v2/payroll/{year}/{period}/get(listAllPayslipsForAGivenPeriod)`.
    func listAllPayslipsForAGivenPeriod(_ input: Operations.ListAllPayslipsForAGivenPeriod.Input) async throws -> Operations.ListAllPayslipsForAGivenPeriod.Output
    /// List all profiles for a given tax year
    ///
    /// List all profiles for a given tax year
    ///
    /// - Remark: HTTP `GET /v2/payroll_profiles/{year}`.
    /// - Remark: Generated from `#/paths//v2/payroll_profiles/{year}/get(listAllProfilesForAGivenTaxYear)`.
    func listAllProfilesForAGivenTaxYear(_ input: Operations.ListAllProfilesForAGivenTaxYear.Input) async throws -> Operations.ListAllProfilesForAGivenTaxYear.Output
    /// List all Price List Items
    ///
    /// List all Price List Items
    ///
    /// - Remark: HTTP `GET /v2/price_list_items`.
    /// - Remark: Generated from `#/paths//v2/price_list_items/get(listAllPriceListItems)`.
    func listAllPriceListItems(_ input: Operations.ListAllPriceListItems.Input) async throws -> Operations.ListAllPriceListItems.Output
    /// Get a single Price List Item
    ///
    /// Get a single Price List Item
    ///
    /// - Remark: HTTP `GET /v2/price_list_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/price_list_items/{id}/get(getASinglePriceListItem)`.
    func getASinglePriceListItem(_ input: Operations.GetASinglePriceListItem.Input) async throws -> Operations.GetASinglePriceListItem.Output
    /// Get the P&L summary
    ///
    /// Get the P&L summary
    ///
    /// - Remark: HTTP `GET /v2/accounting/profit_and_loss/summary`.
    /// - Remark: Generated from `#/paths//v2/accounting/profit_and_loss/summary/get(getThePLSummary)`.
    func getThePLSummary(_ input: Operations.GetThePLSummary.Input) async throws -> Operations.GetThePLSummary.Output
    /// List all properties
    ///
    /// List all properties
    ///
    /// - Remark: HTTP `GET /v2/properties`.
    /// - Remark: Generated from `#/paths//v2/properties/get(listAllProperties)`.
    func listAllProperties(_ input: Operations.ListAllProperties.Input) async throws -> Operations.ListAllProperties.Output
    /// Create a new property
    ///
    /// Create a new property
    ///
    /// - Remark: HTTP `POST /v2/properties`.
    /// - Remark: Generated from `#/paths//v2/properties/post(createANewProperty)`.
    func createANewProperty(_ input: Operations.CreateANewProperty.Input) async throws -> Operations.CreateANewProperty.Output
    /// Get a single property
    ///
    /// Get a single property
    ///
    /// - Remark: HTTP `GET /v2/properties/{id}`.
    /// - Remark: Generated from `#/paths//v2/properties/{id}/get(getASingleProperty)`.
    func getASingleProperty(_ input: Operations.GetASingleProperty.Input) async throws -> Operations.GetASingleProperty.Output
    /// Update a property
    ///
    /// Update a property
    ///
    /// - Remark: HTTP `PUT /v2/properties/{id}`.
    /// - Remark: Generated from `#/paths//v2/properties/{id}/put(updateAProperty)`.
    func updateAProperty(_ input: Operations.UpdateAProperty.Input) async throws -> Operations.UpdateAProperty.Output
    /// Delete a property
    ///
    /// Delete a property
    ///
    /// - Remark: HTTP `DELETE /v2/properties/{id}`.
    /// - Remark: Generated from `#/paths//v2/properties/{id}/delete(deleteAProperty)`.
    func deleteAProperty(_ input: Operations.DeleteAProperty.Input) async throws -> Operations.DeleteAProperty.Output
    /// List Projects
    ///
    /// List Projects
    ///
    /// - Remark: HTTP `GET /v2/projects`.
    /// - Remark: Generated from `#/paths//v2/projects/get(listProjects)`.
    func listProjects(_ input: Operations.ListProjects.Input) async throws -> Operations.ListProjects.Output
    /// Create Project
    ///
    /// Create Project
    ///
    /// - Remark: HTTP `POST /v2/projects`.
    /// - Remark: Generated from `#/paths//v2/projects/post(createProject)`.
    func createProject(_ input: Operations.CreateProject.Input) async throws -> Operations.CreateProject.Output
    /// Show Project
    ///
    /// Show Project
    ///
    /// - Remark: HTTP `GET /v2/projects/{id}`.
    /// - Remark: Generated from `#/paths//v2/projects/{id}/get(showProject)`.
    func showProject(_ input: Operations.ShowProject.Input) async throws -> Operations.ShowProject.Output
    /// Update Project
    ///
    /// Update Project
    ///
    /// - Remark: HTTP `PUT /v2/projects/{id}`.
    /// - Remark: Generated from `#/paths//v2/projects/{id}/put(updateProject)`.
    func updateProject(_ input: Operations.UpdateProject.Input) async throws -> Operations.UpdateProject.Output
    /// Delete Project
    ///
    /// Delete Project
    ///
    /// - Remark: HTTP `DELETE /v2/projects/{id}`.
    /// - Remark: Generated from `#/paths//v2/projects/{id}/delete(deleteProject)`.
    func deleteProject(_ input: Operations.DeleteProject.Input) async throws -> Operations.DeleteProject.Output
    /// List all recurring invoices
    ///
    /// List all recurring invoices
    ///
    /// - Remark: HTTP `GET /v2/recurring_invoices`.
    /// - Remark: Generated from `#/paths//v2/recurring_invoices/get(listAllRecurringInvoices)`.
    func listAllRecurringInvoices(_ input: Operations.ListAllRecurringInvoices.Input) async throws -> Operations.ListAllRecurringInvoices.Output
    /// Show Recurring Invoice
    ///
    /// Show Recurring Invoice
    ///
    /// - Remark: HTTP `GET /v2/recurring_invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/recurring_invoices/{id}/get(showRecurringInvoice)`.
    func showRecurringInvoice(_ input: Operations.ShowRecurringInvoice.Input) async throws -> Operations.ShowRecurringInvoice.Output
    /// List all sales tax periods for a company
    ///
    /// Only available to US and Universal companies
    ///
    /// - Remark: HTTP `GET /v2/sales_tax_periods`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/get(listAllSalesTaxPeriodsForACompany)`.
    func listAllSalesTaxPeriodsForACompany(_ input: Operations.ListAllSalesTaxPeriodsForACompany.Input) async throws -> Operations.ListAllSalesTaxPeriodsForACompany.Output
    /// Create a sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `POST /v2/sales_tax_periods`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/post(createASalesTaxPeriod)`.
    func createASalesTaxPeriod(_ input: Operations.CreateASalesTaxPeriod.Input) async throws -> Operations.CreateASalesTaxPeriod.Output
    /// Get a single sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `GET /v2/sales_tax_periods/{id}`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/get(getASingleSalesTaxPeriod)`.
    func getASingleSalesTaxPeriod(_ input: Operations.GetASingleSalesTaxPeriod.Input) async throws -> Operations.GetASingleSalesTaxPeriod.Output
    /// Update a sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `PUT /v2/sales_tax_periods/{id}`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/put(updateASalesTaxPeriod)`.
    func updateASalesTaxPeriod(_ input: Operations.UpdateASalesTaxPeriod.Input) async throws -> Operations.UpdateASalesTaxPeriod.Output
    /// Delete a sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `DELETE /v2/sales_tax_periods/{id}`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/delete(deleteASalesTaxPeriod)`.
    func deleteASalesTaxPeriod(_ input: Operations.DeleteASalesTaxPeriod.Input) async throws -> Operations.DeleteASalesTaxPeriod.Output
    /// List all Stock Items
    ///
    /// List all Stock Items
    ///
    /// - Remark: HTTP `GET /v2/stock_items`.
    /// - Remark: Generated from `#/paths//v2/stock_items/get(listAllStockItems)`.
    func listAllStockItems(_ input: Operations.ListAllStockItems.Input) async throws -> Operations.ListAllStockItems.Output
    /// Get a single Stock Item
    ///
    /// Get a single Stock Item
    ///
    /// - Remark: HTTP `GET /v2/stock_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/stock_items/{id}/get(getASingleStockItem)`.
    func getASingleStockItem(_ input: Operations.GetASingleStockItem.Input) async throws -> Operations.GetASingleStockItem.Output
    /// List all tasks
    ///
    /// List all tasks
    ///
    /// - Remark: HTTP `GET /v2/tasks`.
    /// - Remark: Generated from `#/paths//v2/tasks/get(listAllTasks)`.
    func listAllTasks(_ input: Operations.ListAllTasks.Input) async throws -> Operations.ListAllTasks.Output
    /// Create a task under a certain project
    ///
    /// Create a task under a certain project
    ///
    /// - Remark: HTTP `POST /v2/tasks`.
    /// - Remark: Generated from `#/paths//v2/tasks/post(createATaskUnderACertainProject)`.
    func createATaskUnderACertainProject(_ input: Operations.CreateATaskUnderACertainProject.Input) async throws -> Operations.CreateATaskUnderACertainProject.Output
    /// Get a single task
    ///
    /// Get a single task
    ///
    /// - Remark: HTTP `GET /v2/tasks/{id}`.
    /// - Remark: Generated from `#/paths//v2/tasks/{id}/get(getASingleTask)`.
    func getASingleTask(_ input: Operations.GetASingleTask.Input) async throws -> Operations.GetASingleTask.Output
    /// Update a task
    ///
    /// Update a task
    ///
    /// - Remark: HTTP `PUT /v2/tasks/{id}`.
    /// - Remark: Generated from `#/paths//v2/tasks/{id}/put(updateATask)`.
    func updateATask(_ input: Operations.UpdateATask.Input) async throws -> Operations.UpdateATask.Output
    /// Delete Task
    ///
    /// Delete Task
    ///
    /// - Remark: HTTP `DELETE /v2/tasks/{id}`.
    /// - Remark: Generated from `#/paths//v2/tasks/{id}/delete(deleteTask)`.
    func deleteTask(_ input: Operations.DeleteTask.Input) async throws -> Operations.DeleteTask.Output
    /// Start a Timer
    ///
    /// Start a Timer
    ///
    /// - Remark: HTTP `POST /v2/timeslips/{id}/timer`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/timer/post(startATimer)`.
    func startATimer(_ input: Operations.StartATimer.Input) async throws -> Operations.StartATimer.Output
    /// Stop a Timer
    ///
    /// Stop a Timer
    ///
    /// - Remark: HTTP `DELETE /v2/timeslips/{id}/timer`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/timer/delete(stopATimer)`.
    func stopATimer(_ input: Operations.StopATimer.Input) async throws -> Operations.StopATimer.Output
    /// List all timeslips
    ///
    /// List all timeslips
    ///
    /// - Remark: HTTP `GET /v2/timeslips`.
    /// - Remark: Generated from `#/paths//v2/timeslips/get(listAllTimeslips)`.
    func listAllTimeslips(_ input: Operations.ListAllTimeslips.Input) async throws -> Operations.ListAllTimeslips.Output
    /// Create a timeslip
    ///
    /// Create a timeslip
    ///
    /// - Remark: HTTP `POST /v2/timeslips`.
    /// - Remark: Generated from `#/paths//v2/timeslips/post(createATimeslip)`.
    func createATimeslip(_ input: Operations.CreateATimeslip.Input) async throws -> Operations.CreateATimeslip.Output
    /// Get a single timeslip
    ///
    /// Get a single timeslip
    ///
    /// - Remark: HTTP `GET /v2/timeslips/{id}`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/get(getASingleTimeslip)`.
    func getASingleTimeslip(_ input: Operations.GetASingleTimeslip.Input) async throws -> Operations.GetASingleTimeslip.Output
    /// Update a timeslip
    ///
    /// Update a timeslip
    ///
    /// - Remark: HTTP `PUT /v2/timeslips/{id}`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/put(updateATimeslip)`.
    func updateATimeslip(_ input: Operations.UpdateATimeslip.Input) async throws -> Operations.UpdateATimeslip.Output
    /// Delete a timeslip
    ///
    /// Delete a timeslip
    ///
    /// - Remark: HTTP `DELETE /v2/timeslips/{id}`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/delete(deleteATimeslip)`.
    func deleteATimeslip(_ input: Operations.DeleteATimeslip.Input) async throws -> Operations.DeleteATimeslip.Output
    /// Get the trial balance summary
    ///
    /// Get the trial balance summary
    ///
    /// - Remark: HTTP `GET /v2/accounting/trial_balance/summary`.
    /// - Remark: Generated from `#/paths//v2/accounting/trial_balance/summary/get(getTheTrialBalanceSummary)`.
    func getTheTrialBalanceSummary(_ input: Operations.GetTheTrialBalanceSummary.Input) async throws -> Operations.GetTheTrialBalanceSummary.Output
    /// Get the opening balances
    ///
    /// Get the opening balances
    ///
    /// - Remark: HTTP `GET /v2/accounting/trial_balance/summary/opening_balances`.
    /// - Remark: Generated from `#/paths//v2/accounting/trial_balance/summary/opening_balances/get(getTheOpeningBalances1)`.
    func getTheOpeningBalances1(_ input: Operations.GetTheOpeningBalances1.Input) async throws -> Operations.GetTheOpeningBalances1.Output
    /// List All Users
    ///
    /// List All Users
    ///
    /// - Remark: HTTP `GET /v2/users`.
    /// - Remark: Generated from `#/paths//v2/users/get(listAllUsers)`.
    func listAllUsers(_ input: Operations.ListAllUsers.Input) async throws -> Operations.ListAllUsers.Output
    /// Create a user
    ///
    /// Create a user
    ///
    /// - Remark: HTTP `POST /v2/users`.
    /// - Remark: Generated from `#/paths//v2/users/post(createAUser)`.
    func createAUser(_ input: Operations.CreateAUser.Input) async throws -> Operations.CreateAUser.Output
    /// Get a single user
    ///
    /// Get a single user
    ///
    /// - Remark: HTTP `GET /v2/users/{id}`.
    /// - Remark: Generated from `#/paths//v2/users/{id}/get(getASingleUser)`.
    func getASingleUser(_ input: Operations.GetASingleUser.Input) async throws -> Operations.GetASingleUser.Output
    /// Update a user
    ///
    /// Update a user
    ///
    /// - Remark: HTTP `PUT /v2/users/{id}`.
    /// - Remark: Generated from `#/paths//v2/users/{id}/put(updateAUser)`.
    func updateAUser(_ input: Operations.UpdateAUser.Input) async throws -> Operations.UpdateAUser.Output
    /// Delete a user
    ///
    /// Delete a user
    ///
    /// - Remark: HTTP `DELETE /v2/users/{id}`.
    /// - Remark: Generated from `#/paths//v2/users/{id}/delete(deleteAUser)`.
    func deleteAUser(_ input: Operations.DeleteAUser.Input) async throws -> Operations.DeleteAUser.Output
    /// Get personal profile
    ///
    /// Get personal profile
    ///
    /// - Remark: HTTP `GET /v2/users/me`.
    /// - Remark: Generated from `#/paths//v2/users/me/get(getPersonalProfile)`.
    func getPersonalProfile(_ input: Operations.GetPersonalProfile.Input) async throws -> Operations.GetPersonalProfile.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Refresh access token
    ///
    /// Request an new Access Token using an existing Refresh Token (you'll need to provide a Refresh Token in the request body params)
    ///
    /// https://dev.freeagent.com/docs/oauth/#refreshing-the-access-token
    ///
    /// - Remark: HTTP `POST /v2/token_endpoint`.
    /// - Remark: Generated from `#/paths//v2/token_endpoint/post(refreshAccessToken)`.
    public func refreshAccessToken(
        headers: Operations.RefreshAccessToken.Input.Headers = .init(),
        body: Operations.RefreshAccessToken.Input.Body? = nil
    ) async throws -> Operations.RefreshAccessToken.Output {
        try await refreshAccessToken(Operations.RefreshAccessToken.Input(
            headers: headers,
            body: body
        ))
    }
    /// List all clients
    ///
    /// List all clients
    ///
    /// - Remark: HTTP `GET /v2/clients`.
    /// - Remark: Generated from `#/paths//v2/clients/get(listAllClients)`.
    public func listAllClients(headers: Operations.ListAllClients.Input.Headers = .init()) async throws -> Operations.ListAllClients.Output {
        try await listAllClients(Operations.ListAllClients.Input(headers: headers))
    }
    /// List all account managers
    ///
    /// List all account managers
    ///
    /// - Remark: HTTP `GET /v2/account_managers`.
    /// - Remark: Generated from `#/paths//v2/account_managers/get(listAllAccountManagers)`.
    public func listAllAccountManagers(headers: Operations.ListAllAccountManagers.Input.Headers = .init()) async throws -> Operations.ListAllAccountManagers.Output {
        try await listAllAccountManagers(Operations.ListAllAccountManagers.Input(headers: headers))
    }
    /// Get a single account manager
    ///
    /// Get a single account manager
    ///
    /// - Remark: HTTP `GET /v2/account_managers/{id}`.
    /// - Remark: Generated from `#/paths//v2/account_managers/{id}/get(getASingleAccountManager)`.
    public func getASingleAccountManager(
        path: Operations.GetASingleAccountManager.Input.Path,
        headers: Operations.GetASingleAccountManager.Input.Headers = .init()
    ) async throws -> Operations.GetASingleAccountManager.Output {
        try await getASingleAccountManager(Operations.GetASingleAccountManager.Input(
            path: path,
            headers: headers
        ))
    }
    /// Show Attachment
    ///
    /// Show Attachment
    ///
    /// - Remark: HTTP `GET /v2/attachments/{id}`.
    /// - Remark: Generated from `#/paths//v2/attachments/{id}/get(showAttachment)`.
    public func showAttachment(
        path: Operations.ShowAttachment.Input.Path,
        headers: Operations.ShowAttachment.Input.Headers = .init()
    ) async throws -> Operations.ShowAttachment.Output {
        try await showAttachment(Operations.ShowAttachment.Input(
            path: path,
            headers: headers
        ))
    }
    /// Delete Attachment
    ///
    /// Delete Attachment
    ///
    /// - Remark: HTTP `DELETE /v2/attachments/{id}`.
    /// - Remark: Generated from `#/paths//v2/attachments/{id}/delete(deleteAttachment)`.
    public func deleteAttachment(
        path: Operations.DeleteAttachment.Input.Path,
        headers: Operations.DeleteAttachment.Input.Headers = .init()
    ) async throws -> Operations.DeleteAttachment.Output {
        try await deleteAttachment(Operations.DeleteAttachment.Input(
            path: path,
            headers: headers
        ))
    }
    /// List Bank Accounts
    ///
    /// List Bank Accounts
    ///
    /// - Remark: HTTP `GET /v2/bank_accounts`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/get(listBankAccounts)`.
    public func listBankAccounts(
        query: Operations.ListBankAccounts.Input.Query = .init(),
        headers: Operations.ListBankAccounts.Input.Headers = .init()
    ) async throws -> Operations.ListBankAccounts.Output {
        try await listBankAccounts(Operations.ListBankAccounts.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create Bank Account
    ///
    /// Create Bank Account
    ///
    /// - Remark: HTTP `POST /v2/bank_accounts`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/post(createBankAccount)`.
    public func createBankAccount(
        headers: Operations.CreateBankAccount.Input.Headers = .init(),
        body: Operations.CreateBankAccount.Input.Body? = nil
    ) async throws -> Operations.CreateBankAccount.Output {
        try await createBankAccount(Operations.CreateBankAccount.Input(
            headers: headers,
            body: body
        ))
    }
    /// Show Bank Account
    ///
    /// Show Bank Account
    ///
    /// - Remark: HTTP `GET /v2/bank_accounts/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/get(showBankAccount)`.
    public func showBankAccount(
        path: Operations.ShowBankAccount.Input.Path,
        headers: Operations.ShowBankAccount.Input.Headers = .init()
    ) async throws -> Operations.ShowBankAccount.Output {
        try await showBankAccount(Operations.ShowBankAccount.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update Bank Account
    ///
    /// Update Bank Account
    ///
    /// - Remark: HTTP `PUT /v2/bank_accounts/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/put(updateBankAccount)`.
    public func updateBankAccount(
        path: Operations.UpdateBankAccount.Input.Path,
        headers: Operations.UpdateBankAccount.Input.Headers = .init(),
        body: Operations.UpdateBankAccount.Input.Body? = nil
    ) async throws -> Operations.UpdateBankAccount.Output {
        try await updateBankAccount(Operations.UpdateBankAccount.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Bank Account
    ///
    /// Delete Bank Account
    ///
    /// - Remark: HTTP `DELETE /v2/bank_accounts/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/delete(deleteBankAccount)`.
    public func deleteBankAccount(
        path: Operations.DeleteBankAccount.Input.Path,
        headers: Operations.DeleteBankAccount.Input.Headers = .init()
    ) async throws -> Operations.DeleteBankAccount.Output {
        try await deleteBankAccount(Operations.DeleteBankAccount.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all bank transaction explanations
    ///
    /// List all bank transaction explanations
    ///
    /// - Remark: HTTP `GET /v2/bank_transaction_explanations`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/get(listAllBankTransactionExplanations)`.
    public func listAllBankTransactionExplanations(
        query: Operations.ListAllBankTransactionExplanations.Input.Query = .init(),
        headers: Operations.ListAllBankTransactionExplanations.Input.Headers = .init()
    ) async throws -> Operations.ListAllBankTransactionExplanations.Output {
        try await listAllBankTransactionExplanations(Operations.ListAllBankTransactionExplanations.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create a bank transaction explanation
    ///
    /// Create a bank transaction explanation
    ///
    /// - Remark: HTTP `POST /v2/bank_transaction_explanations`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/post(createABankTransactionExplanation)`.
    public func createABankTransactionExplanation(
        headers: Operations.CreateABankTransactionExplanation.Input.Headers = .init(),
        body: Operations.CreateABankTransactionExplanation.Input.Body? = nil
    ) async throws -> Operations.CreateABankTransactionExplanation.Output {
        try await createABankTransactionExplanation(Operations.CreateABankTransactionExplanation.Input(
            headers: headers,
            body: body
        ))
    }
    /// Update a bank transaction explanation
    ///
    /// Update a bank transaction explanation
    ///
    /// - Remark: HTTP `PUT /v2/bank_transaction_explanations`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/put(updateABankTransactionExplanation)`.
    public func updateABankTransactionExplanation(
        headers: Operations.UpdateABankTransactionExplanation.Input.Headers = .init(),
        body: Operations.UpdateABankTransactionExplanation.Input.Body? = nil
    ) async throws -> Operations.UpdateABankTransactionExplanation.Output {
        try await updateABankTransactionExplanation(Operations.UpdateABankTransactionExplanation.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a single bank transaction explanation
    ///
    /// Get a single bank transaction explanation
    ///
    /// - Remark: HTTP `GET /v2/bank_transaction_explanations/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/{id}/get(getASingleBankTransactionExplanation)`.
    public func getASingleBankTransactionExplanation(
        path: Operations.GetASingleBankTransactionExplanation.Input.Path,
        headers: Operations.GetASingleBankTransactionExplanation.Input.Headers = .init()
    ) async throws -> Operations.GetASingleBankTransactionExplanation.Output {
        try await getASingleBankTransactionExplanation(Operations.GetASingleBankTransactionExplanation.Input(
            path: path,
            headers: headers
        ))
    }
    /// Delete a bank transaction explanation
    ///
    /// Delete a bank transaction explanation
    ///
    /// - Remark: HTTP `DELETE /v2/bank_transaction_explanations/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/{id}/delete(deleteABankTransactionExplanation)`.
    public func deleteABankTransactionExplanation(
        path: Operations.DeleteABankTransactionExplanation.Input.Path,
        headers: Operations.DeleteABankTransactionExplanation.Input.Headers = .init(),
        body: Operations.DeleteABankTransactionExplanation.Input.Body? = nil
    ) async throws -> Operations.DeleteABankTransactionExplanation.Output {
        try await deleteABankTransactionExplanation(Operations.DeleteABankTransactionExplanation.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List all bank transactions under a certain bank account
    ///
    /// List all bank transactions under a certain bank account
    ///
    /// - Remark: HTTP `GET /v2/bank_transactions`.
    /// - Remark: Generated from `#/paths//v2/bank_transactions/get(listAllBankTransactionsUnderACertainBankAccount)`.
    public func listAllBankTransactionsUnderACertainBankAccount(
        query: Operations.ListAllBankTransactionsUnderACertainBankAccount.Input.Query = .init(),
        headers: Operations.ListAllBankTransactionsUnderACertainBankAccount.Input.Headers = .init()
    ) async throws -> Operations.ListAllBankTransactionsUnderACertainBankAccount.Output {
        try await listAllBankTransactionsUnderACertainBankAccount(Operations.ListAllBankTransactionsUnderACertainBankAccount.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get a single bank transaction
    ///
    /// Get a single bank transaction
    ///
    /// - Remark: HTTP `GET /v2/bank_transactions/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_transactions/{id}/get(getASingleBankTransaction)`.
    public func getASingleBankTransaction(
        path: Operations.GetASingleBankTransaction.Input.Path,
        headers: Operations.GetASingleBankTransaction.Input.Headers = .init()
    ) async throws -> Operations.GetASingleBankTransaction.Output {
        try await getASingleBankTransaction(Operations.GetASingleBankTransaction.Input(
            path: path,
            headers: headers
        ))
    }
    /// Upload a bank statement
    ///
    /// Upload a bank statement
    ///
    /// - Remark: HTTP `POST /v2/bank_transactions/statement`.
    /// - Remark: Generated from `#/paths//v2/bank_transactions/statement/post(uploadABankStatement)`.
    public func uploadABankStatement(
        query: Operations.UploadABankStatement.Input.Query = .init(),
        headers: Operations.UploadABankStatement.Input.Headers = .init(),
        body: Operations.UploadABankStatement.Input.Body? = nil
    ) async throws -> Operations.UploadABankStatement.Output {
        try await uploadABankStatement(Operations.UploadABankStatement.Input(
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// List Bills
    ///
    /// List Bills
    ///
    /// - Remark: HTTP `GET /v2/bills`.
    /// - Remark: Generated from `#/paths//v2/bills/get(listBills)`.
    public func listBills(
        query: Operations.ListBills.Input.Query = .init(),
        headers: Operations.ListBills.Input.Headers = .init()
    ) async throws -> Operations.ListBills.Output {
        try await listBills(Operations.ListBills.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create Bill
    ///
    /// Create Bill
    ///
    /// - Remark: HTTP `POST /v2/bills`.
    /// - Remark: Generated from `#/paths//v2/bills/post(createBill)`.
    public func createBill(
        headers: Operations.CreateBill.Input.Headers = .init(),
        body: Operations.CreateBill.Input.Body? = nil
    ) async throws -> Operations.CreateBill.Output {
        try await createBill(Operations.CreateBill.Input(
            headers: headers,
            body: body
        ))
    }
    /// Show Bill
    ///
    /// Show Bill
    ///
    /// - Remark: HTTP `GET /v2/bills/{id}`.
    /// - Remark: Generated from `#/paths//v2/bills/{id}/get(showBill)`.
    public func showBill(
        path: Operations.ShowBill.Input.Path,
        headers: Operations.ShowBill.Input.Headers = .init()
    ) async throws -> Operations.ShowBill.Output {
        try await showBill(Operations.ShowBill.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update Bill
    ///
    /// Update Bill
    ///
    /// - Remark: HTTP `PUT /v2/bills/{id}`.
    /// - Remark: Generated from `#/paths//v2/bills/{id}/put(updateBill)`.
    public func updateBill(
        path: Operations.UpdateBill.Input.Path,
        headers: Operations.UpdateBill.Input.Headers = .init(),
        body: Operations.UpdateBill.Input.Body? = nil
    ) async throws -> Operations.UpdateBill.Output {
        try await updateBill(Operations.UpdateBill.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Bill
    ///
    /// Delete Bill
    ///
    /// - Remark: HTTP `DELETE /v2/bills/{id}`.
    /// - Remark: Generated from `#/paths//v2/bills/{id}/delete(deleteBill)`.
    public func deleteBill(
        path: Operations.DeleteBill.Input.Path,
        headers: Operations.DeleteBill.Input.Headers = .init(),
        body: Operations.DeleteBill.Input.Body? = nil
    ) async throws -> Operations.DeleteBill.Output {
        try await deleteBill(Operations.DeleteBill.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List Bill Items
    ///
    /// List Bill Items
    ///
    /// - Remark: HTTP `GET /v2/bill_items`.
    /// - Remark: Generated from `#/paths//v2/bill_items/get(listBillItems)`.
    public func listBillItems(
        query: Operations.ListBillItems.Input.Query = .init(),
        headers: Operations.ListBillItems.Input.Headers = .init()
    ) async throws -> Operations.ListBillItems.Output {
        try await listBillItems(Operations.ListBillItems.Input(
            query: query,
            headers: headers
        ))
    }
    /// Show Bill Item
    ///
    /// Show Bill Item
    ///
    /// - Remark: HTTP `GET /v2/bill_items/{bill_item_id}`.
    /// - Remark: Generated from `#/paths//v2/bill_items/{bill_item_id}/get(showBillItem)`.
    public func showBillItem(
        path: Operations.ShowBillItem.Input.Path,
        headers: Operations.ShowBillItem.Input.Headers = .init()
    ) async throws -> Operations.ShowBillItem.Output {
        try await showBillItem(Operations.ShowBillItem.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all capital assets
    ///
    /// List all capital assets
    ///
    /// - Remark: HTTP `GET /v2/capital_assets`.
    /// - Remark: Generated from `#/paths//v2/capital_assets/get(listAllCapitalAssets)`.
    public func listAllCapitalAssets(
        query: Operations.ListAllCapitalAssets.Input.Query = .init(),
        headers: Operations.ListAllCapitalAssets.Input.Headers = .init()
    ) async throws -> Operations.ListAllCapitalAssets.Output {
        try await listAllCapitalAssets(Operations.ListAllCapitalAssets.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get a single capital asset
    ///
    /// Get a single capital asset
    ///
    /// - Remark: HTTP `GET /v2/capital_assets/{id}/`.
    /// - Remark: Generated from `#/paths//v2/capital_assets/{id}//get(getASingleCapitalAsset)`.
    public func getASingleCapitalAsset(
        path: Operations.GetASingleCapitalAsset.Input.Path,
        query: Operations.GetASingleCapitalAsset.Input.Query = .init(),
        headers: Operations.GetASingleCapitalAsset.Input.Headers = .init()
    ) async throws -> Operations.GetASingleCapitalAsset.Output {
        try await getASingleCapitalAsset(Operations.GetASingleCapitalAsset.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// List all capital asset types
    ///
    /// List all capital asset types
    ///
    /// - Remark: HTTP `GET /v2/capital_asset_types`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/get(listAllCapitalAssetTypes)`.
    public func listAllCapitalAssetTypes(headers: Operations.ListAllCapitalAssetTypes.Input.Headers = .init()) async throws -> Operations.ListAllCapitalAssetTypes.Output {
        try await listAllCapitalAssetTypes(Operations.ListAllCapitalAssetTypes.Input(headers: headers))
    }
    /// Create capital asset type
    ///
    /// Create capital asset type
    ///
    /// - Remark: HTTP `POST /v2/capital_asset_types`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/post(createCapitalAssetType)`.
    public func createCapitalAssetType(
        headers: Operations.CreateCapitalAssetType.Input.Headers = .init(),
        body: Operations.CreateCapitalAssetType.Input.Body? = nil
    ) async throws -> Operations.CreateCapitalAssetType.Output {
        try await createCapitalAssetType(Operations.CreateCapitalAssetType.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a single capital asset type
    ///
    /// Get a single capital asset type
    ///
    /// - Remark: HTTP `GET /v2/capital_asset_types/{id}`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/get(getASingleCapitalAssetType)`.
    public func getASingleCapitalAssetType(
        path: Operations.GetASingleCapitalAssetType.Input.Path,
        headers: Operations.GetASingleCapitalAssetType.Input.Headers = .init()
    ) async throws -> Operations.GetASingleCapitalAssetType.Output {
        try await getASingleCapitalAssetType(Operations.GetASingleCapitalAssetType.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update capital asset type
    ///
    /// Update capital asset type
    ///
    /// - Remark: HTTP `PUT /v2/capital_asset_types/{id}`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/put(updateCapitalAssetType)`.
    public func updateCapitalAssetType(
        path: Operations.UpdateCapitalAssetType.Input.Path,
        headers: Operations.UpdateCapitalAssetType.Input.Headers = .init(),
        body: Operations.UpdateCapitalAssetType.Input.Body? = nil
    ) async throws -> Operations.UpdateCapitalAssetType.Output {
        try await updateCapitalAssetType(Operations.UpdateCapitalAssetType.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete capital asset type
    ///
    /// Delete capital asset type
    ///
    /// - Remark: HTTP `DELETE /v2/capital_asset_types/{id}`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/delete(deleteCapitalAssetType)`.
    public func deleteCapitalAssetType(
        path: Operations.DeleteCapitalAssetType.Input.Path,
        headers: Operations.DeleteCapitalAssetType.Input.Headers = .init()
    ) async throws -> Operations.DeleteCapitalAssetType.Output {
        try await deleteCapitalAssetType(Operations.DeleteCapitalAssetType.Input(
            path: path,
            headers: headers
        ))
    }
    /// Cashflow summary for a given date range
    ///
    /// Cashflow summary for a given date range
    ///
    /// - Remark: HTTP `GET /v2/cashflow`.
    /// - Remark: Generated from `#/paths//v2/cashflow/get(cashflowSummaryForAGivenDateRange)`.
    public func cashflowSummaryForAGivenDateRange(
        query: Operations.CashflowSummaryForAGivenDateRange.Input.Query = .init(),
        headers: Operations.CashflowSummaryForAGivenDateRange.Input.Headers = .init()
    ) async throws -> Operations.CashflowSummaryForAGivenDateRange.Output {
        try await cashflowSummaryForAGivenDateRange(Operations.CashflowSummaryForAGivenDateRange.Input(
            query: query,
            headers: headers
        ))
    }
    /// List Categories
    ///
    /// List Categories
    ///
    /// - Remark: HTTP `GET /v2/categories`.
    /// - Remark: Generated from `#/paths//v2/categories/get(listCategories)`.
    public func listCategories(headers: Operations.ListCategories.Input.Headers = .init()) async throws -> Operations.ListCategories.Output {
        try await listCategories(Operations.ListCategories.Input(headers: headers))
    }
    /// Create category
    ///
    /// Documentation: https://dev.freeagent.com/docs/categories#create-a-category
    ///
    /// - Remark: HTTP `POST /v2/categories`.
    /// - Remark: Generated from `#/paths//v2/categories/post(createCategory)`.
    public func createCategory(
        headers: Operations.CreateCategory.Input.Headers = .init(),
        body: Operations.CreateCategory.Input.Body? = nil
    ) async throws -> Operations.CreateCategory.Output {
        try await createCategory(Operations.CreateCategory.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a single category
    ///
    /// Get a single category
    ///
    /// - Remark: HTTP `GET /v2/categories/{nominal_code}`.
    /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/get(getASingleCategory)`.
    public func getASingleCategory(
        path: Operations.GetASingleCategory.Input.Path,
        headers: Operations.GetASingleCategory.Input.Headers = .init()
    ) async throws -> Operations.GetASingleCategory.Output {
        try await getASingleCategory(Operations.GetASingleCategory.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update category
    ///
    /// Update category
    ///
    /// - Remark: HTTP `PUT /v2/categories/{nominal_code}`.
    /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/put(updateCategory)`.
    public func updateCategory(
        path: Operations.UpdateCategory.Input.Path,
        headers: Operations.UpdateCategory.Input.Headers = .init(),
        body: Operations.UpdateCategory.Input.Body? = nil
    ) async throws -> Operations.UpdateCategory.Output {
        try await updateCategory(Operations.UpdateCategory.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete category
    ///
    /// Delete category
    ///
    /// - Remark: HTTP `DELETE /v2/categories/{nominal_code}`.
    /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/delete(deleteCategory)`.
    public func deleteCategory(
        path: Operations.DeleteCategory.Input.Path,
        headers: Operations.DeleteCategory.Input.Headers = .init()
    ) async throws -> Operations.DeleteCategory.Output {
        try await deleteCategory(Operations.DeleteCategory.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all CIS bands for a company
    ///
    /// List all CIS bands for a company
    ///
    /// - Remark: HTTP `GET /v2/cis_bands`.
    /// - Remark: Generated from `#/paths//v2/cis_bands/get(listAllCisBandsForACompany)`.
    public func listAllCisBandsForACompany(headers: Operations.ListAllCisBandsForACompany.Input.Headers = .init()) async throws -> Operations.ListAllCisBandsForACompany.Output {
        try await listAllCisBandsForACompany(Operations.ListAllCisBandsForACompany.Input(headers: headers))
    }
    /// Company Details
    ///
    /// Company Details
    ///
    /// - Remark: HTTP `GET /v2/company`.
    /// - Remark: Generated from `#/paths//v2/company/get(companyDetails)`.
    public func companyDetails(headers: Operations.CompanyDetails.Input.Headers = .init()) async throws -> Operations.CompanyDetails.Output {
        try await companyDetails(Operations.CompanyDetails.Input(headers: headers))
    }
    /// List business categories
    ///
    /// List business categories
    ///
    /// - Remark: HTTP `GET /v2/company/business_categories`.
    /// - Remark: Generated from `#/paths//v2/company/business_categories/get(listBusinessCategories)`.
    public func listBusinessCategories(headers: Operations.ListBusinessCategories.Input.Headers = .init()) async throws -> Operations.ListBusinessCategories.Output {
        try await listBusinessCategories(Operations.ListBusinessCategories.Input(headers: headers))
    }
    /// Show Tax Timeline
    ///
    /// Show Tax Timeline
    ///
    /// - Remark: HTTP `GET /v2/company/tax_timeline`.
    /// - Remark: Generated from `#/paths//v2/company/tax_timeline/get(showTaxTimeline)`.
    public func showTaxTimeline(headers: Operations.ShowTaxTimeline.Input.Headers = .init()) async throws -> Operations.ShowTaxTimeline.Output {
        try await showTaxTimeline(Operations.ShowTaxTimeline.Input(headers: headers))
    }
    /// List Contacts
    ///
    /// List Contacts
    ///
    /// - Remark: HTTP `GET /v2/contacts`.
    /// - Remark: Generated from `#/paths//v2/contacts/get(listContacts)`.
    public func listContacts(headers: Operations.ListContacts.Input.Headers = .init()) async throws -> Operations.ListContacts.Output {
        try await listContacts(Operations.ListContacts.Input(headers: headers))
    }
    /// Create Contact
    ///
    /// Create Contact
    ///
    /// - Remark: HTTP `POST /v2/contacts`.
    /// - Remark: Generated from `#/paths//v2/contacts/post(createContact)`.
    public func createContact(
        headers: Operations.CreateContact.Input.Headers = .init(),
        body: Operations.CreateContact.Input.Body? = nil
    ) async throws -> Operations.CreateContact.Output {
        try await createContact(Operations.CreateContact.Input(
            headers: headers,
            body: body
        ))
    }
    /// Show Contact
    ///
    /// Show Contact
    ///
    /// - Remark: HTTP `GET /v2/contacts/{id}`.
    /// - Remark: Generated from `#/paths//v2/contacts/{id}/get(showContact)`.
    public func showContact(
        path: Operations.ShowContact.Input.Path,
        headers: Operations.ShowContact.Input.Headers = .init()
    ) async throws -> Operations.ShowContact.Output {
        try await showContact(Operations.ShowContact.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update Contact
    ///
    /// Update Contact
    ///
    /// - Remark: HTTP `PUT /v2/contacts/{id}`.
    /// - Remark: Generated from `#/paths//v2/contacts/{id}/put(updateContact)`.
    public func updateContact(
        path: Operations.UpdateContact.Input.Path,
        headers: Operations.UpdateContact.Input.Headers = .init(),
        body: Operations.UpdateContact.Input.Body? = nil
    ) async throws -> Operations.UpdateContact.Output {
        try await updateContact(Operations.UpdateContact.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Contact
    ///
    /// Delete Contact
    ///
    /// - Remark: HTTP `DELETE /v2/contacts/{id}`.
    /// - Remark: Generated from `#/paths//v2/contacts/{id}/delete(deleteContact)`.
    public func deleteContact(
        path: Operations.DeleteContact.Input.Path,
        headers: Operations.DeleteContact.Input.Headers = .init(),
        body: Operations.DeleteContact.Input.Body? = nil
    ) async throws -> Operations.DeleteContact.Output {
        try await deleteContact(Operations.DeleteContact.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Mark Credit Note as sent
    ///
    /// Mark Credit Note as sent
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}/transitions/mark_as_sent`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_sent/put(markCreditNoteAsSent)`.
    public func markCreditNoteAsSent(
        path: Operations.MarkCreditNoteAsSent.Input.Path,
        headers: Operations.MarkCreditNoteAsSent.Input.Headers = .init()
    ) async throws -> Operations.MarkCreditNoteAsSent.Output {
        try await markCreditNoteAsSent(Operations.MarkCreditNoteAsSent.Input(
            path: path,
            headers: headers
        ))
    }
    /// Mark Credit Note as cancelled
    ///
    /// Mark Credit Note as cancelled
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}/transitions/mark_as_cancelled`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_cancelled/put(markCreditNoteAsCancelled)`.
    public func markCreditNoteAsCancelled(
        path: Operations.MarkCreditNoteAsCancelled.Input.Path,
        headers: Operations.MarkCreditNoteAsCancelled.Input.Headers = .init()
    ) async throws -> Operations.MarkCreditNoteAsCancelled.Output {
        try await markCreditNoteAsCancelled(Operations.MarkCreditNoteAsCancelled.Input(
            path: path,
            headers: headers
        ))
    }
    /// Mark Credit Notes as draft
    ///
    /// Mark Credit Notes as draft
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}/transitions/mark_as_draft`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_draft/put(markCreditNotesAsDraft)`.
    public func markCreditNotesAsDraft(
        path: Operations.MarkCreditNotesAsDraft.Input.Path,
        headers: Operations.MarkCreditNotesAsDraft.Input.Headers = .init()
    ) async throws -> Operations.MarkCreditNotesAsDraft.Output {
        try await markCreditNotesAsDraft(Operations.MarkCreditNotesAsDraft.Input(
            path: path,
            headers: headers
        ))
    }
    /// List Credit Notes
    ///
    /// List Credit Notes
    ///
    /// - Remark: HTTP `GET /v2/credit_notes`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/get(listCreditNotes)`.
    public func listCreditNotes(
        query: Operations.ListCreditNotes.Input.Query = .init(),
        headers: Operations.ListCreditNotes.Input.Headers = .init()
    ) async throws -> Operations.ListCreditNotes.Output {
        try await listCreditNotes(Operations.ListCreditNotes.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create Credit Note
    ///
    /// Create Credit Note
    ///
    /// - Remark: HTTP `POST /v2/credit_notes`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/post(createCreditNote)`.
    public func createCreditNote(
        headers: Operations.CreateCreditNote.Input.Headers = .init(),
        body: Operations.CreateCreditNote.Input.Body? = nil
    ) async throws -> Operations.CreateCreditNote.Output {
        try await createCreditNote(Operations.CreateCreditNote.Input(
            headers: headers,
            body: body
        ))
    }
    /// Show Credit Note
    ///
    /// Show Credit Note
    ///
    /// - Remark: HTTP `GET /v2/credit_notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/get(showCreditNote)`.
    public func showCreditNote(
        path: Operations.ShowCreditNote.Input.Path,
        headers: Operations.ShowCreditNote.Input.Headers = .init()
    ) async throws -> Operations.ShowCreditNote.Output {
        try await showCreditNote(Operations.ShowCreditNote.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update Credit Note
    ///
    /// Update Credit Note
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/put(updateCreditNote)`.
    public func updateCreditNote(
        path: Operations.UpdateCreditNote.Input.Path,
        headers: Operations.UpdateCreditNote.Input.Headers = .init(),
        body: Operations.UpdateCreditNote.Input.Body? = nil
    ) async throws -> Operations.UpdateCreditNote.Output {
        try await updateCreditNote(Operations.UpdateCreditNote.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Credit Notes
    ///
    /// Delete Credit Notes
    ///
    /// - Remark: HTTP `DELETE /v2/credit_notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/delete(deleteCreditNotes)`.
    public func deleteCreditNotes(
        path: Operations.DeleteCreditNotes.Input.Path,
        headers: Operations.DeleteCreditNotes.Input.Headers = .init(),
        body: Operations.DeleteCreditNotes.Input.Body
    ) async throws -> Operations.DeleteCreditNotes.Output {
        try await deleteCreditNotes(Operations.DeleteCreditNotes.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Show Credit Note as PDF
    ///
    /// Show Credit Note as PDF
    ///
    /// - Remark: HTTP `GET /v2/credit_notes/{id}/pdf`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/pdf/get(showCreditNoteAsPdf)`.
    public func showCreditNoteAsPdf(
        path: Operations.ShowCreditNoteAsPdf.Input.Path,
        headers: Operations.ShowCreditNoteAsPdf.Input.Headers = .init()
    ) async throws -> Operations.ShowCreditNoteAsPdf.Output {
        try await showCreditNoteAsPdf(Operations.ShowCreditNoteAsPdf.Input(
            path: path,
            headers: headers
        ))
    }
    /// Send Credit Note Email
    ///
    /// Send Credit Note Email
    ///
    /// - Remark: HTTP `POST /v2/credit_notes/{id}/send_email`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/send_email/post(sendCreditNoteEmail)`.
    public func sendCreditNoteEmail(
        path: Operations.SendCreditNoteEmail.Input.Path,
        headers: Operations.SendCreditNoteEmail.Input.Headers = .init(),
        body: Operations.SendCreditNoteEmail.Input.Body? = nil
    ) async throws -> Operations.SendCreditNoteEmail.Output {
        try await sendCreditNoteEmail(Operations.SendCreditNoteEmail.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List Credit Note Reconciliations
    ///
    /// List Credit Note Reconciliations
    ///
    /// - Remark: HTTP `GET /v2/credit_note_reconciliations`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/get(listCreditNoteReconciliations)`.
    public func listCreditNoteReconciliations(
        query: Operations.ListCreditNoteReconciliations.Input.Query = .init(),
        headers: Operations.ListCreditNoteReconciliations.Input.Headers = .init()
    ) async throws -> Operations.ListCreditNoteReconciliations.Output {
        try await listCreditNoteReconciliations(Operations.ListCreditNoteReconciliations.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create Credit Note Reconciliation
    ///
    /// Create Credit Note Reconciliation
    ///
    /// - Remark: HTTP `POST /v2/credit_note_reconciliations`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/post(createCreditNoteReconciliation)`.
    public func createCreditNoteReconciliation(
        headers: Operations.CreateCreditNoteReconciliation.Input.Headers = .init(),
        body: Operations.CreateCreditNoteReconciliation.Input.Body? = nil
    ) async throws -> Operations.CreateCreditNoteReconciliation.Output {
        try await createCreditNoteReconciliation(Operations.CreateCreditNoteReconciliation.Input(
            headers: headers,
            body: body
        ))
    }
    /// Show Credit Note Reconciliation
    ///
    /// Show Credit Note Reconciliation
    ///
    /// - Remark: HTTP `GET /v2/credit_note_reconciliations/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/get(showCreditNoteReconciliation)`.
    public func showCreditNoteReconciliation(
        path: Operations.ShowCreditNoteReconciliation.Input.Path,
        headers: Operations.ShowCreditNoteReconciliation.Input.Headers = .init()
    ) async throws -> Operations.ShowCreditNoteReconciliation.Output {
        try await showCreditNoteReconciliation(Operations.ShowCreditNoteReconciliation.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update Credit Note Reconciliation
    ///
    /// Update Credit Note Reconciliation
    ///
    /// - Remark: HTTP `PUT /v2/credit_note_reconciliations/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/put(updateCreditNoteReconciliation)`.
    public func updateCreditNoteReconciliation(
        path: Operations.UpdateCreditNoteReconciliation.Input.Path,
        headers: Operations.UpdateCreditNoteReconciliation.Input.Headers = .init(),
        body: Operations.UpdateCreditNoteReconciliation.Input.Body? = nil
    ) async throws -> Operations.UpdateCreditNoteReconciliation.Output {
        try await updateCreditNoteReconciliation(Operations.UpdateCreditNoteReconciliation.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Credit Note Reconciliation
    ///
    /// Delete Credit Note Reconciliation
    ///
    /// - Remark: HTTP `DELETE /v2/credit_note_reconciliations/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/delete(deleteCreditNoteReconciliation)`.
    public func deleteCreditNoteReconciliation(
        path: Operations.DeleteCreditNoteReconciliation.Input.Path,
        headers: Operations.DeleteCreditNoteReconciliation.Input.Headers = .init(),
        body: Operations.DeleteCreditNoteReconciliation.Input.Body
    ) async throws -> Operations.DeleteCreditNoteReconciliation.Output {
        try await deleteCreditNoteReconciliation(Operations.DeleteCreditNoteReconciliation.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a list of verified sender email addresses
    ///
    /// Get a list of verified sender email addresses
    ///
    /// - Remark: HTTP `GET /v2/email_addresses`.
    /// - Remark: Generated from `#/paths//v2/email_addresses/get(getAListOfVerifiedSenderEmailAddresses)`.
    public func getAListOfVerifiedSenderEmailAddresses(headers: Operations.GetAListOfVerifiedSenderEmailAddresses.Input.Headers = .init()) async throws -> Operations.GetAListOfVerifiedSenderEmailAddresses.Output {
        try await getAListOfVerifiedSenderEmailAddresses(Operations.GetAListOfVerifiedSenderEmailAddresses.Input(headers: headers))
    }
    /// Mark estimate as sent
    ///
    /// Mark estimate as sent
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_sent`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_sent/put(markEstimateAsSent)`.
    public func markEstimateAsSent(
        path: Operations.MarkEstimateAsSent.Input.Path,
        headers: Operations.MarkEstimateAsSent.Input.Headers = .init()
    ) async throws -> Operations.MarkEstimateAsSent.Output {
        try await markEstimateAsSent(Operations.MarkEstimateAsSent.Input(
            path: path,
            headers: headers
        ))
    }
    /// Mark estimate as draft
    ///
    /// Mark estimate as draft
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_draft`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_draft/put(markEstimateAsDraft)`.
    public func markEstimateAsDraft(
        path: Operations.MarkEstimateAsDraft.Input.Path,
        headers: Operations.MarkEstimateAsDraft.Input.Headers = .init()
    ) async throws -> Operations.MarkEstimateAsDraft.Output {
        try await markEstimateAsDraft(Operations.MarkEstimateAsDraft.Input(
            path: path,
            headers: headers
        ))
    }
    /// Mark estimate as approved
    ///
    /// Mark estimate as approved
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_approved`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_approved/put(markEstimateAsApproved)`.
    public func markEstimateAsApproved(
        path: Operations.MarkEstimateAsApproved.Input.Path,
        headers: Operations.MarkEstimateAsApproved.Input.Headers = .init()
    ) async throws -> Operations.MarkEstimateAsApproved.Output {
        try await markEstimateAsApproved(Operations.MarkEstimateAsApproved.Input(
            path: path,
            headers: headers
        ))
    }
    /// Mark estimate as rejected
    ///
    /// Mark estimate as rejected
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_rejected`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_rejected/put(markEstimateAsRejected)`.
    public func markEstimateAsRejected(
        path: Operations.MarkEstimateAsRejected.Input.Path,
        headers: Operations.MarkEstimateAsRejected.Input.Headers = .init()
    ) async throws -> Operations.MarkEstimateAsRejected.Output {
        try await markEstimateAsRejected(Operations.MarkEstimateAsRejected.Input(
            path: path,
            headers: headers
        ))
    }
    /// Create Estimate Item
    ///
    /// Create Estimate Item
    ///
    /// - Remark: HTTP `POST /v2/estimate_items`.
    /// - Remark: Generated from `#/paths//v2/estimate_items/post(createEstimateItem)`.
    public func createEstimateItem(
        headers: Operations.CreateEstimateItem.Input.Headers = .init(),
        body: Operations.CreateEstimateItem.Input.Body? = nil
    ) async throws -> Operations.CreateEstimateItem.Output {
        try await createEstimateItem(Operations.CreateEstimateItem.Input(
            headers: headers,
            body: body
        ))
    }
    /// Update Estimate Item
    ///
    /// Update Estimate Item
    ///
    /// - Remark: HTTP `PUT /v2/estimate_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimate_items/{id}/put(updateEstimateItem)`.
    public func updateEstimateItem(
        path: Operations.UpdateEstimateItem.Input.Path,
        headers: Operations.UpdateEstimateItem.Input.Headers = .init(),
        body: Operations.UpdateEstimateItem.Input.Body? = nil
    ) async throws -> Operations.UpdateEstimateItem.Output {
        try await updateEstimateItem(Operations.UpdateEstimateItem.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Estimate Item
    ///
    /// Delete Estimate Item
    ///
    /// - Remark: HTTP `DELETE /v2/estimate_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimate_items/{id}/delete(deleteEstimateItem)`.
    public func deleteEstimateItem(
        path: Operations.DeleteEstimateItem.Input.Path,
        headers: Operations.DeleteEstimateItem.Input.Headers = .init(),
        body: Operations.DeleteEstimateItem.Input.Body? = nil
    ) async throws -> Operations.DeleteEstimateItem.Output {
        try await deleteEstimateItem(Operations.DeleteEstimateItem.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List Estimates
    ///
    /// List Estimates
    ///
    /// - Remark: HTTP `GET /v2/estimates`.
    /// - Remark: Generated from `#/paths//v2/estimates/get(listEstimates)`.
    public func listEstimates(
        query: Operations.ListEstimates.Input.Query = .init(),
        headers: Operations.ListEstimates.Input.Headers = .init()
    ) async throws -> Operations.ListEstimates.Output {
        try await listEstimates(Operations.ListEstimates.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create Estimate
    ///
    /// Create Estimate
    ///
    /// - Remark: HTTP `POST /v2/estimates`.
    /// - Remark: Generated from `#/paths//v2/estimates/post(createEstimate)`.
    public func createEstimate(
        headers: Operations.CreateEstimate.Input.Headers = .init(),
        body: Operations.CreateEstimate.Input.Body? = nil
    ) async throws -> Operations.CreateEstimate.Output {
        try await createEstimate(Operations.CreateEstimate.Input(
            headers: headers,
            body: body
        ))
    }
    /// Show Estimate
    ///
    /// Show Estimate
    ///
    /// - Remark: HTTP `GET /v2/estimates/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/get(showEstimate)`.
    public func showEstimate(
        path: Operations.ShowEstimate.Input.Path,
        headers: Operations.ShowEstimate.Input.Headers = .init()
    ) async throws -> Operations.ShowEstimate.Output {
        try await showEstimate(Operations.ShowEstimate.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update Estimate
    ///
    /// Update Estimate
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/put(updateEstimate)`.
    public func updateEstimate(
        path: Operations.UpdateEstimate.Input.Path,
        headers: Operations.UpdateEstimate.Input.Headers = .init(),
        body: Operations.UpdateEstimate.Input.Body? = nil
    ) async throws -> Operations.UpdateEstimate.Output {
        try await updateEstimate(Operations.UpdateEstimate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Estimate
    ///
    /// Delete Estimate
    ///
    /// - Remark: HTTP `DELETE /v2/estimates/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/delete(deleteEstimate)`.
    public func deleteEstimate(
        path: Operations.DeleteEstimate.Input.Path,
        headers: Operations.DeleteEstimate.Input.Headers = .init(),
        body: Operations.DeleteEstimate.Input.Body? = nil
    ) async throws -> Operations.DeleteEstimate.Output {
        try await deleteEstimate(Operations.DeleteEstimate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Show Estimate as PDF
    ///
    /// Show Estimate as PDF
    ///
    /// - Remark: HTTP `GET /v2/estimates/{id}/pdf`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/pdf/get(showEstimateAsPdf)`.
    public func showEstimateAsPdf(
        path: Operations.ShowEstimateAsPdf.Input.Path,
        headers: Operations.ShowEstimateAsPdf.Input.Headers = .init()
    ) async throws -> Operations.ShowEstimateAsPdf.Output {
        try await showEstimateAsPdf(Operations.ShowEstimateAsPdf.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all expenses
    ///
    /// List all expenses
    ///
    /// - Remark: HTTP `GET /v2/expenses`.
    /// - Remark: Generated from `#/paths//v2/expenses/get(listAllExpenses)`.
    public func listAllExpenses(headers: Operations.ListAllExpenses.Input.Headers = .init()) async throws -> Operations.ListAllExpenses.Output {
        try await listAllExpenses(Operations.ListAllExpenses.Input(headers: headers))
    }
    /// Create expense
    ///
    /// Create expense
    ///
    /// - Remark: HTTP `POST /v2/expenses`.
    /// - Remark: Generated from `#/paths//v2/expenses/post(createExpense)`.
    public func createExpense(
        headers: Operations.CreateExpense.Input.Headers = .init(),
        body: Operations.CreateExpense.Input.Body? = nil
    ) async throws -> Operations.CreateExpense.Output {
        try await createExpense(Operations.CreateExpense.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a single expense
    ///
    /// Get a single expense
    ///
    /// - Remark: HTTP `GET /v2/expenses/{id}`.
    /// - Remark: Generated from `#/paths//v2/expenses/{id}/get(getASingleExpense)`.
    public func getASingleExpense(
        path: Operations.GetASingleExpense.Input.Path,
        headers: Operations.GetASingleExpense.Input.Headers = .init()
    ) async throws -> Operations.GetASingleExpense.Output {
        try await getASingleExpense(Operations.GetASingleExpense.Input(
            path: path,
            headers: headers
        ))
    }
    /// Delete expense
    ///
    /// Delete expense
    ///
    /// - Remark: HTTP `DELETE /v2/expenses/{id}`.
    /// - Remark: Generated from `#/paths//v2/expenses/{id}/delete(deleteExpense)`.
    public func deleteExpense(
        path: Operations.DeleteExpense.Input.Path,
        headers: Operations.DeleteExpense.Input.Headers = .init(),
        body: Operations.DeleteExpense.Input.Body
    ) async throws -> Operations.DeleteExpense.Output {
        try await deleteExpense(Operations.DeleteExpense.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get mileage settings
    ///
    /// Get mileage settings
    ///
    /// - Remark: HTTP `GET /v2/expenses/mileage_settings`.
    /// - Remark: Generated from `#/paths//v2/expenses/mileage_settings/get(getMileageSettings)`.
    public func getMileageSettings(headers: Operations.GetMileageSettings.Input.Headers = .init()) async throws -> Operations.GetMileageSettings.Output {
        try await getMileageSettings(Operations.GetMileageSettings.Input(headers: headers))
    }
    /// Mark invoice as sent
    ///
    /// Mark invoice as sent
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_sent`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_sent/put(markInvoiceAsSent)`.
    public func markInvoiceAsSent(
        path: Operations.MarkInvoiceAsSent.Input.Path,
        headers: Operations.MarkInvoiceAsSent.Input.Headers = .init()
    ) async throws -> Operations.MarkInvoiceAsSent.Output {
        try await markInvoiceAsSent(Operations.MarkInvoiceAsSent.Input(
            path: path,
            headers: headers
        ))
    }
    /// Mark invoice as cancelled
    ///
    /// Mark invoice as cancelled
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_cancelled`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_cancelled/put(markInvoiceAsCancelled)`.
    public func markInvoiceAsCancelled(
        path: Operations.MarkInvoiceAsCancelled.Input.Path,
        headers: Operations.MarkInvoiceAsCancelled.Input.Headers = .init()
    ) async throws -> Operations.MarkInvoiceAsCancelled.Output {
        try await markInvoiceAsCancelled(Operations.MarkInvoiceAsCancelled.Input(
            path: path,
            headers: headers
        ))
    }
    /// Mark invoice as scheduled
    ///
    /// Mark invoice as scheduled
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_scheduled`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_scheduled/put(markInvoiceAsScheduled)`.
    public func markInvoiceAsScheduled(
        path: Operations.MarkInvoiceAsScheduled.Input.Path,
        headers: Operations.MarkInvoiceAsScheduled.Input.Headers = .init()
    ) async throws -> Operations.MarkInvoiceAsScheduled.Output {
        try await markInvoiceAsScheduled(Operations.MarkInvoiceAsScheduled.Input(
            path: path,
            headers: headers
        ))
    }
    /// Mark invoice as draft
    ///
    /// Mark invoice as draft
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_draft`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_draft/put(markInvoiceAsDraft)`.
    public func markInvoiceAsDraft(
        path: Operations.MarkInvoiceAsDraft.Input.Path,
        headers: Operations.MarkInvoiceAsDraft.Input.Headers = .init()
    ) async throws -> Operations.MarkInvoiceAsDraft.Output {
        try await markInvoiceAsDraft(Operations.MarkInvoiceAsDraft.Input(
            path: path,
            headers: headers
        ))
    }
    /// List Invoices
    ///
    /// List Invoices
    ///
    /// - Remark: HTTP `GET /v2/invoices`.
    /// - Remark: Generated from `#/paths//v2/invoices/get(listInvoices)`.
    public func listInvoices(
        query: Operations.ListInvoices.Input.Query = .init(),
        headers: Operations.ListInvoices.Input.Headers = .init()
    ) async throws -> Operations.ListInvoices.Output {
        try await listInvoices(Operations.ListInvoices.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create Invoice
    ///
    /// Create Invoice
    ///
    /// - Remark: HTTP `POST /v2/invoices`.
    /// - Remark: Generated from `#/paths//v2/invoices/post(createInvoice)`.
    public func createInvoice(
        headers: Operations.CreateInvoice.Input.Headers = .init(),
        body: Operations.CreateInvoice.Input.Body? = nil
    ) async throws -> Operations.CreateInvoice.Output {
        try await createInvoice(Operations.CreateInvoice.Input(
            headers: headers,
            body: body
        ))
    }
    /// Show Invoice
    ///
    /// Show Invoice
    ///
    /// - Remark: HTTP `GET /v2/invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/get(showInvoice)`.
    public func showInvoice(
        path: Operations.ShowInvoice.Input.Path,
        headers: Operations.ShowInvoice.Input.Headers = .init()
    ) async throws -> Operations.ShowInvoice.Output {
        try await showInvoice(Operations.ShowInvoice.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update Invoice
    ///
    /// Update Invoice
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/put(updateInvoice)`.
    public func updateInvoice(
        path: Operations.UpdateInvoice.Input.Path,
        headers: Operations.UpdateInvoice.Input.Headers = .init(),
        body: Operations.UpdateInvoice.Input.Body? = nil
    ) async throws -> Operations.UpdateInvoice.Output {
        try await updateInvoice(Operations.UpdateInvoice.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Invoice
    ///
    /// Delete Invoice
    ///
    /// - Remark: HTTP `DELETE /v2/invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/delete(deleteInvoice)`.
    public func deleteInvoice(
        path: Operations.DeleteInvoice.Input.Path,
        headers: Operations.DeleteInvoice.Input.Headers = .init(),
        body: Operations.DeleteInvoice.Input.Body
    ) async throws -> Operations.DeleteInvoice.Output {
        try await deleteInvoice(Operations.DeleteInvoice.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get invoice timeline
    ///
    /// Get invoice timeline
    ///
    /// - Remark: HTTP `GET /v2/invoices/timeline`.
    /// - Remark: Generated from `#/paths//v2/invoices/timeline/get(getInvoiceTimeline)`.
    public func getInvoiceTimeline(headers: Operations.GetInvoiceTimeline.Input.Headers = .init()) async throws -> Operations.GetInvoiceTimeline.Output {
        try await getInvoiceTimeline(Operations.GetInvoiceTimeline.Input(headers: headers))
    }
    /// Show Invoice as PDF
    ///
    /// Show Invoice as PDF
    ///
    /// - Remark: HTTP `GET /v2/invoices/{id}/pdf`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/pdf/get(showInvoiceAsPdf)`.
    public func showInvoiceAsPdf(
        path: Operations.ShowInvoiceAsPdf.Input.Path,
        headers: Operations.ShowInvoiceAsPdf.Input.Headers = .init()
    ) async throws -> Operations.ShowInvoiceAsPdf.Output {
        try await showInvoiceAsPdf(Operations.ShowInvoiceAsPdf.Input(
            path: path,
            headers: headers
        ))
    }
    /// Send Invoice Email
    ///
    /// Send Invoice Email
    ///
    /// - Remark: HTTP `POST /v2/invoices/{id}/send_email`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/send_email/post(sendInvoiceEmail)`.
    public func sendInvoiceEmail(
        path: Operations.SendInvoiceEmail.Input.Path,
        headers: Operations.SendInvoiceEmail.Input.Headers = .init(),
        body: Operations.SendInvoiceEmail.Input.Body? = nil
    ) async throws -> Operations.SendInvoiceEmail.Output {
        try await sendInvoiceEmail(Operations.SendInvoiceEmail.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Take Payment using GoCardless Direct Debit Mandate
    ///
    /// Only available for invoices which fit the following criteria:
    ///
    /// - The invoice must be sent
    /// - The invoice must have gocardless_preauth available and enabled as a payment method
    /// - The invoice must not have already had a payment taken for it
    ///
    /// - Remark: HTTP `POST /v2/invoices/{id}/direct_debit`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/direct_debit/post(takePaymentUsingGocardlessDirectDebitMandate)`.
    public func takePaymentUsingGocardlessDirectDebitMandate(
        path: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input.Path,
        headers: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input.Headers = .init(),
        body: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input.Body? = nil
    ) async throws -> Operations.TakePaymentUsingGocardlessDirectDebitMandate.Output {
        try await takePaymentUsingGocardlessDirectDebitMandate(Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Create Invoice Item
    ///
    /// Create Invoice Item
    ///
    /// - Remark: HTTP `POST /v2/invoice_items`.
    /// - Remark: Generated from `#/paths//v2/invoice_items/post(createInvoiceItem)`.
    public func createInvoiceItem(
        headers: Operations.CreateInvoiceItem.Input.Headers = .init(),
        body: Operations.CreateInvoiceItem.Input.Body? = nil
    ) async throws -> Operations.CreateInvoiceItem.Output {
        try await createInvoiceItem(Operations.CreateInvoiceItem.Input(
            headers: headers,
            body: body
        ))
    }
    /// List all journal sets
    ///
    /// List all journal sets
    ///
    /// - Remark: HTTP `GET /v2/journal_sets`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/get(listAllJournalSets)`.
    public func listAllJournalSets(
        query: Operations.ListAllJournalSets.Input.Query = .init(),
        headers: Operations.ListAllJournalSets.Input.Headers = .init()
    ) async throws -> Operations.ListAllJournalSets.Output {
        try await listAllJournalSets(Operations.ListAllJournalSets.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create a journal set
    ///
    /// Create a journal set
    ///
    /// - Remark: HTTP `POST /v2/journal_sets`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/post(createAJournalSet)`.
    public func createAJournalSet(
        headers: Operations.CreateAJournalSet.Input.Headers = .init(),
        body: Operations.CreateAJournalSet.Input.Body? = nil
    ) async throws -> Operations.CreateAJournalSet.Output {
        try await createAJournalSet(Operations.CreateAJournalSet.Input(
            headers: headers,
            body: body
        ))
    }
    /// Update a journal set
    ///
    /// Update a journal set
    ///
    /// - Remark: HTTP `PUT /v2/journal_sets`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/put(updateAJournalSet)`.
    public func updateAJournalSet(
        headers: Operations.UpdateAJournalSet.Input.Headers = .init(),
        body: Operations.UpdateAJournalSet.Input.Body? = nil
    ) async throws -> Operations.UpdateAJournalSet.Output {
        try await updateAJournalSet(Operations.UpdateAJournalSet.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a single journal set
    ///
    /// Get a single journal set
    ///
    /// - Remark: HTTP `GET /v2/journal_sets/{id}`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/{id}/get(getASingleJournalSet)`.
    public func getASingleJournalSet(
        path: Operations.GetASingleJournalSet.Input.Path,
        headers: Operations.GetASingleJournalSet.Input.Headers = .init()
    ) async throws -> Operations.GetASingleJournalSet.Output {
        try await getASingleJournalSet(Operations.GetASingleJournalSet.Input(
            path: path,
            headers: headers
        ))
    }
    /// Delete a journal set
    ///
    /// Delete a journal set
    ///
    /// - Remark: HTTP `DELETE /v2/journal_sets/{id}`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/{id}/delete(deleteAJournalSet)`.
    public func deleteAJournalSet(
        path: Operations.DeleteAJournalSet.Input.Path,
        headers: Operations.DeleteAJournalSet.Input.Headers = .init()
    ) async throws -> Operations.DeleteAJournalSet.Output {
        try await deleteAJournalSet(Operations.DeleteAJournalSet.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get the Opening Balances
    ///
    /// Get the Opening Balances
    ///
    /// - Remark: HTTP `GET /v2/journal_sets/opening_balances`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/opening_balances/get(getTheOpeningBalances)`.
    public func getTheOpeningBalances(headers: Operations.GetTheOpeningBalances.Input.Headers = .init()) async throws -> Operations.GetTheOpeningBalances.Output {
        try await getTheOpeningBalances(Operations.GetTheOpeningBalances.Input(headers: headers))
    }
    /// List Notes
    ///
    /// List Notes
    ///
    /// - Remark: HTTP `GET /v2/notes`.
    /// - Remark: Generated from `#/paths//v2/notes/get(listNotes)`.
    public func listNotes(
        query: Operations.ListNotes.Input.Query = .init(),
        headers: Operations.ListNotes.Input.Headers = .init()
    ) async throws -> Operations.ListNotes.Output {
        try await listNotes(Operations.ListNotes.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get a single note
    ///
    /// Get a single note
    ///
    /// - Remark: HTTP `GET /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/get(getASingleNote)`.
    public func getASingleNote(
        path: Operations.GetASingleNote.Input.Path,
        headers: Operations.GetASingleNote.Input.Headers = .init()
    ) async throws -> Operations.GetASingleNote.Output {
        try await getASingleNote(Operations.GetASingleNote.Input(
            path: path,
            headers: headers
        ))
    }
    /// Create a Note
    ///
    /// Create a Note
    ///
    /// - Remark: HTTP `POST /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/post(createANote)`.
    public func createANote(
        path: Operations.CreateANote.Input.Path,
        query: Operations.CreateANote.Input.Query = .init(),
        headers: Operations.CreateANote.Input.Headers = .init(),
        body: Operations.CreateANote.Input.Body? = nil
    ) async throws -> Operations.CreateANote.Output {
        try await createANote(Operations.CreateANote.Input(
            path: path,
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// Update a Note
    ///
    /// Update a Note
    ///
    /// - Remark: HTTP `PUT /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/put(updateANote)`.
    public func updateANote(
        path: Operations.UpdateANote.Input.Path,
        headers: Operations.UpdateANote.Input.Headers = .init(),
        body: Operations.UpdateANote.Input.Body? = nil
    ) async throws -> Operations.UpdateANote.Output {
        try await updateANote(Operations.UpdateANote.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a note
    ///
    /// Delete a note
    ///
    /// - Remark: HTTP `DELETE /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/delete(deleteANote)`.
    public func deleteANote(
        path: Operations.DeleteANote.Input.Path,
        headers: Operations.DeleteANote.Input.Headers = .init()
    ) async throws -> Operations.DeleteANote.Output {
        try await deleteANote(Operations.DeleteANote.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all periods for a given tax year
    ///
    /// List all periods for a given tax year
    ///
    /// - Remark: HTTP `GET /v2/payroll/{year}`.
    /// - Remark: Generated from `#/paths//v2/payroll/{year}/get(listAllPeriodsForAGivenTaxYear)`.
    public func listAllPeriodsForAGivenTaxYear(
        path: Operations.ListAllPeriodsForAGivenTaxYear.Input.Path,
        headers: Operations.ListAllPeriodsForAGivenTaxYear.Input.Headers = .init()
    ) async throws -> Operations.ListAllPeriodsForAGivenTaxYear.Output {
        try await listAllPeriodsForAGivenTaxYear(Operations.ListAllPeriodsForAGivenTaxYear.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all payslips for a given period
    ///
    /// List all payslips for a given period
    ///
    /// - Remark: HTTP `GET /v2/payroll/{year}/{period}`.
    /// - Remark: Generated from `#/paths//v2/payroll/{year}/{period}/get(listAllPayslipsForAGivenPeriod)`.
    public func listAllPayslipsForAGivenPeriod(
        path: Operations.ListAllPayslipsForAGivenPeriod.Input.Path,
        headers: Operations.ListAllPayslipsForAGivenPeriod.Input.Headers = .init()
    ) async throws -> Operations.ListAllPayslipsForAGivenPeriod.Output {
        try await listAllPayslipsForAGivenPeriod(Operations.ListAllPayslipsForAGivenPeriod.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all profiles for a given tax year
    ///
    /// List all profiles for a given tax year
    ///
    /// - Remark: HTTP `GET /v2/payroll_profiles/{year}`.
    /// - Remark: Generated from `#/paths//v2/payroll_profiles/{year}/get(listAllProfilesForAGivenTaxYear)`.
    public func listAllProfilesForAGivenTaxYear(
        path: Operations.ListAllProfilesForAGivenTaxYear.Input.Path,
        query: Operations.ListAllProfilesForAGivenTaxYear.Input.Query = .init(),
        headers: Operations.ListAllProfilesForAGivenTaxYear.Input.Headers = .init()
    ) async throws -> Operations.ListAllProfilesForAGivenTaxYear.Output {
        try await listAllProfilesForAGivenTaxYear(Operations.ListAllProfilesForAGivenTaxYear.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// List all Price List Items
    ///
    /// List all Price List Items
    ///
    /// - Remark: HTTP `GET /v2/price_list_items`.
    /// - Remark: Generated from `#/paths//v2/price_list_items/get(listAllPriceListItems)`.
    public func listAllPriceListItems(headers: Operations.ListAllPriceListItems.Input.Headers = .init()) async throws -> Operations.ListAllPriceListItems.Output {
        try await listAllPriceListItems(Operations.ListAllPriceListItems.Input(headers: headers))
    }
    /// Get a single Price List Item
    ///
    /// Get a single Price List Item
    ///
    /// - Remark: HTTP `GET /v2/price_list_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/price_list_items/{id}/get(getASinglePriceListItem)`.
    public func getASinglePriceListItem(
        path: Operations.GetASinglePriceListItem.Input.Path,
        headers: Operations.GetASinglePriceListItem.Input.Headers = .init()
    ) async throws -> Operations.GetASinglePriceListItem.Output {
        try await getASinglePriceListItem(Operations.GetASinglePriceListItem.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get the P&L summary
    ///
    /// Get the P&L summary
    ///
    /// - Remark: HTTP `GET /v2/accounting/profit_and_loss/summary`.
    /// - Remark: Generated from `#/paths//v2/accounting/profit_and_loss/summary/get(getThePLSummary)`.
    public func getThePLSummary(headers: Operations.GetThePLSummary.Input.Headers = .init()) async throws -> Operations.GetThePLSummary.Output {
        try await getThePLSummary(Operations.GetThePLSummary.Input(headers: headers))
    }
    /// List all properties
    ///
    /// List all properties
    ///
    /// - Remark: HTTP `GET /v2/properties`.
    /// - Remark: Generated from `#/paths//v2/properties/get(listAllProperties)`.
    public func listAllProperties(headers: Operations.ListAllProperties.Input.Headers = .init()) async throws -> Operations.ListAllProperties.Output {
        try await listAllProperties(Operations.ListAllProperties.Input(headers: headers))
    }
    /// Create a new property
    ///
    /// Create a new property
    ///
    /// - Remark: HTTP `POST /v2/properties`.
    /// - Remark: Generated from `#/paths//v2/properties/post(createANewProperty)`.
    public func createANewProperty(
        headers: Operations.CreateANewProperty.Input.Headers = .init(),
        body: Operations.CreateANewProperty.Input.Body? = nil
    ) async throws -> Operations.CreateANewProperty.Output {
        try await createANewProperty(Operations.CreateANewProperty.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a single property
    ///
    /// Get a single property
    ///
    /// - Remark: HTTP `GET /v2/properties/{id}`.
    /// - Remark: Generated from `#/paths//v2/properties/{id}/get(getASingleProperty)`.
    public func getASingleProperty(
        path: Operations.GetASingleProperty.Input.Path,
        headers: Operations.GetASingleProperty.Input.Headers = .init()
    ) async throws -> Operations.GetASingleProperty.Output {
        try await getASingleProperty(Operations.GetASingleProperty.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a property
    ///
    /// Update a property
    ///
    /// - Remark: HTTP `PUT /v2/properties/{id}`.
    /// - Remark: Generated from `#/paths//v2/properties/{id}/put(updateAProperty)`.
    public func updateAProperty(
        path: Operations.UpdateAProperty.Input.Path,
        headers: Operations.UpdateAProperty.Input.Headers = .init(),
        body: Operations.UpdateAProperty.Input.Body? = nil
    ) async throws -> Operations.UpdateAProperty.Output {
        try await updateAProperty(Operations.UpdateAProperty.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a property
    ///
    /// Delete a property
    ///
    /// - Remark: HTTP `DELETE /v2/properties/{id}`.
    /// - Remark: Generated from `#/paths//v2/properties/{id}/delete(deleteAProperty)`.
    public func deleteAProperty(
        path: Operations.DeleteAProperty.Input.Path,
        headers: Operations.DeleteAProperty.Input.Headers = .init()
    ) async throws -> Operations.DeleteAProperty.Output {
        try await deleteAProperty(Operations.DeleteAProperty.Input(
            path: path,
            headers: headers
        ))
    }
    /// List Projects
    ///
    /// List Projects
    ///
    /// - Remark: HTTP `GET /v2/projects`.
    /// - Remark: Generated from `#/paths//v2/projects/get(listProjects)`.
    public func listProjects(
        query: Operations.ListProjects.Input.Query = .init(),
        headers: Operations.ListProjects.Input.Headers = .init()
    ) async throws -> Operations.ListProjects.Output {
        try await listProjects(Operations.ListProjects.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create Project
    ///
    /// Create Project
    ///
    /// - Remark: HTTP `POST /v2/projects`.
    /// - Remark: Generated from `#/paths//v2/projects/post(createProject)`.
    public func createProject(
        headers: Operations.CreateProject.Input.Headers = .init(),
        body: Operations.CreateProject.Input.Body? = nil
    ) async throws -> Operations.CreateProject.Output {
        try await createProject(Operations.CreateProject.Input(
            headers: headers,
            body: body
        ))
    }
    /// Show Project
    ///
    /// Show Project
    ///
    /// - Remark: HTTP `GET /v2/projects/{id}`.
    /// - Remark: Generated from `#/paths//v2/projects/{id}/get(showProject)`.
    public func showProject(
        path: Operations.ShowProject.Input.Path,
        query: Operations.ShowProject.Input.Query = .init(),
        headers: Operations.ShowProject.Input.Headers = .init()
    ) async throws -> Operations.ShowProject.Output {
        try await showProject(Operations.ShowProject.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Update Project
    ///
    /// Update Project
    ///
    /// - Remark: HTTP `PUT /v2/projects/{id}`.
    /// - Remark: Generated from `#/paths//v2/projects/{id}/put(updateProject)`.
    public func updateProject(
        path: Operations.UpdateProject.Input.Path,
        headers: Operations.UpdateProject.Input.Headers = .init(),
        body: Operations.UpdateProject.Input.Body? = nil
    ) async throws -> Operations.UpdateProject.Output {
        try await updateProject(Operations.UpdateProject.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Project
    ///
    /// Delete Project
    ///
    /// - Remark: HTTP `DELETE /v2/projects/{id}`.
    /// - Remark: Generated from `#/paths//v2/projects/{id}/delete(deleteProject)`.
    public func deleteProject(
        path: Operations.DeleteProject.Input.Path,
        headers: Operations.DeleteProject.Input.Headers = .init(),
        body: Operations.DeleteProject.Input.Body
    ) async throws -> Operations.DeleteProject.Output {
        try await deleteProject(Operations.DeleteProject.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List all recurring invoices
    ///
    /// List all recurring invoices
    ///
    /// - Remark: HTTP `GET /v2/recurring_invoices`.
    /// - Remark: Generated from `#/paths//v2/recurring_invoices/get(listAllRecurringInvoices)`.
    public func listAllRecurringInvoices(
        query: Operations.ListAllRecurringInvoices.Input.Query = .init(),
        headers: Operations.ListAllRecurringInvoices.Input.Headers = .init()
    ) async throws -> Operations.ListAllRecurringInvoices.Output {
        try await listAllRecurringInvoices(Operations.ListAllRecurringInvoices.Input(
            query: query,
            headers: headers
        ))
    }
    /// Show Recurring Invoice
    ///
    /// Show Recurring Invoice
    ///
    /// - Remark: HTTP `GET /v2/recurring_invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/recurring_invoices/{id}/get(showRecurringInvoice)`.
    public func showRecurringInvoice(
        path: Operations.ShowRecurringInvoice.Input.Path,
        headers: Operations.ShowRecurringInvoice.Input.Headers = .init()
    ) async throws -> Operations.ShowRecurringInvoice.Output {
        try await showRecurringInvoice(Operations.ShowRecurringInvoice.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all sales tax periods for a company
    ///
    /// Only available to US and Universal companies
    ///
    /// - Remark: HTTP `GET /v2/sales_tax_periods`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/get(listAllSalesTaxPeriodsForACompany)`.
    public func listAllSalesTaxPeriodsForACompany(headers: Operations.ListAllSalesTaxPeriodsForACompany.Input.Headers = .init()) async throws -> Operations.ListAllSalesTaxPeriodsForACompany.Output {
        try await listAllSalesTaxPeriodsForACompany(Operations.ListAllSalesTaxPeriodsForACompany.Input(headers: headers))
    }
    /// Create a sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `POST /v2/sales_tax_periods`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/post(createASalesTaxPeriod)`.
    public func createASalesTaxPeriod(
        headers: Operations.CreateASalesTaxPeriod.Input.Headers = .init(),
        body: Operations.CreateASalesTaxPeriod.Input.Body? = nil
    ) async throws -> Operations.CreateASalesTaxPeriod.Output {
        try await createASalesTaxPeriod(Operations.CreateASalesTaxPeriod.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a single sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `GET /v2/sales_tax_periods/{id}`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/get(getASingleSalesTaxPeriod)`.
    public func getASingleSalesTaxPeriod(
        path: Operations.GetASingleSalesTaxPeriod.Input.Path,
        headers: Operations.GetASingleSalesTaxPeriod.Input.Headers = .init()
    ) async throws -> Operations.GetASingleSalesTaxPeriod.Output {
        try await getASingleSalesTaxPeriod(Operations.GetASingleSalesTaxPeriod.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `PUT /v2/sales_tax_periods/{id}`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/put(updateASalesTaxPeriod)`.
    public func updateASalesTaxPeriod(
        path: Operations.UpdateASalesTaxPeriod.Input.Path,
        headers: Operations.UpdateASalesTaxPeriod.Input.Headers = .init(),
        body: Operations.UpdateASalesTaxPeriod.Input.Body? = nil
    ) async throws -> Operations.UpdateASalesTaxPeriod.Output {
        try await updateASalesTaxPeriod(Operations.UpdateASalesTaxPeriod.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `DELETE /v2/sales_tax_periods/{id}`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/delete(deleteASalesTaxPeriod)`.
    public func deleteASalesTaxPeriod(
        path: Operations.DeleteASalesTaxPeriod.Input.Path,
        headers: Operations.DeleteASalesTaxPeriod.Input.Headers = .init()
    ) async throws -> Operations.DeleteASalesTaxPeriod.Output {
        try await deleteASalesTaxPeriod(Operations.DeleteASalesTaxPeriod.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all Stock Items
    ///
    /// List all Stock Items
    ///
    /// - Remark: HTTP `GET /v2/stock_items`.
    /// - Remark: Generated from `#/paths//v2/stock_items/get(listAllStockItems)`.
    public func listAllStockItems(
        query: Operations.ListAllStockItems.Input.Query = .init(),
        headers: Operations.ListAllStockItems.Input.Headers = .init()
    ) async throws -> Operations.ListAllStockItems.Output {
        try await listAllStockItems(Operations.ListAllStockItems.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get a single Stock Item
    ///
    /// Get a single Stock Item
    ///
    /// - Remark: HTTP `GET /v2/stock_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/stock_items/{id}/get(getASingleStockItem)`.
    public func getASingleStockItem(
        path: Operations.GetASingleStockItem.Input.Path,
        headers: Operations.GetASingleStockItem.Input.Headers = .init()
    ) async throws -> Operations.GetASingleStockItem.Output {
        try await getASingleStockItem(Operations.GetASingleStockItem.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all tasks
    ///
    /// List all tasks
    ///
    /// - Remark: HTTP `GET /v2/tasks`.
    /// - Remark: Generated from `#/paths//v2/tasks/get(listAllTasks)`.
    public func listAllTasks(
        query: Operations.ListAllTasks.Input.Query = .init(),
        headers: Operations.ListAllTasks.Input.Headers = .init()
    ) async throws -> Operations.ListAllTasks.Output {
        try await listAllTasks(Operations.ListAllTasks.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create a task under a certain project
    ///
    /// Create a task under a certain project
    ///
    /// - Remark: HTTP `POST /v2/tasks`.
    /// - Remark: Generated from `#/paths//v2/tasks/post(createATaskUnderACertainProject)`.
    public func createATaskUnderACertainProject(
        query: Operations.CreateATaskUnderACertainProject.Input.Query = .init(),
        headers: Operations.CreateATaskUnderACertainProject.Input.Headers = .init(),
        body: Operations.CreateATaskUnderACertainProject.Input.Body? = nil
    ) async throws -> Operations.CreateATaskUnderACertainProject.Output {
        try await createATaskUnderACertainProject(Operations.CreateATaskUnderACertainProject.Input(
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// Get a single task
    ///
    /// Get a single task
    ///
    /// - Remark: HTTP `GET /v2/tasks/{id}`.
    /// - Remark: Generated from `#/paths//v2/tasks/{id}/get(getASingleTask)`.
    public func getASingleTask(
        path: Operations.GetASingleTask.Input.Path,
        headers: Operations.GetASingleTask.Input.Headers = .init()
    ) async throws -> Operations.GetASingleTask.Output {
        try await getASingleTask(Operations.GetASingleTask.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a task
    ///
    /// Update a task
    ///
    /// - Remark: HTTP `PUT /v2/tasks/{id}`.
    /// - Remark: Generated from `#/paths//v2/tasks/{id}/put(updateATask)`.
    public func updateATask(
        path: Operations.UpdateATask.Input.Path,
        headers: Operations.UpdateATask.Input.Headers = .init(),
        body: Operations.UpdateATask.Input.Body? = nil
    ) async throws -> Operations.UpdateATask.Output {
        try await updateATask(Operations.UpdateATask.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete Task
    ///
    /// Delete Task
    ///
    /// - Remark: HTTP `DELETE /v2/tasks/{id}`.
    /// - Remark: Generated from `#/paths//v2/tasks/{id}/delete(deleteTask)`.
    public func deleteTask(
        path: Operations.DeleteTask.Input.Path,
        headers: Operations.DeleteTask.Input.Headers = .init(),
        body: Operations.DeleteTask.Input.Body
    ) async throws -> Operations.DeleteTask.Output {
        try await deleteTask(Operations.DeleteTask.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Start a Timer
    ///
    /// Start a Timer
    ///
    /// - Remark: HTTP `POST /v2/timeslips/{id}/timer`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/timer/post(startATimer)`.
    public func startATimer(
        path: Operations.StartATimer.Input.Path,
        query: Operations.StartATimer.Input.Query = .init(),
        headers: Operations.StartATimer.Input.Headers = .init(),
        body: Operations.StartATimer.Input.Body? = nil
    ) async throws -> Operations.StartATimer.Output {
        try await startATimer(Operations.StartATimer.Input(
            path: path,
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// Stop a Timer
    ///
    /// Stop a Timer
    ///
    /// - Remark: HTTP `DELETE /v2/timeslips/{id}/timer`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/timer/delete(stopATimer)`.
    public func stopATimer(
        path: Operations.StopATimer.Input.Path,
        query: Operations.StopATimer.Input.Query = .init(),
        headers: Operations.StopATimer.Input.Headers = .init(),
        body: Operations.StopATimer.Input.Body
    ) async throws -> Operations.StopATimer.Output {
        try await stopATimer(Operations.StopATimer.Input(
            path: path,
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// List all timeslips
    ///
    /// List all timeslips
    ///
    /// - Remark: HTTP `GET /v2/timeslips`.
    /// - Remark: Generated from `#/paths//v2/timeslips/get(listAllTimeslips)`.
    public func listAllTimeslips(
        query: Operations.ListAllTimeslips.Input.Query = .init(),
        headers: Operations.ListAllTimeslips.Input.Headers = .init()
    ) async throws -> Operations.ListAllTimeslips.Output {
        try await listAllTimeslips(Operations.ListAllTimeslips.Input(
            query: query,
            headers: headers
        ))
    }
    /// Create a timeslip
    ///
    /// Create a timeslip
    ///
    /// - Remark: HTTP `POST /v2/timeslips`.
    /// - Remark: Generated from `#/paths//v2/timeslips/post(createATimeslip)`.
    public func createATimeslip(
        query: Operations.CreateATimeslip.Input.Query = .init(),
        headers: Operations.CreateATimeslip.Input.Headers = .init(),
        body: Operations.CreateATimeslip.Input.Body? = nil
    ) async throws -> Operations.CreateATimeslip.Output {
        try await createATimeslip(Operations.CreateATimeslip.Input(
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// Get a single timeslip
    ///
    /// Get a single timeslip
    ///
    /// - Remark: HTTP `GET /v2/timeslips/{id}`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/get(getASingleTimeslip)`.
    public func getASingleTimeslip(
        path: Operations.GetASingleTimeslip.Input.Path,
        query: Operations.GetASingleTimeslip.Input.Query = .init(),
        headers: Operations.GetASingleTimeslip.Input.Headers = .init()
    ) async throws -> Operations.GetASingleTimeslip.Output {
        try await getASingleTimeslip(Operations.GetASingleTimeslip.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Update a timeslip
    ///
    /// Update a timeslip
    ///
    /// - Remark: HTTP `PUT /v2/timeslips/{id}`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/put(updateATimeslip)`.
    public func updateATimeslip(
        path: Operations.UpdateATimeslip.Input.Path,
        query: Operations.UpdateATimeslip.Input.Query = .init(),
        headers: Operations.UpdateATimeslip.Input.Headers = .init(),
        body: Operations.UpdateATimeslip.Input.Body? = nil
    ) async throws -> Operations.UpdateATimeslip.Output {
        try await updateATimeslip(Operations.UpdateATimeslip.Input(
            path: path,
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// Delete a timeslip
    ///
    /// Delete a timeslip
    ///
    /// - Remark: HTTP `DELETE /v2/timeslips/{id}`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/delete(deleteATimeslip)`.
    public func deleteATimeslip(
        path: Operations.DeleteATimeslip.Input.Path,
        headers: Operations.DeleteATimeslip.Input.Headers = .init(),
        body: Operations.DeleteATimeslip.Input.Body
    ) async throws -> Operations.DeleteATimeslip.Output {
        try await deleteATimeslip(Operations.DeleteATimeslip.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get the trial balance summary
    ///
    /// Get the trial balance summary
    ///
    /// - Remark: HTTP `GET /v2/accounting/trial_balance/summary`.
    /// - Remark: Generated from `#/paths//v2/accounting/trial_balance/summary/get(getTheTrialBalanceSummary)`.
    public func getTheTrialBalanceSummary(
        query: Operations.GetTheTrialBalanceSummary.Input.Query = .init(),
        headers: Operations.GetTheTrialBalanceSummary.Input.Headers = .init()
    ) async throws -> Operations.GetTheTrialBalanceSummary.Output {
        try await getTheTrialBalanceSummary(Operations.GetTheTrialBalanceSummary.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get the opening balances
    ///
    /// Get the opening balances
    ///
    /// - Remark: HTTP `GET /v2/accounting/trial_balance/summary/opening_balances`.
    /// - Remark: Generated from `#/paths//v2/accounting/trial_balance/summary/opening_balances/get(getTheOpeningBalances1)`.
    public func getTheOpeningBalances1(headers: Operations.GetTheOpeningBalances1.Input.Headers = .init()) async throws -> Operations.GetTheOpeningBalances1.Output {
        try await getTheOpeningBalances1(Operations.GetTheOpeningBalances1.Input(headers: headers))
    }
    /// List All Users
    ///
    /// List All Users
    ///
    /// - Remark: HTTP `GET /v2/users`.
    /// - Remark: Generated from `#/paths//v2/users/get(listAllUsers)`.
    public func listAllUsers(headers: Operations.ListAllUsers.Input.Headers = .init()) async throws -> Operations.ListAllUsers.Output {
        try await listAllUsers(Operations.ListAllUsers.Input(headers: headers))
    }
    /// Create a user
    ///
    /// Create a user
    ///
    /// - Remark: HTTP `POST /v2/users`.
    /// - Remark: Generated from `#/paths//v2/users/post(createAUser)`.
    public func createAUser(
        headers: Operations.CreateAUser.Input.Headers = .init(),
        body: Operations.CreateAUser.Input.Body? = nil
    ) async throws -> Operations.CreateAUser.Output {
        try await createAUser(Operations.CreateAUser.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a single user
    ///
    /// Get a single user
    ///
    /// - Remark: HTTP `GET /v2/users/{id}`.
    /// - Remark: Generated from `#/paths//v2/users/{id}/get(getASingleUser)`.
    public func getASingleUser(
        path: Operations.GetASingleUser.Input.Path,
        headers: Operations.GetASingleUser.Input.Headers = .init()
    ) async throws -> Operations.GetASingleUser.Output {
        try await getASingleUser(Operations.GetASingleUser.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a user
    ///
    /// Update a user
    ///
    /// - Remark: HTTP `PUT /v2/users/{id}`.
    /// - Remark: Generated from `#/paths//v2/users/{id}/put(updateAUser)`.
    public func updateAUser(
        path: Operations.UpdateAUser.Input.Path,
        headers: Operations.UpdateAUser.Input.Headers = .init(),
        body: Operations.UpdateAUser.Input.Body? = nil
    ) async throws -> Operations.UpdateAUser.Output {
        try await updateAUser(Operations.UpdateAUser.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a user
    ///
    /// Delete a user
    ///
    /// - Remark: HTTP `DELETE /v2/users/{id}`.
    /// - Remark: Generated from `#/paths//v2/users/{id}/delete(deleteAUser)`.
    public func deleteAUser(
        path: Operations.DeleteAUser.Input.Path,
        headers: Operations.DeleteAUser.Input.Headers = .init()
    ) async throws -> Operations.DeleteAUser.Output {
        try await deleteAUser(Operations.DeleteAUser.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get personal profile
    ///
    /// Get personal profile
    ///
    /// - Remark: HTTP `GET /v2/users/me`.
    /// - Remark: Generated from `#/paths//v2/users/me/get(getPersonalProfile)`.
    public func getPersonalProfile(headers: Operations.GetPersonalProfile.Input.Headers = .init()) async throws -> Operations.GetPersonalProfile.Output {
        try await getPersonalProfile(Operations.GetPersonalProfile.Input(headers: headers))
    }
}

/// Server URLs defined in the OpenAPI document.
public enum Servers {
    /// Production
    public enum Server1 {
        /// Production
        public static func url() throws -> Foundation.URL {
            try Foundation.URL(
                validatingOpenAPIServerURL: "https://api.freeagent.com",
                variables: []
            )
        }
    }
    /// Production
    @available(*, deprecated, renamed: "Servers.Server1.url")
    public static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.freeagent.com",
            variables: []
        )
    }
    /// Sandbox
    public enum Server2 {
        /// Sandbox
        public static func url() throws -> Foundation.URL {
            try Foundation.URL(
                validatingOpenAPIServerURL: "https://api.sandbox.freeagent.com",
                variables: []
            )
        }
    }
    /// Sandbox
    @available(*, deprecated, renamed: "Servers.Server2.url")
    public static func server2() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.sandbox.freeagent.com",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// - Remark: Generated from `#/components/schemas/InvoiceView`.
        public typealias InvoiceView = CustomInvoiceView
        /// - Remark: Generated from `#/components/schemas/ErrorResponse`.
        public struct ErrorResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/ErrorsPayload`.
            public struct ErrorsPayloadPayload: Codable, Hashable, Sendable {
                /// Error message describing what went wrong
                ///
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/ErrorsPayload/message`.
                public var message: Swift.String
                /// Creates a new `ErrorsPayloadPayload`.
                ///
                /// - Parameters:
                ///   - message: Error message describing what went wrong
                public init(message: Swift.String) {
                    self.message = message
                }
                public enum CodingKeys: String, CodingKey {
                    case message
                }
            }
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errors`.
            public typealias ErrorsPayload = [Components.Schemas.ErrorResponse.ErrorsPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errors`.
            public var errors: Components.Schemas.ErrorResponse.ErrorsPayload
            /// Creates a new `ErrorResponse`.
            ///
            /// - Parameters:
            ///   - errors:
            public init(errors: Components.Schemas.ErrorResponse.ErrorsPayload) {
                self.errors = errors
            }
            public enum CodingKeys: String, CodingKey {
                case errors
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Refresh access token
    ///
    /// Request an new Access Token using an existing Refresh Token (you'll need to provide a Refresh Token in the request body params)
    ///
    /// https://dev.freeagent.com/docs/oauth/#refreshing-the-access-token
    ///
    /// - Remark: HTTP `POST /v2/token_endpoint`.
    /// - Remark: Generated from `#/paths//v2/token_endpoint/post(refreshAccessToken)`.
    public enum RefreshAccessToken {
        public static let id: Swift.String = "refreshAccessToken"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.RefreshAccessToken.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.RefreshAccessToken.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.RefreshAccessToken.Input.Headers
            /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/requestBody/urlEncodedForm`.
                public struct UrlEncodedFormPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/requestBody/urlEncodedForm/client_id`.
                    public var clientId: Swift.String?
                    /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/requestBody/urlEncodedForm/client_secret`.
                    public var clientSecret: Swift.String?
                    /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/requestBody/urlEncodedForm/grant_type`.
                    public var grantType: Swift.String?
                    /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/requestBody/urlEncodedForm/refresh_token`.
                    public var refreshToken: Swift.String?
                    /// Creates a new `UrlEncodedFormPayload`.
                    ///
                    /// - Parameters:
                    ///   - clientId:
                    ///   - clientSecret:
                    ///   - grantType:
                    ///   - refreshToken:
                    public init(
                        clientId: Swift.String? = nil,
                        clientSecret: Swift.String? = nil,
                        grantType: Swift.String? = nil,
                        refreshToken: Swift.String? = nil
                    ) {
                        self.clientId = clientId
                        self.clientSecret = clientSecret
                        self.grantType = grantType
                        self.refreshToken = refreshToken
                    }
                    public enum CodingKeys: String, CodingKey {
                        case clientId = "client_id"
                        case clientSecret = "client_secret"
                        case grantType = "grant_type"
                        case refreshToken = "refresh_token"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/requestBody/content/application\/x-www-form-urlencoded`.
                case urlEncodedForm(Operations.RefreshAccessToken.Input.Body.UrlEncodedFormPayload)
            }
            public var body: Operations.RefreshAccessToken.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.RefreshAccessToken.Input.Headers = .init(),
                body: Operations.RefreshAccessToken.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/token_endpoint/POST/responses/200/content/application\/json`.
                    case json(Operations.RefreshAccessToken.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.RefreshAccessToken.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.RefreshAccessToken.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.RefreshAccessToken.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/token_endpoint/post(refreshAccessToken)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.RefreshAccessToken.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.RefreshAccessToken.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all clients
    ///
    /// List all clients
    ///
    /// - Remark: HTTP `GET /v2/clients`.
    /// - Remark: Generated from `#/paths//v2/clients/get(listAllClients)`.
    public enum ListAllClients {
        public static let id: Swift.String = "listAllClients"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/clients/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllClients.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllClients.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllClients.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListAllClients.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/clients/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/clients/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/clients/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllClients.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllClients.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllClients.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllClients.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/clients/get(listAllClients)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllClients.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllClients.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all account managers
    ///
    /// List all account managers
    ///
    /// - Remark: HTTP `GET /v2/account_managers`.
    /// - Remark: Generated from `#/paths//v2/account_managers/get(listAllAccountManagers)`.
    public enum ListAllAccountManagers {
        public static let id: Swift.String = "listAllAccountManagers"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/account_managers/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllAccountManagers.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllAccountManagers.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllAccountManagers.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListAllAccountManagers.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/account_managers/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/account_managers/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/account_managers/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllAccountManagers.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllAccountManagers.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllAccountManagers.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllAccountManagers.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/account_managers/get(listAllAccountManagers)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllAccountManagers.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllAccountManagers.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single account manager
    ///
    /// Get a single account manager
    ///
    /// - Remark: HTTP `GET /v2/account_managers/{id}`.
    /// - Remark: Generated from `#/paths//v2/account_managers/{id}/get(getASingleAccountManager)`.
    public enum GetASingleAccountManager {
        public static let id: Swift.String = "getASingleAccountManager"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/account_managers/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/account_managers/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleAccountManager.Input.Path
            /// - Remark: Generated from `#/paths/v2/account_managers/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleAccountManager.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleAccountManager.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleAccountManager.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleAccountManager.Input.Path,
                headers: Operations.GetASingleAccountManager.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/account_managers/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/account_managers/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/account_managers/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleAccountManager.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleAccountManager.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleAccountManager.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleAccountManager.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/account_managers/{id}/get(getASingleAccountManager)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleAccountManager.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleAccountManager.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Attachment
    ///
    /// Show Attachment
    ///
    /// - Remark: HTTP `GET /v2/attachments/{id}`.
    /// - Remark: Generated from `#/paths//v2/attachments/{id}/get(showAttachment)`.
    public enum ShowAttachment {
        public static let id: Swift.String = "showAttachment"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/attachments/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/attachments/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowAttachment.Input.Path
            /// - Remark: Generated from `#/paths/v2/attachments/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowAttachment.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowAttachment.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowAttachment.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowAttachment.Input.Path,
                headers: Operations.ShowAttachment.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/attachments/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/attachments/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/attachments/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowAttachment.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowAttachment.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowAttachment.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowAttachment.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/attachments/{id}/get(showAttachment)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowAttachment.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowAttachment.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Attachment
    ///
    /// Delete Attachment
    ///
    /// - Remark: HTTP `DELETE /v2/attachments/{id}`.
    /// - Remark: Generated from `#/paths//v2/attachments/{id}/delete(deleteAttachment)`.
    public enum DeleteAttachment {
        public static let id: Swift.String = "deleteAttachment"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/attachments/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/attachments/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteAttachment.Input.Path
            /// - Remark: Generated from `#/paths/v2/attachments/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteAttachment.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteAttachment.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteAttachment.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.DeleteAttachment.Input.Path,
                headers: Operations.DeleteAttachment.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/attachments/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/attachments/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/attachments/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteAttachment.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteAttachment.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteAttachment.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteAttachment.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/attachments/{id}/delete(deleteAttachment)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteAttachment.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteAttachment.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Bank Accounts
    ///
    /// List Bank Accounts
    ///
    /// - Remark: HTTP `GET /v2/bank_accounts`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/get(listBankAccounts)`.
    public enum ListBankAccounts {
        public static let id: Swift.String = "listBankAccounts"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_accounts/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/GET/query/view`.
                public var view: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - view:
                public init(view: Swift.String? = nil) {
                    self.view = view
                }
            }
            public var query: Operations.ListBankAccounts.Input.Query
            /// - Remark: Generated from `#/paths/v2/bank_accounts/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListBankAccounts.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListBankAccounts.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListBankAccounts.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListBankAccounts.Input.Query = .init(),
                headers: Operations.ListBankAccounts.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/GET/responses/200/content/application\/json`.
                    case json(Operations.ListBankAccounts.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListBankAccounts.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListBankAccounts.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListBankAccounts.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_accounts/get(listBankAccounts)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListBankAccounts.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListBankAccounts.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Bank Account
    ///
    /// Create Bank Account
    ///
    /// - Remark: HTTP `POST /v2/bank_accounts`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/post(createBankAccount)`.
    public enum CreateBankAccount {
        public static let id: Swift.String = "createBankAccount"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateBankAccount.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateBankAccount.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateBankAccount.Input.Headers
            /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json/bank_account`.
                    public struct BankAccountPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json/bank_account/created_at`.
                        public var createdAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json/bank_account/is_personal`.
                        public var isPersonal: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json/bank_account/name`.
                        public var name: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json/bank_account/opening_balance`.
                        public var openingBalance: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json/bank_account/status`.
                        public var status: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json/bank_account/type`.
                        public var _type: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json/bank_account/updated_at`.
                        public var updatedAt: Swift.String?
                        /// Creates a new `BankAccountPayload`.
                        ///
                        /// - Parameters:
                        ///   - createdAt:
                        ///   - isPersonal:
                        ///   - name:
                        ///   - openingBalance:
                        ///   - status:
                        ///   - _type:
                        ///   - updatedAt:
                        public init(
                            createdAt: Swift.String? = nil,
                            isPersonal: Swift.Bool? = nil,
                            name: Swift.String? = nil,
                            openingBalance: Swift.String? = nil,
                            status: Swift.String? = nil,
                            _type: Swift.String? = nil,
                            updatedAt: Swift.String? = nil
                        ) {
                            self.createdAt = createdAt
                            self.isPersonal = isPersonal
                            self.name = name
                            self.openingBalance = openingBalance
                            self.status = status
                            self._type = _type
                            self.updatedAt = updatedAt
                        }
                        public enum CodingKeys: String, CodingKey {
                            case createdAt = "created_at"
                            case isPersonal = "is_personal"
                            case name
                            case openingBalance = "opening_balance"
                            case status
                            case _type = "type"
                            case updatedAt = "updated_at"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/json/bank_account`.
                    public var bankAccount: Operations.CreateBankAccount.Input.Body.JsonPayload.BankAccountPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - bankAccount:
                    public init(bankAccount: Operations.CreateBankAccount.Input.Body.JsonPayload.BankAccountPayload? = nil) {
                        self.bankAccount = bankAccount
                    }
                    public enum CodingKeys: String, CodingKey {
                        case bankAccount = "bank_account"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/requestBody/content/application\/json`.
                case json(Operations.CreateBankAccount.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateBankAccount.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateBankAccount.Input.Headers = .init(),
                body: Operations.CreateBankAccount.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateBankAccount.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateBankAccount.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateBankAccount.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateBankAccount.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_accounts/post(createBankAccount)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateBankAccount.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateBankAccount.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Bank Account
    ///
    /// Show Bank Account
    ///
    /// - Remark: HTTP `GET /v2/bank_accounts/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/get(showBankAccount)`.
    public enum ShowBankAccount {
        public static let id: Swift.String = "showBankAccount"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowBankAccount.Input.Path
            /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowBankAccount.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowBankAccount.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowBankAccount.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowBankAccount.Input.Path,
                headers: Operations.ShowBankAccount.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowBankAccount.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowBankAccount.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowBankAccount.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowBankAccount.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/get(showBankAccount)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowBankAccount.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowBankAccount.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update Bank Account
    ///
    /// Update Bank Account
    ///
    /// - Remark: HTTP `PUT /v2/bank_accounts/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/put(updateBankAccount)`.
    public enum UpdateBankAccount {
        public static let id: Swift.String = "updateBankAccount"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateBankAccount.Input.Path
            /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateBankAccount.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateBankAccount.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateBankAccount.Input.Headers
            /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json/bank_account`.
                    public struct BankAccountPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json/bank_account/created_at`.
                        public var createdAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json/bank_account/is_personal`.
                        public var isPersonal: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json/bank_account/name`.
                        public var name: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json/bank_account/opening_balance`.
                        public var openingBalance: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json/bank_account/status`.
                        public var status: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json/bank_account/type`.
                        public var _type: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json/bank_account/updated_at`.
                        public var updatedAt: Swift.String?
                        /// Creates a new `BankAccountPayload`.
                        ///
                        /// - Parameters:
                        ///   - createdAt:
                        ///   - isPersonal:
                        ///   - name:
                        ///   - openingBalance:
                        ///   - status:
                        ///   - _type:
                        ///   - updatedAt:
                        public init(
                            createdAt: Swift.String? = nil,
                            isPersonal: Swift.Bool? = nil,
                            name: Swift.String? = nil,
                            openingBalance: Swift.String? = nil,
                            status: Swift.String? = nil,
                            _type: Swift.String? = nil,
                            updatedAt: Swift.String? = nil
                        ) {
                            self.createdAt = createdAt
                            self.isPersonal = isPersonal
                            self.name = name
                            self.openingBalance = openingBalance
                            self.status = status
                            self._type = _type
                            self.updatedAt = updatedAt
                        }
                        public enum CodingKeys: String, CodingKey {
                            case createdAt = "created_at"
                            case isPersonal = "is_personal"
                            case name
                            case openingBalance = "opening_balance"
                            case status
                            case _type = "type"
                            case updatedAt = "updated_at"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/json/bank_account`.
                    public var bankAccount: Operations.UpdateBankAccount.Input.Body.JsonPayload.BankAccountPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - bankAccount:
                    public init(bankAccount: Operations.UpdateBankAccount.Input.Body.JsonPayload.BankAccountPayload? = nil) {
                        self.bankAccount = bankAccount
                    }
                    public enum CodingKeys: String, CodingKey {
                        case bankAccount = "bank_account"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateBankAccount.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateBankAccount.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateBankAccount.Input.Path,
                headers: Operations.UpdateBankAccount.Input.Headers = .init(),
                body: Operations.UpdateBankAccount.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateBankAccount.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateBankAccount.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateBankAccount.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateBankAccount.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/put(updateBankAccount)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateBankAccount.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateBankAccount.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Bank Account
    ///
    /// Delete Bank Account
    ///
    /// - Remark: HTTP `DELETE /v2/bank_accounts/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/delete(deleteBankAccount)`.
    public enum DeleteBankAccount {
        public static let id: Swift.String = "deleteBankAccount"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteBankAccount.Input.Path
            /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteBankAccount.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteBankAccount.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteBankAccount.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.DeleteBankAccount.Input.Path,
                headers: Operations.DeleteBankAccount.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_accounts/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteBankAccount.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteBankAccount.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteBankAccount.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteBankAccount.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_accounts/{id}/delete(deleteBankAccount)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteBankAccount.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteBankAccount.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all bank transaction explanations
    ///
    /// List all bank transaction explanations
    ///
    /// - Remark: HTTP `GET /v2/bank_transaction_explanations`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/get(listAllBankTransactionExplanations)`.
    public enum ListAllBankTransactionExplanations {
        public static let id: Swift.String = "listAllBankTransactionExplanations"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/GET/query/from_date`.
                public var fromDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/GET/query/to_date`.
                public var toDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/GET/query/updated_since`.
                public var updatedSince: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/GET/query/bank_account`.
                public var bankAccount: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fromDate:
                ///   - toDate:
                ///   - updatedSince:
                ///   - bankAccount:
                public init(
                    fromDate: Swift.String? = nil,
                    toDate: Swift.String? = nil,
                    updatedSince: Swift.String? = nil,
                    bankAccount: Swift.String? = nil
                ) {
                    self.fromDate = fromDate
                    self.toDate = toDate
                    self.updatedSince = updatedSince
                    self.bankAccount = bankAccount
                }
            }
            public var query: Operations.ListAllBankTransactionExplanations.Input.Query
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllBankTransactionExplanations.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllBankTransactionExplanations.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllBankTransactionExplanations.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListAllBankTransactionExplanations.Input.Query = .init(),
                headers: Operations.ListAllBankTransactionExplanations.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllBankTransactionExplanations.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllBankTransactionExplanations.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllBankTransactionExplanations.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllBankTransactionExplanations.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/get(listAllBankTransactionExplanations)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllBankTransactionExplanations.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllBankTransactionExplanations.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a bank transaction explanation
    ///
    /// Create a bank transaction explanation
    ///
    /// - Remark: HTTP `POST /v2/bank_transaction_explanations`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/post(createABankTransactionExplanation)`.
    public enum CreateABankTransactionExplanation {
        public static let id: Swift.String = "createABankTransactionExplanation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateABankTransactionExplanation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateABankTransactionExplanation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateABankTransactionExplanation.Input.Headers
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation`.
                    public struct BankTransactionExplanationPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/attachment`.
                        public struct AttachmentPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/attachment/content_src`.
                            public var contentSrc: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/attachment/content_type`.
                            public var contentType: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/attachment/file_name`.
                            public var fileName: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/attachment/file_size`.
                            public var fileSize: Swift.Double?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/attachment/url`.
                            public var url: Swift.String?
                            /// Creates a new `AttachmentPayload`.
                            ///
                            /// - Parameters:
                            ///   - contentSrc:
                            ///   - contentType:
                            ///   - fileName:
                            ///   - fileSize:
                            ///   - url:
                            public init(
                                contentSrc: Swift.String? = nil,
                                contentType: Swift.String? = nil,
                                fileName: Swift.String? = nil,
                                fileSize: Swift.Double? = nil,
                                url: Swift.String? = nil
                            ) {
                                self.contentSrc = contentSrc
                                self.contentType = contentType
                                self.fileName = fileName
                                self.fileSize = fileSize
                                self.url = url
                            }
                            public enum CodingKeys: String, CodingKey {
                                case contentSrc = "content_src"
                                case contentType = "content_type"
                                case fileName = "file_name"
                                case fileSize = "file_size"
                                case url
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/attachment`.
                        public var attachment: Operations.CreateABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload.AttachmentPayload?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/bank_account`.
                        public var bankAccount: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/bank_transaction`.
                        public var bankTransaction: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/category`.
                        public var category: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/gross_value`.
                        public var grossValue: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/project`.
                        public var project: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/rebill_factor`.
                        public var rebillFactor: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation/rebill_type`.
                        public var rebillType: Swift.String?
                        /// Creates a new `BankTransactionExplanationPayload`.
                        ///
                        /// - Parameters:
                        ///   - attachment:
                        ///   - bankAccount:
                        ///   - bankTransaction:
                        ///   - category:
                        ///   - datedOn:
                        ///   - description:
                        ///   - grossValue:
                        ///   - project:
                        ///   - rebillFactor:
                        ///   - rebillType:
                        public init(
                            attachment: Operations.CreateABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload.AttachmentPayload? = nil,
                            bankAccount: Swift.String? = nil,
                            bankTransaction: Swift.String? = nil,
                            category: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            description: Swift.String? = nil,
                            grossValue: Swift.String? = nil,
                            project: Swift.String? = nil,
                            rebillFactor: Swift.String? = nil,
                            rebillType: Swift.String? = nil
                        ) {
                            self.attachment = attachment
                            self.bankAccount = bankAccount
                            self.bankTransaction = bankTransaction
                            self.category = category
                            self.datedOn = datedOn
                            self.description = description
                            self.grossValue = grossValue
                            self.project = project
                            self.rebillFactor = rebillFactor
                            self.rebillType = rebillType
                        }
                        public enum CodingKeys: String, CodingKey {
                            case attachment
                            case bankAccount = "bank_account"
                            case bankTransaction = "bank_transaction"
                            case category
                            case datedOn = "dated_on"
                            case description
                            case grossValue = "gross_value"
                            case project
                            case rebillFactor = "rebill_factor"
                            case rebillType = "rebill_type"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/json/bank_transaction_explanation`.
                    public var bankTransactionExplanation: Operations.CreateABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - bankTransactionExplanation:
                    public init(bankTransactionExplanation: Operations.CreateABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload? = nil) {
                        self.bankTransactionExplanation = bankTransactionExplanation
                    }
                    public enum CodingKeys: String, CodingKey {
                        case bankTransactionExplanation = "bank_transaction_explanation"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/requestBody/content/application\/json`.
                case json(Operations.CreateABankTransactionExplanation.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateABankTransactionExplanation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateABankTransactionExplanation.Input.Headers = .init(),
                body: Operations.CreateABankTransactionExplanation.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateABankTransactionExplanation.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateABankTransactionExplanation.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateABankTransactionExplanation.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateABankTransactionExplanation.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/post(createABankTransactionExplanation)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateABankTransactionExplanation.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateABankTransactionExplanation.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a bank transaction explanation
    ///
    /// Update a bank transaction explanation
    ///
    /// - Remark: HTTP `PUT /v2/bank_transaction_explanations`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/put(updateABankTransactionExplanation)`.
    public enum UpdateABankTransactionExplanation {
        public static let id: Swift.String = "updateABankTransactionExplanation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateABankTransactionExplanation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateABankTransactionExplanation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateABankTransactionExplanation.Input.Headers
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation`.
                    public struct BankTransactionExplanationPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/attachment`.
                        public struct AttachmentPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/attachment/content_src`.
                            public var contentSrc: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/attachment/content_type`.
                            public var contentType: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/attachment/file_name`.
                            public var fileName: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/attachment/file_size`.
                            public var fileSize: Swift.Double?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/attachment/url`.
                            public var url: Swift.String?
                            /// Creates a new `AttachmentPayload`.
                            ///
                            /// - Parameters:
                            ///   - contentSrc:
                            ///   - contentType:
                            ///   - fileName:
                            ///   - fileSize:
                            ///   - url:
                            public init(
                                contentSrc: Swift.String? = nil,
                                contentType: Swift.String? = nil,
                                fileName: Swift.String? = nil,
                                fileSize: Swift.Double? = nil,
                                url: Swift.String? = nil
                            ) {
                                self.contentSrc = contentSrc
                                self.contentType = contentType
                                self.fileName = fileName
                                self.fileSize = fileSize
                                self.url = url
                            }
                            public enum CodingKeys: String, CodingKey {
                                case contentSrc = "content_src"
                                case contentType = "content_type"
                                case fileName = "file_name"
                                case fileSize = "file_size"
                                case url
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/attachment`.
                        public var attachment: Operations.UpdateABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload.AttachmentPayload?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/bank_account`.
                        public var bankAccount: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/bank_transaction`.
                        public var bankTransaction: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/category`.
                        public var category: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/gross_value`.
                        public var grossValue: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/project`.
                        public var project: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/rebill_factor`.
                        public var rebillFactor: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation/rebill_type`.
                        public var rebillType: Swift.String?
                        /// Creates a new `BankTransactionExplanationPayload`.
                        ///
                        /// - Parameters:
                        ///   - attachment:
                        ///   - bankAccount:
                        ///   - bankTransaction:
                        ///   - category:
                        ///   - datedOn:
                        ///   - description:
                        ///   - grossValue:
                        ///   - project:
                        ///   - rebillFactor:
                        ///   - rebillType:
                        public init(
                            attachment: Operations.UpdateABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload.AttachmentPayload? = nil,
                            bankAccount: Swift.String? = nil,
                            bankTransaction: Swift.String? = nil,
                            category: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            description: Swift.String? = nil,
                            grossValue: Swift.String? = nil,
                            project: Swift.String? = nil,
                            rebillFactor: Swift.String? = nil,
                            rebillType: Swift.String? = nil
                        ) {
                            self.attachment = attachment
                            self.bankAccount = bankAccount
                            self.bankTransaction = bankTransaction
                            self.category = category
                            self.datedOn = datedOn
                            self.description = description
                            self.grossValue = grossValue
                            self.project = project
                            self.rebillFactor = rebillFactor
                            self.rebillType = rebillType
                        }
                        public enum CodingKeys: String, CodingKey {
                            case attachment
                            case bankAccount = "bank_account"
                            case bankTransaction = "bank_transaction"
                            case category
                            case datedOn = "dated_on"
                            case description
                            case grossValue = "gross_value"
                            case project
                            case rebillFactor = "rebill_factor"
                            case rebillType = "rebill_type"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/json/bank_transaction_explanation`.
                    public var bankTransactionExplanation: Operations.UpdateABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - bankTransactionExplanation:
                    public init(bankTransactionExplanation: Operations.UpdateABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload? = nil) {
                        self.bankTransactionExplanation = bankTransactionExplanation
                    }
                    public enum CodingKeys: String, CodingKey {
                        case bankTransactionExplanation = "bank_transaction_explanation"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateABankTransactionExplanation.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateABankTransactionExplanation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.UpdateABankTransactionExplanation.Input.Headers = .init(),
                body: Operations.UpdateABankTransactionExplanation.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateABankTransactionExplanation.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateABankTransactionExplanation.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateABankTransactionExplanation.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateABankTransactionExplanation.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/put(updateABankTransactionExplanation)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateABankTransactionExplanation.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateABankTransactionExplanation.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single bank transaction explanation
    ///
    /// Get a single bank transaction explanation
    ///
    /// - Remark: HTTP `GET /v2/bank_transaction_explanations/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/{id}/get(getASingleBankTransactionExplanation)`.
    public enum GetASingleBankTransactionExplanation {
        public static let id: Swift.String = "getASingleBankTransactionExplanation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleBankTransactionExplanation.Input.Path
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleBankTransactionExplanation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleBankTransactionExplanation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleBankTransactionExplanation.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleBankTransactionExplanation.Input.Path,
                headers: Operations.GetASingleBankTransactionExplanation.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleBankTransactionExplanation.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleBankTransactionExplanation.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleBankTransactionExplanation.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleBankTransactionExplanation.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/{id}/get(getASingleBankTransactionExplanation)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleBankTransactionExplanation.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleBankTransactionExplanation.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a bank transaction explanation
    ///
    /// Delete a bank transaction explanation
    ///
    /// - Remark: HTTP `DELETE /v2/bank_transaction_explanations/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/{id}/delete(deleteABankTransactionExplanation)`.
    public enum DeleteABankTransactionExplanation {
        public static let id: Swift.String = "deleteABankTransactionExplanation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteABankTransactionExplanation.Input.Path
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteABankTransactionExplanation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteABankTransactionExplanation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteABankTransactionExplanation.Input.Headers
            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation`.
                    public struct BankTransactionExplanationPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/attachment`.
                        public struct AttachmentPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/attachment/content_src`.
                            public var contentSrc: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/attachment/content_type`.
                            public var contentType: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/attachment/file_name`.
                            public var fileName: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/attachment/file_size`.
                            public var fileSize: Swift.Double?
                            /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/attachment/url`.
                            public var url: Swift.String?
                            /// Creates a new `AttachmentPayload`.
                            ///
                            /// - Parameters:
                            ///   - contentSrc:
                            ///   - contentType:
                            ///   - fileName:
                            ///   - fileSize:
                            ///   - url:
                            public init(
                                contentSrc: Swift.String? = nil,
                                contentType: Swift.String? = nil,
                                fileName: Swift.String? = nil,
                                fileSize: Swift.Double? = nil,
                                url: Swift.String? = nil
                            ) {
                                self.contentSrc = contentSrc
                                self.contentType = contentType
                                self.fileName = fileName
                                self.fileSize = fileSize
                                self.url = url
                            }
                            public enum CodingKeys: String, CodingKey {
                                case contentSrc = "content_src"
                                case contentType = "content_type"
                                case fileName = "file_name"
                                case fileSize = "file_size"
                                case url
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/attachment`.
                        public var attachment: Operations.DeleteABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload.AttachmentPayload?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/bank_account`.
                        public var bankAccount: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/bank_transaction`.
                        public var bankTransaction: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/category`.
                        public var category: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/gross_value`.
                        public var grossValue: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/project`.
                        public var project: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/rebill_factor`.
                        public var rebillFactor: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation/rebill_type`.
                        public var rebillType: Swift.String?
                        /// Creates a new `BankTransactionExplanationPayload`.
                        ///
                        /// - Parameters:
                        ///   - attachment:
                        ///   - bankAccount:
                        ///   - bankTransaction:
                        ///   - category:
                        ///   - datedOn:
                        ///   - description:
                        ///   - grossValue:
                        ///   - project:
                        ///   - rebillFactor:
                        ///   - rebillType:
                        public init(
                            attachment: Operations.DeleteABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload.AttachmentPayload? = nil,
                            bankAccount: Swift.String? = nil,
                            bankTransaction: Swift.String? = nil,
                            category: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            description: Swift.String? = nil,
                            grossValue: Swift.String? = nil,
                            project: Swift.String? = nil,
                            rebillFactor: Swift.String? = nil,
                            rebillType: Swift.String? = nil
                        ) {
                            self.attachment = attachment
                            self.bankAccount = bankAccount
                            self.bankTransaction = bankTransaction
                            self.category = category
                            self.datedOn = datedOn
                            self.description = description
                            self.grossValue = grossValue
                            self.project = project
                            self.rebillFactor = rebillFactor
                            self.rebillType = rebillType
                        }
                        public enum CodingKeys: String, CodingKey {
                            case attachment
                            case bankAccount = "bank_account"
                            case bankTransaction = "bank_transaction"
                            case category
                            case datedOn = "dated_on"
                            case description
                            case grossValue = "gross_value"
                            case project
                            case rebillFactor = "rebill_factor"
                            case rebillType = "rebill_type"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/json/bank_transaction_explanation`.
                    public var bankTransactionExplanation: Operations.DeleteABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - bankTransactionExplanation:
                    public init(bankTransactionExplanation: Operations.DeleteABankTransactionExplanation.Input.Body.JsonPayload.BankTransactionExplanationPayload? = nil) {
                        self.bankTransactionExplanation = bankTransactionExplanation
                    }
                    public enum CodingKeys: String, CodingKey {
                        case bankTransactionExplanation = "bank_transaction_explanation"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/requestBody/content/application\/json`.
                case json(Operations.DeleteABankTransactionExplanation.Input.Body.JsonPayload)
            }
            public var body: Operations.DeleteABankTransactionExplanation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteABankTransactionExplanation.Input.Path,
                headers: Operations.DeleteABankTransactionExplanation.Input.Headers = .init(),
                body: Operations.DeleteABankTransactionExplanation.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transaction_explanations/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteABankTransactionExplanation.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteABankTransactionExplanation.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteABankTransactionExplanation.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteABankTransactionExplanation.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_transaction_explanations/{id}/delete(deleteABankTransactionExplanation)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteABankTransactionExplanation.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteABankTransactionExplanation.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all bank transactions under a certain bank account
    ///
    /// List all bank transactions under a certain bank account
    ///
    /// - Remark: HTTP `GET /v2/bank_transactions`.
    /// - Remark: Generated from `#/paths//v2/bank_transactions/get(listAllBankTransactionsUnderACertainBankAccount)`.
    public enum ListAllBankTransactionsUnderACertainBankAccount {
        public static let id: Swift.String = "listAllBankTransactionsUnderACertainBankAccount"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/query/bank_account`.
                public var bankAccount: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/query/from_date`.
                public var fromDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/query/to_date`.
                public var toDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/query/updated_since`.
                public var updatedSince: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/query/view`.
                public var view: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/query/last_uploaded`.
                public var lastUploaded: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - bankAccount:
                ///   - fromDate:
                ///   - toDate:
                ///   - updatedSince:
                ///   - view:
                ///   - lastUploaded:
                public init(
                    bankAccount: Swift.String? = nil,
                    fromDate: Swift.String? = nil,
                    toDate: Swift.String? = nil,
                    updatedSince: Swift.String? = nil,
                    view: Swift.String? = nil,
                    lastUploaded: Swift.String? = nil
                ) {
                    self.bankAccount = bankAccount
                    self.fromDate = fromDate
                    self.toDate = toDate
                    self.updatedSince = updatedSince
                    self.view = view
                    self.lastUploaded = lastUploaded
                }
            }
            public var query: Operations.ListAllBankTransactionsUnderACertainBankAccount.Input.Query
            /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllBankTransactionsUnderACertainBankAccount.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllBankTransactionsUnderACertainBankAccount.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllBankTransactionsUnderACertainBankAccount.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListAllBankTransactionsUnderACertainBankAccount.Input.Query = .init(),
                headers: Operations.ListAllBankTransactionsUnderACertainBankAccount.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transactions/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllBankTransactionsUnderACertainBankAccount.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllBankTransactionsUnderACertainBankAccount.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllBankTransactionsUnderACertainBankAccount.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllBankTransactionsUnderACertainBankAccount.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_transactions/get(listAllBankTransactionsUnderACertainBankAccount)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllBankTransactionsUnderACertainBankAccount.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllBankTransactionsUnderACertainBankAccount.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single bank transaction
    ///
    /// Get a single bank transaction
    ///
    /// - Remark: HTTP `GET /v2/bank_transactions/{id}`.
    /// - Remark: Generated from `#/paths//v2/bank_transactions/{id}/get(getASingleBankTransaction)`.
    public enum GetASingleBankTransaction {
        public static let id: Swift.String = "getASingleBankTransaction"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_transactions/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transactions/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleBankTransaction.Input.Path
            /// - Remark: Generated from `#/paths/v2/bank_transactions/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleBankTransaction.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleBankTransaction.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleBankTransaction.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleBankTransaction.Input.Path,
                headers: Operations.GetASingleBankTransaction.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transactions/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_transactions/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transactions/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleBankTransaction.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleBankTransaction.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleBankTransaction.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleBankTransaction.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_transactions/{id}/get(getASingleBankTransaction)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleBankTransaction.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleBankTransaction.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Upload a bank statement
    ///
    /// Upload a bank statement
    ///
    /// - Remark: HTTP `POST /v2/bank_transactions/statement`.
    /// - Remark: Generated from `#/paths//v2/bank_transactions/statement/post(uploadABankStatement)`.
    public enum UploadABankStatement {
        public static let id: Swift.String = "uploadABankStatement"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/query/bank_account`.
                public var bankAccount: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - bankAccount:
                public init(bankAccount: Swift.String? = nil) {
                    self.bankAccount = bankAccount
                }
            }
            public var query: Operations.UploadABankStatement.Input.Query
            /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UploadABankStatement.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UploadABankStatement.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UploadABankStatement.Input.Headers
            /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/requestBody/json/StatementPayload`.
                    public struct StatementPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/requestBody/json/StatementPayload/amount`.
                        public var amount: Swift.Double?
                        /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/requestBody/json/StatementPayload/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/requestBody/json/StatementPayload/description`.
                        public var description: Swift.String?
                        /// Creates a new `StatementPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - amount:
                        ///   - datedOn:
                        ///   - description:
                        public init(
                            amount: Swift.Double? = nil,
                            datedOn: Swift.String? = nil,
                            description: Swift.String? = nil
                        ) {
                            self.amount = amount
                            self.datedOn = datedOn
                            self.description = description
                        }
                        public enum CodingKeys: String, CodingKey {
                            case amount
                            case datedOn = "dated_on"
                            case description
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/requestBody/json/statement`.
                    public typealias StatementPayload = [Operations.UploadABankStatement.Input.Body.JsonPayload.StatementPayloadPayload]
                    /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/requestBody/json/statement`.
                    public var statement: Operations.UploadABankStatement.Input.Body.JsonPayload.StatementPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - statement:
                    public init(statement: Operations.UploadABankStatement.Input.Body.JsonPayload.StatementPayload? = nil) {
                        self.statement = statement
                    }
                    public enum CodingKeys: String, CodingKey {
                        case statement
                    }
                }
                /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/requestBody/content/application\/json`.
                case json(Operations.UploadABankStatement.Input.Body.JsonPayload)
            }
            public var body: Operations.UploadABankStatement.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            ///   - body:
            public init(
                query: Operations.UploadABankStatement.Input.Query = .init(),
                headers: Operations.UploadABankStatement.Input.Headers = .init(),
                body: Operations.UploadABankStatement.Input.Body? = nil
            ) {
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bank_transactions/statement/POST/responses/200/content/application\/json`.
                    case json(Operations.UploadABankStatement.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UploadABankStatement.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UploadABankStatement.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UploadABankStatement.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bank_transactions/statement/post(uploadABankStatement)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UploadABankStatement.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UploadABankStatement.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Bills
    ///
    /// List Bills
    ///
    /// - Remark: HTTP `GET /v2/bills`.
    /// - Remark: Generated from `#/paths//v2/bills/get(listBills)`.
    public enum ListBills {
        public static let id: Swift.String = "listBills"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bills/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/GET/query/view`.
                public var view: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bills/GET/query/from_date`.
                public var fromDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bills/GET/query/to_date`.
                public var toDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bills/GET/query/updated_since`.
                public var updatedSince: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bills/GET/query/contact`.
                public var contact: Swift.String?
                /// - Remark: Generated from `#/paths/v2/bills/GET/query/project`.
                public var project: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - view:
                ///   - fromDate:
                ///   - toDate:
                ///   - updatedSince:
                ///   - contact:
                ///   - project:
                public init(
                    view: Swift.String? = nil,
                    fromDate: Swift.String? = nil,
                    toDate: Swift.String? = nil,
                    updatedSince: Swift.String? = nil,
                    contact: Swift.String? = nil,
                    project: Swift.String? = nil
                ) {
                    self.view = view
                    self.fromDate = fromDate
                    self.toDate = toDate
                    self.updatedSince = updatedSince
                    self.contact = contact
                    self.project = project
                }
            }
            public var query: Operations.ListBills.Input.Query
            /// - Remark: Generated from `#/paths/v2/bills/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListBills.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListBills.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListBills.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListBills.Input.Query = .init(),
                headers: Operations.ListBills.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bills/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bills/GET/responses/200/content/application\/json`.
                    case json(Operations.ListBills.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListBills.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListBills.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListBills.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bills/get(listBills)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListBills.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListBills.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Bill
    ///
    /// Create Bill
    ///
    /// - Remark: HTTP `POST /v2/bills`.
    /// - Remark: Generated from `#/paths//v2/bills/post(createBill)`.
    public enum CreateBill {
        public static let id: Swift.String = "createBill"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bills/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateBill.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateBill.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateBill.Input.Headers
            /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill`.
                    public struct BillPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/attachment`.
                        public struct AttachmentPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/attachment/content_type`.
                            public var contentType: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/attachment/data`.
                            public var data: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/attachment/description`.
                            public var description: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/attachment/file_name`.
                            public var fileName: Swift.String?
                            /// Creates a new `AttachmentPayload`.
                            ///
                            /// - Parameters:
                            ///   - contentType:
                            ///   - data:
                            ///   - description:
                            ///   - fileName:
                            public init(
                                contentType: Swift.String? = nil,
                                data: Swift.String? = nil,
                                description: Swift.String? = nil,
                                fileName: Swift.String? = nil
                            ) {
                                self.contentType = contentType
                                self.data = data
                                self.description = description
                                self.fileName = fileName
                            }
                            public enum CodingKeys: String, CodingKey {
                                case contentType = "content_type"
                                case data
                                case description
                                case fileName = "file_name"
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/attachment`.
                        public var attachment: Operations.CreateBill.Input.Body.JsonPayload.BillPayload.AttachmentPayload?
                        /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/category`.
                        public var category: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/contact`.
                        public var contact: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/due_on`.
                        public var dueOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/reference`.
                        public var reference: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/sale_tax_rate`.
                        public var saleTaxRate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill/total_value`.
                        public var totalValue: Swift.String?
                        /// Creates a new `BillPayload`.
                        ///
                        /// - Parameters:
                        ///   - attachment:
                        ///   - category:
                        ///   - contact:
                        ///   - datedOn:
                        ///   - dueOn:
                        ///   - reference:
                        ///   - saleTaxRate:
                        ///   - totalValue:
                        public init(
                            attachment: Operations.CreateBill.Input.Body.JsonPayload.BillPayload.AttachmentPayload? = nil,
                            category: Swift.String? = nil,
                            contact: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            dueOn: Swift.String? = nil,
                            reference: Swift.String? = nil,
                            saleTaxRate: Swift.String? = nil,
                            totalValue: Swift.String? = nil
                        ) {
                            self.attachment = attachment
                            self.category = category
                            self.contact = contact
                            self.datedOn = datedOn
                            self.dueOn = dueOn
                            self.reference = reference
                            self.saleTaxRate = saleTaxRate
                            self.totalValue = totalValue
                        }
                        public enum CodingKeys: String, CodingKey {
                            case attachment
                            case category
                            case contact
                            case datedOn = "dated_on"
                            case dueOn = "due_on"
                            case reference
                            case saleTaxRate = "sale_tax_rate"
                            case totalValue = "total_value"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/json/bill`.
                    public var bill: Operations.CreateBill.Input.Body.JsonPayload.BillPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - bill:
                    public init(bill: Operations.CreateBill.Input.Body.JsonPayload.BillPayload? = nil) {
                        self.bill = bill
                    }
                    public enum CodingKeys: String, CodingKey {
                        case bill
                    }
                }
                /// - Remark: Generated from `#/paths/v2/bills/POST/requestBody/content/application\/json`.
                case json(Operations.CreateBill.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateBill.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateBill.Input.Headers = .init(),
                body: Operations.CreateBill.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bills/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bills/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateBill.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateBill.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateBill.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateBill.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bills/post(createBill)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateBill.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateBill.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Bill
    ///
    /// Show Bill
    ///
    /// - Remark: HTTP `GET /v2/bills/{id}`.
    /// - Remark: Generated from `#/paths//v2/bills/{id}/get(showBill)`.
    public enum ShowBill {
        public static let id: Swift.String = "showBill"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bills/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowBill.Input.Path
            /// - Remark: Generated from `#/paths/v2/bills/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowBill.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowBill.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowBill.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowBill.Input.Path,
                headers: Operations.ShowBill.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowBill.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowBill.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowBill.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowBill.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bills/{id}/get(showBill)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowBill.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowBill.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update Bill
    ///
    /// Update Bill
    ///
    /// - Remark: HTTP `PUT /v2/bills/{id}`.
    /// - Remark: Generated from `#/paths//v2/bills/{id}/put(updateBill)`.
    public enum UpdateBill {
        public static let id: Swift.String = "updateBill"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateBill.Input.Path
            /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateBill.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateBill.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateBill.Input.Headers
            /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json/bill`.
                    public struct BillPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json/bill/category`.
                        public var category: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json/bill/contact`.
                        public var contact: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json/bill/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json/bill/due_on`.
                        public var dueOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json/bill/reference`.
                        public var reference: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json/bill/sale_tax_rate`.
                        public var saleTaxRate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json/bill/total_value`.
                        public var totalValue: Swift.String?
                        /// Creates a new `BillPayload`.
                        ///
                        /// - Parameters:
                        ///   - category:
                        ///   - contact:
                        ///   - datedOn:
                        ///   - dueOn:
                        ///   - reference:
                        ///   - saleTaxRate:
                        ///   - totalValue:
                        public init(
                            category: Swift.String? = nil,
                            contact: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            dueOn: Swift.String? = nil,
                            reference: Swift.String? = nil,
                            saleTaxRate: Swift.String? = nil,
                            totalValue: Swift.String? = nil
                        ) {
                            self.category = category
                            self.contact = contact
                            self.datedOn = datedOn
                            self.dueOn = dueOn
                            self.reference = reference
                            self.saleTaxRate = saleTaxRate
                            self.totalValue = totalValue
                        }
                        public enum CodingKeys: String, CodingKey {
                            case category
                            case contact
                            case datedOn = "dated_on"
                            case dueOn = "due_on"
                            case reference
                            case saleTaxRate = "sale_tax_rate"
                            case totalValue = "total_value"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/json/bill`.
                    public var bill: Operations.UpdateBill.Input.Body.JsonPayload.BillPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - bill:
                    public init(bill: Operations.UpdateBill.Input.Body.JsonPayload.BillPayload? = nil) {
                        self.bill = bill
                    }
                    public enum CodingKeys: String, CodingKey {
                        case bill
                    }
                }
                /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateBill.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateBill.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateBill.Input.Path,
                headers: Operations.UpdateBill.Input.Headers = .init(),
                body: Operations.UpdateBill.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateBill.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateBill.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateBill.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateBill.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bills/{id}/put(updateBill)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateBill.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateBill.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Bill
    ///
    /// Delete Bill
    ///
    /// - Remark: HTTP `DELETE /v2/bills/{id}`.
    /// - Remark: Generated from `#/paths//v2/bills/{id}/delete(deleteBill)`.
    public enum DeleteBill {
        public static let id: Swift.String = "deleteBill"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteBill.Input.Path
            /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteBill.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteBill.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteBill.Input.Headers
            /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json/bill`.
                    public struct BillPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json/bill/category`.
                        public var category: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json/bill/contact`.
                        public var contact: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json/bill/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json/bill/due_on`.
                        public var dueOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json/bill/reference`.
                        public var reference: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json/bill/sale_tax_rate`.
                        public var saleTaxRate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json/bill/total_value`.
                        public var totalValue: Swift.String?
                        /// Creates a new `BillPayload`.
                        ///
                        /// - Parameters:
                        ///   - category:
                        ///   - contact:
                        ///   - datedOn:
                        ///   - dueOn:
                        ///   - reference:
                        ///   - saleTaxRate:
                        ///   - totalValue:
                        public init(
                            category: Swift.String? = nil,
                            contact: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            dueOn: Swift.String? = nil,
                            reference: Swift.String? = nil,
                            saleTaxRate: Swift.String? = nil,
                            totalValue: Swift.String? = nil
                        ) {
                            self.category = category
                            self.contact = contact
                            self.datedOn = datedOn
                            self.dueOn = dueOn
                            self.reference = reference
                            self.saleTaxRate = saleTaxRate
                            self.totalValue = totalValue
                        }
                        public enum CodingKeys: String, CodingKey {
                            case category
                            case contact
                            case datedOn = "dated_on"
                            case dueOn = "due_on"
                            case reference
                            case saleTaxRate = "sale_tax_rate"
                            case totalValue = "total_value"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/json/bill`.
                    public var bill: Operations.DeleteBill.Input.Body.JsonPayload.BillPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - bill:
                    public init(bill: Operations.DeleteBill.Input.Body.JsonPayload.BillPayload? = nil) {
                        self.bill = bill
                    }
                    public enum CodingKeys: String, CodingKey {
                        case bill
                    }
                }
                /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/requestBody/content/application\/json`.
                case json(Operations.DeleteBill.Input.Body.JsonPayload)
            }
            public var body: Operations.DeleteBill.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteBill.Input.Path,
                headers: Operations.DeleteBill.Input.Headers = .init(),
                body: Operations.DeleteBill.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bills/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteBill.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteBill.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteBill.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteBill.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bills/{id}/delete(deleteBill)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteBill.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteBill.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Bill Items
    ///
    /// List Bill Items
    ///
    /// - Remark: HTTP `GET /v2/bill_items`.
    /// - Remark: Generated from `#/paths//v2/bill_items/get(listBillItems)`.
    public enum ListBillItems {
        public static let id: Swift.String = "listBillItems"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bill_items/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bill_items/GET/query/bill`.
                public var bill: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - bill:
                public init(bill: Swift.String? = nil) {
                    self.bill = bill
                }
            }
            public var query: Operations.ListBillItems.Input.Query
            /// - Remark: Generated from `#/paths/v2/bill_items/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListBillItems.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListBillItems.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListBillItems.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListBillItems.Input.Query = .init(),
                headers: Operations.ListBillItems.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bill_items/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bill_items/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bill_items/GET/responses/200/content/application\/json`.
                    case json(Operations.ListBillItems.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListBillItems.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListBillItems.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListBillItems.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bill_items/get(listBillItems)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListBillItems.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListBillItems.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Bill Item
    ///
    /// Show Bill Item
    ///
    /// - Remark: HTTP `GET /v2/bill_items/{bill_item_id}`.
    /// - Remark: Generated from `#/paths//v2/bill_items/{bill_item_id}/get(showBillItem)`.
    public enum ShowBillItem {
        public static let id: Swift.String = "showBillItem"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/bill_items/{bill_item_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bill_items/{bill_item_id}/GET/path/bill_item_id`.
                public var billItemId: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - billItemId:
                public init(billItemId: Swift.String) {
                    self.billItemId = billItemId
                }
            }
            public var path: Operations.ShowBillItem.Input.Path
            /// - Remark: Generated from `#/paths/v2/bill_items/{bill_item_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowBillItem.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowBillItem.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowBillItem.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowBillItem.Input.Path,
                headers: Operations.ShowBillItem.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/bill_items/{bill_item_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/bill_items/{bill_item_id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/bill_items/{bill_item_id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowBillItem.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowBillItem.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowBillItem.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowBillItem.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/bill_items/{bill_item_id}/get(showBillItem)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowBillItem.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowBillItem.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all capital assets
    ///
    /// List all capital assets
    ///
    /// - Remark: HTTP `GET /v2/capital_assets`.
    /// - Remark: Generated from `#/paths//v2/capital_assets/get(listAllCapitalAssets)`.
    public enum ListAllCapitalAssets {
        public static let id: Swift.String = "listAllCapitalAssets"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/capital_assets/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Retrieves information about events in the capital asset life cycle (such as purchase, depreciation, and disposal).
                ///
                /// - Remark: Generated from `#/paths/v2/capital_assets/GET/query/include_history`.
                public var includeHistory: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - includeHistory: Retrieves information about events in the capital asset life cycle (such as purchase, depreciation, and disposal).
                public init(includeHistory: Swift.String? = nil) {
                    self.includeHistory = includeHistory
                }
            }
            public var query: Operations.ListAllCapitalAssets.Input.Query
            /// - Remark: Generated from `#/paths/v2/capital_assets/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllCapitalAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllCapitalAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllCapitalAssets.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListAllCapitalAssets.Input.Query = .init(),
                headers: Operations.ListAllCapitalAssets.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_assets/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/capital_assets/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/capital_assets/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllCapitalAssets.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllCapitalAssets.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllCapitalAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllCapitalAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/capital_assets/get(listAllCapitalAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllCapitalAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllCapitalAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single capital asset
    ///
    /// Get a single capital asset
    ///
    /// - Remark: HTTP `GET /v2/capital_assets/{id}/`.
    /// - Remark: Generated from `#/paths//v2/capital_assets/{id}//get(getASingleCapitalAsset)`.
    public enum GetASingleCapitalAsset {
        public static let id: Swift.String = "getASingleCapitalAsset"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/capital_assets/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_assets/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleCapitalAsset.Input.Path
            /// - Remark: Generated from `#/paths/v2/capital_assets/{id}/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Retrieves information about events in the capital asset life cycle (such as purchase, depreciation, and disposal).
                ///
                /// - Remark: Generated from `#/paths/v2/capital_assets/{id}/GET/query/include_history`.
                public var includeHistory: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - includeHistory: Retrieves information about events in the capital asset life cycle (such as purchase, depreciation, and disposal).
                public init(includeHistory: Swift.String? = nil) {
                    self.includeHistory = includeHistory
                }
            }
            public var query: Operations.GetASingleCapitalAsset.Input.Query
            /// - Remark: Generated from `#/paths/v2/capital_assets/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleCapitalAsset.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleCapitalAsset.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleCapitalAsset.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.GetASingleCapitalAsset.Input.Path,
                query: Operations.GetASingleCapitalAsset.Input.Query = .init(),
                headers: Operations.GetASingleCapitalAsset.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_assets/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/capital_assets/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/capital_assets/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleCapitalAsset.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleCapitalAsset.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleCapitalAsset.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleCapitalAsset.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/capital_assets/{id}//get(getASingleCapitalAsset)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleCapitalAsset.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleCapitalAsset.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all capital asset types
    ///
    /// List all capital asset types
    ///
    /// - Remark: HTTP `GET /v2/capital_asset_types`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/get(listAllCapitalAssetTypes)`.
    public enum ListAllCapitalAssetTypes {
        public static let id: Swift.String = "listAllCapitalAssetTypes"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllCapitalAssetTypes.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllCapitalAssetTypes.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllCapitalAssetTypes.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListAllCapitalAssetTypes.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllCapitalAssetTypes.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllCapitalAssetTypes.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllCapitalAssetTypes.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllCapitalAssetTypes.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/capital_asset_types/get(listAllCapitalAssetTypes)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllCapitalAssetTypes.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllCapitalAssetTypes.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create capital asset type
    ///
    /// Create capital asset type
    ///
    /// - Remark: HTTP `POST /v2/capital_asset_types`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/post(createCapitalAssetType)`.
    public enum CreateCapitalAssetType {
        public static let id: Swift.String = "createCapitalAssetType"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateCapitalAssetType.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateCapitalAssetType.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateCapitalAssetType.Input.Headers
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/requestBody/json/capital_asset_type`.
                    public struct CapitalAssetTypePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/requestBody/json/capital_asset_type/name`.
                        public var name: Swift.String?
                        /// Creates a new `CapitalAssetTypePayload`.
                        ///
                        /// - Parameters:
                        ///   - name:
                        public init(name: Swift.String? = nil) {
                            self.name = name
                        }
                        public enum CodingKeys: String, CodingKey {
                            case name
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/requestBody/json/capital_asset_type`.
                    public var capitalAssetType: Operations.CreateCapitalAssetType.Input.Body.JsonPayload.CapitalAssetTypePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - capitalAssetType:
                    public init(capitalAssetType: Operations.CreateCapitalAssetType.Input.Body.JsonPayload.CapitalAssetTypePayload? = nil) {
                        self.capitalAssetType = capitalAssetType
                    }
                    public enum CodingKeys: String, CodingKey {
                        case capitalAssetType = "capital_asset_type"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/requestBody/content/application\/json`.
                case json(Operations.CreateCapitalAssetType.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateCapitalAssetType.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateCapitalAssetType.Input.Headers = .init(),
                body: Operations.CreateCapitalAssetType.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateCapitalAssetType.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateCapitalAssetType.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateCapitalAssetType.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateCapitalAssetType.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/capital_asset_types/post(createCapitalAssetType)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateCapitalAssetType.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateCapitalAssetType.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single capital asset type
    ///
    /// Get a single capital asset type
    ///
    /// - Remark: HTTP `GET /v2/capital_asset_types/{id}`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/get(getASingleCapitalAssetType)`.
    public enum GetASingleCapitalAssetType {
        public static let id: Swift.String = "getASingleCapitalAssetType"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleCapitalAssetType.Input.Path
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleCapitalAssetType.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleCapitalAssetType.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleCapitalAssetType.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleCapitalAssetType.Input.Path,
                headers: Operations.GetASingleCapitalAssetType.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleCapitalAssetType.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleCapitalAssetType.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleCapitalAssetType.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleCapitalAssetType.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/get(getASingleCapitalAssetType)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleCapitalAssetType.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleCapitalAssetType.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update capital asset type
    ///
    /// Update capital asset type
    ///
    /// - Remark: HTTP `PUT /v2/capital_asset_types/{id}`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/put(updateCapitalAssetType)`.
    public enum UpdateCapitalAssetType {
        public static let id: Swift.String = "updateCapitalAssetType"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateCapitalAssetType.Input.Path
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateCapitalAssetType.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateCapitalAssetType.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateCapitalAssetType.Input.Headers
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/requestBody/json/capital_asset_type`.
                    public struct CapitalAssetTypePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/requestBody/json/capital_asset_type/name`.
                        public var name: Swift.String?
                        /// Creates a new `CapitalAssetTypePayload`.
                        ///
                        /// - Parameters:
                        ///   - name:
                        public init(name: Swift.String? = nil) {
                            self.name = name
                        }
                        public enum CodingKeys: String, CodingKey {
                            case name
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/requestBody/json/capital_asset_type`.
                    public var capitalAssetType: Operations.UpdateCapitalAssetType.Input.Body.JsonPayload.CapitalAssetTypePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - capitalAssetType:
                    public init(capitalAssetType: Operations.UpdateCapitalAssetType.Input.Body.JsonPayload.CapitalAssetTypePayload? = nil) {
                        self.capitalAssetType = capitalAssetType
                    }
                    public enum CodingKeys: String, CodingKey {
                        case capitalAssetType = "capital_asset_type"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateCapitalAssetType.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateCapitalAssetType.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateCapitalAssetType.Input.Path,
                headers: Operations.UpdateCapitalAssetType.Input.Headers = .init(),
                body: Operations.UpdateCapitalAssetType.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateCapitalAssetType.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateCapitalAssetType.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateCapitalAssetType.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateCapitalAssetType.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/put(updateCapitalAssetType)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateCapitalAssetType.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateCapitalAssetType.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete capital asset type
    ///
    /// Delete capital asset type
    ///
    /// - Remark: HTTP `DELETE /v2/capital_asset_types/{id}`.
    /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/delete(deleteCapitalAssetType)`.
    public enum DeleteCapitalAssetType {
        public static let id: Swift.String = "deleteCapitalAssetType"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteCapitalAssetType.Input.Path
            /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteCapitalAssetType.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteCapitalAssetType.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteCapitalAssetType.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.DeleteCapitalAssetType.Input.Path,
                headers: Operations.DeleteCapitalAssetType.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/capital_asset_types/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteCapitalAssetType.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteCapitalAssetType.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteCapitalAssetType.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteCapitalAssetType.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/capital_asset_types/{id}/delete(deleteCapitalAssetType)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteCapitalAssetType.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteCapitalAssetType.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Cashflow summary for a given date range
    ///
    /// Cashflow summary for a given date range
    ///
    /// - Remark: HTTP `GET /v2/cashflow`.
    /// - Remark: Generated from `#/paths//v2/cashflow/get(cashflowSummaryForAGivenDateRange)`.
    public enum CashflowSummaryForAGivenDateRange {
        public static let id: Swift.String = "cashflowSummaryForAGivenDateRange"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/cashflow/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/cashflow/GET/query/from_date`.
                public var fromDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/cashflow/GET/query/to_date`.
                public var toDate: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fromDate:
                ///   - toDate:
                public init(
                    fromDate: Swift.String? = nil,
                    toDate: Swift.String? = nil
                ) {
                    self.fromDate = fromDate
                    self.toDate = toDate
                }
            }
            public var query: Operations.CashflowSummaryForAGivenDateRange.Input.Query
            /// - Remark: Generated from `#/paths/v2/cashflow/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CashflowSummaryForAGivenDateRange.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CashflowSummaryForAGivenDateRange.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CashflowSummaryForAGivenDateRange.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.CashflowSummaryForAGivenDateRange.Input.Query = .init(),
                headers: Operations.CashflowSummaryForAGivenDateRange.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/cashflow/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/cashflow/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/cashflow/GET/responses/200/content/application\/json`.
                    case json(Operations.CashflowSummaryForAGivenDateRange.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CashflowSummaryForAGivenDateRange.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CashflowSummaryForAGivenDateRange.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CashflowSummaryForAGivenDateRange.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/cashflow/get(cashflowSummaryForAGivenDateRange)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CashflowSummaryForAGivenDateRange.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CashflowSummaryForAGivenDateRange.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Categories
    ///
    /// List Categories
    ///
    /// - Remark: HTTP `GET /v2/categories`.
    /// - Remark: Generated from `#/paths//v2/categories/get(listCategories)`.
    public enum ListCategories {
        public static let id: Swift.String = "listCategories"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/categories/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListCategories.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListCategories.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListCategories.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListCategories.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/categories/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/categories/GET/responses/200/content/application\/json`.
                    case json(Operations.ListCategories.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListCategories.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListCategories.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListCategories.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/categories/get(listCategories)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListCategories.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListCategories.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create category
    ///
    /// Documentation: https://dev.freeagent.com/docs/categories#create-a-category
    ///
    /// - Remark: HTTP `POST /v2/categories`.
    /// - Remark: Generated from `#/paths//v2/categories/post(createCategory)`.
    public enum CreateCategory {
        public static let id: Swift.String = "createCategory"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/categories/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateCategory.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateCategory.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateCategory.Input.Headers
            /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/json/category`.
                    public struct CategoryPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/json/category/allowable_for_tax`.
                        public var allowableForTax: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/json/category/auto_sales_tax_rate`.
                        public var autoSalesTaxRate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/json/category/category_group`.
                        public var categoryGroup: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/json/category/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/json/category/nominal_code`.
                        public var nominalCode: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/json/category/tax_reporting_name`.
                        public var taxReportingName: Swift.String?
                        /// Creates a new `CategoryPayload`.
                        ///
                        /// - Parameters:
                        ///   - allowableForTax:
                        ///   - autoSalesTaxRate:
                        ///   - categoryGroup:
                        ///   - description:
                        ///   - nominalCode:
                        ///   - taxReportingName:
                        public init(
                            allowableForTax: Swift.Bool? = nil,
                            autoSalesTaxRate: Swift.String? = nil,
                            categoryGroup: Swift.String? = nil,
                            description: Swift.String? = nil,
                            nominalCode: Swift.String? = nil,
                            taxReportingName: Swift.String? = nil
                        ) {
                            self.allowableForTax = allowableForTax
                            self.autoSalesTaxRate = autoSalesTaxRate
                            self.categoryGroup = categoryGroup
                            self.description = description
                            self.nominalCode = nominalCode
                            self.taxReportingName = taxReportingName
                        }
                        public enum CodingKeys: String, CodingKey {
                            case allowableForTax = "allowable_for_tax"
                            case autoSalesTaxRate = "auto_sales_tax_rate"
                            case categoryGroup = "category_group"
                            case description
                            case nominalCode = "nominal_code"
                            case taxReportingName = "tax_reporting_name"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/json/category`.
                    public var category: Operations.CreateCategory.Input.Body.JsonPayload.CategoryPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - category:
                    public init(category: Operations.CreateCategory.Input.Body.JsonPayload.CategoryPayload? = nil) {
                        self.category = category
                    }
                    public enum CodingKeys: String, CodingKey {
                        case category
                    }
                }
                /// - Remark: Generated from `#/paths/v2/categories/POST/requestBody/content/application\/json`.
                case json(Operations.CreateCategory.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateCategory.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateCategory.Input.Headers = .init(),
                body: Operations.CreateCategory.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/categories/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/categories/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateCategory.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateCategory.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateCategory.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateCategory.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/categories/post(createCategory)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateCategory.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateCategory.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single category
    ///
    /// Get a single category
    ///
    /// - Remark: HTTP `GET /v2/categories/{nominal_code}`.
    /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/get(getASingleCategory)`.
    public enum GetASingleCategory {
        public static let id: Swift.String = "getASingleCategory"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/GET/path/nominal_code`.
                public var nominalCode: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - nominalCode:
                public init(nominalCode: Swift.String) {
                    self.nominalCode = nominalCode
                }
            }
            public var path: Operations.GetASingleCategory.Input.Path
            /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleCategory.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleCategory.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleCategory.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleCategory.Input.Path,
                headers: Operations.GetASingleCategory.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleCategory.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleCategory.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleCategory.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleCategory.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/get(getASingleCategory)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleCategory.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleCategory.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update category
    ///
    /// Update category
    ///
    /// - Remark: HTTP `PUT /v2/categories/{nominal_code}`.
    /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/put(updateCategory)`.
    public enum UpdateCategory {
        public static let id: Swift.String = "updateCategory"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/path/nominal_code`.
                public var nominalCode: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - nominalCode:
                public init(nominalCode: Swift.String) {
                    self.nominalCode = nominalCode
                }
            }
            public var path: Operations.UpdateCategory.Input.Path
            /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateCategory.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateCategory.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateCategory.Input.Headers
            /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody/json/category`.
                    public struct CategoryPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody/json/category/allowable_for_tax`.
                        public var allowableForTax: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody/json/category/auto_sales_tax_rate`.
                        public var autoSalesTaxRate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody/json/category/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody/json/category/nominal_code`.
                        public var nominalCode: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody/json/category/tax_reporting_name`.
                        public var taxReportingName: Swift.String?
                        /// Creates a new `CategoryPayload`.
                        ///
                        /// - Parameters:
                        ///   - allowableForTax:
                        ///   - autoSalesTaxRate:
                        ///   - description:
                        ///   - nominalCode:
                        ///   - taxReportingName:
                        public init(
                            allowableForTax: Swift.Bool? = nil,
                            autoSalesTaxRate: Swift.String? = nil,
                            description: Swift.String? = nil,
                            nominalCode: Swift.String? = nil,
                            taxReportingName: Swift.String? = nil
                        ) {
                            self.allowableForTax = allowableForTax
                            self.autoSalesTaxRate = autoSalesTaxRate
                            self.description = description
                            self.nominalCode = nominalCode
                            self.taxReportingName = taxReportingName
                        }
                        public enum CodingKeys: String, CodingKey {
                            case allowableForTax = "allowable_for_tax"
                            case autoSalesTaxRate = "auto_sales_tax_rate"
                            case description
                            case nominalCode = "nominal_code"
                            case taxReportingName = "tax_reporting_name"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody/json/category`.
                    public var category: Operations.UpdateCategory.Input.Body.JsonPayload.CategoryPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - category:
                    public init(category: Operations.UpdateCategory.Input.Body.JsonPayload.CategoryPayload? = nil) {
                        self.category = category
                    }
                    public enum CodingKeys: String, CodingKey {
                        case category
                    }
                }
                /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateCategory.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateCategory.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateCategory.Input.Path,
                headers: Operations.UpdateCategory.Input.Headers = .init(),
                body: Operations.UpdateCategory.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateCategory.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateCategory.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateCategory.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateCategory.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/put(updateCategory)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateCategory.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateCategory.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete category
    ///
    /// Delete category
    ///
    /// - Remark: HTTP `DELETE /v2/categories/{nominal_code}`.
    /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/delete(deleteCategory)`.
    public enum DeleteCategory {
        public static let id: Swift.String = "deleteCategory"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/DELETE/path/nominal_code`.
                public var nominalCode: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - nominalCode:
                public init(nominalCode: Swift.String) {
                    self.nominalCode = nominalCode
                }
            }
            public var path: Operations.DeleteCategory.Input.Path
            /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteCategory.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteCategory.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteCategory.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.DeleteCategory.Input.Path,
                headers: Operations.DeleteCategory.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/categories/{nominal_code}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteCategory.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteCategory.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteCategory.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteCategory.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/categories/{nominal_code}/delete(deleteCategory)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteCategory.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteCategory.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all CIS bands for a company
    ///
    /// List all CIS bands for a company
    ///
    /// - Remark: HTTP `GET /v2/cis_bands`.
    /// - Remark: Generated from `#/paths//v2/cis_bands/get(listAllCisBandsForACompany)`.
    public enum ListAllCisBandsForACompany {
        public static let id: Swift.String = "listAllCisBandsForACompany"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/cis_bands/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllCisBandsForACompany.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllCisBandsForACompany.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllCisBandsForACompany.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListAllCisBandsForACompany.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/cis_bands/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/cis_bands/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/cis_bands/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllCisBandsForACompany.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllCisBandsForACompany.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllCisBandsForACompany.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllCisBandsForACompany.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/cis_bands/get(listAllCisBandsForACompany)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllCisBandsForACompany.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllCisBandsForACompany.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Company Details
    ///
    /// Company Details
    ///
    /// - Remark: HTTP `GET /v2/company`.
    /// - Remark: Generated from `#/paths//v2/company/get(companyDetails)`.
    public enum CompanyDetails {
        public static let id: Swift.String = "companyDetails"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/company/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CompanyDetails.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CompanyDetails.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CompanyDetails.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.CompanyDetails.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/company/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/company/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/company/GET/responses/200/content/application\/json`.
                    case json(Operations.CompanyDetails.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CompanyDetails.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CompanyDetails.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CompanyDetails.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Company details
            ///
            /// - Remark: Generated from `#/paths//v2/company/get(companyDetails)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CompanyDetails.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CompanyDetails.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List business categories
    ///
    /// List business categories
    ///
    /// - Remark: HTTP `GET /v2/company/business_categories`.
    /// - Remark: Generated from `#/paths//v2/company/business_categories/get(listBusinessCategories)`.
    public enum ListBusinessCategories {
        public static let id: Swift.String = "listBusinessCategories"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/company/business_categories/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListBusinessCategories.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListBusinessCategories.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListBusinessCategories.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListBusinessCategories.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/company/business_categories/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/company/business_categories/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/company/business_categories/GET/responses/200/content/application\/json`.
                    case json(Operations.ListBusinessCategories.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListBusinessCategories.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListBusinessCategories.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListBusinessCategories.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/company/business_categories/get(listBusinessCategories)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListBusinessCategories.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListBusinessCategories.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Tax Timeline
    ///
    /// Show Tax Timeline
    ///
    /// - Remark: HTTP `GET /v2/company/tax_timeline`.
    /// - Remark: Generated from `#/paths//v2/company/tax_timeline/get(showTaxTimeline)`.
    public enum ShowTaxTimeline {
        public static let id: Swift.String = "showTaxTimeline"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/company/tax_timeline/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowTaxTimeline.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowTaxTimeline.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowTaxTimeline.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ShowTaxTimeline.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/company/tax_timeline/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/company/tax_timeline/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/company/tax_timeline/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowTaxTimeline.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowTaxTimeline.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowTaxTimeline.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowTaxTimeline.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/company/tax_timeline/get(showTaxTimeline)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowTaxTimeline.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowTaxTimeline.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Contacts
    ///
    /// List Contacts
    ///
    /// - Remark: HTTP `GET /v2/contacts`.
    /// - Remark: Generated from `#/paths//v2/contacts/get(listContacts)`.
    public enum ListContacts {
        public static let id: Swift.String = "listContacts"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/contacts/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListContacts.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListContacts.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListContacts.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListContacts.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/contacts/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/contacts/GET/responses/200/content/application\/json`.
                    case json(Operations.ListContacts.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListContacts.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListContacts.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListContacts.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/contacts/get(listContacts)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListContacts.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListContacts.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Contact
    ///
    /// Create Contact
    ///
    /// - Remark: HTTP `POST /v2/contacts`.
    /// - Remark: Generated from `#/paths//v2/contacts/post(createContact)`.
    public enum CreateContact {
        public static let id: Swift.String = "createContact"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/contacts/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateContact.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateContact.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateContact.Input.Headers
            /// - Remark: Generated from `#/paths/v2/contacts/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/contacts/POST/requestBody/json/contact`.
                    public struct ContactPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/contacts/POST/requestBody/json/contact/email`.
                        public var email: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/contacts/POST/requestBody/json/contact/first_name`.
                        public var firstName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/contacts/POST/requestBody/json/contact/last_name`.
                        public var lastName: Swift.String?
                        /// Creates a new `ContactPayload`.
                        ///
                        /// - Parameters:
                        ///   - email:
                        ///   - firstName:
                        ///   - lastName:
                        public init(
                            email: Swift.String? = nil,
                            firstName: Swift.String? = nil,
                            lastName: Swift.String? = nil
                        ) {
                            self.email = email
                            self.firstName = firstName
                            self.lastName = lastName
                        }
                        public enum CodingKeys: String, CodingKey {
                            case email
                            case firstName = "first_name"
                            case lastName = "last_name"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/contacts/POST/requestBody/json/contact`.
                    public var contact: Operations.CreateContact.Input.Body.JsonPayload.ContactPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - contact:
                    public init(contact: Operations.CreateContact.Input.Body.JsonPayload.ContactPayload? = nil) {
                        self.contact = contact
                    }
                    public enum CodingKeys: String, CodingKey {
                        case contact
                    }
                }
                /// - Remark: Generated from `#/paths/v2/contacts/POST/requestBody/content/application\/json`.
                case json(Operations.CreateContact.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateContact.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateContact.Input.Headers = .init(),
                body: Operations.CreateContact.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/contacts/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/contacts/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateContact.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateContact.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateContact.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateContact.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/contacts/post(createContact)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateContact.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateContact.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Contact
    ///
    /// Show Contact
    ///
    /// - Remark: HTTP `GET /v2/contacts/{id}`.
    /// - Remark: Generated from `#/paths//v2/contacts/{id}/get(showContact)`.
    public enum ShowContact {
        public static let id: Swift.String = "showContact"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/contacts/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowContact.Input.Path
            /// - Remark: Generated from `#/paths/v2/contacts/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowContact.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowContact.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowContact.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowContact.Input.Path,
                headers: Operations.ShowContact.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowContact.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowContact.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowContact.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowContact.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/contacts/{id}/get(showContact)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowContact.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowContact.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update Contact
    ///
    /// Update Contact
    ///
    /// - Remark: HTTP `PUT /v2/contacts/{id}`.
    /// - Remark: Generated from `#/paths//v2/contacts/{id}/put(updateContact)`.
    public enum UpdateContact {
        public static let id: Swift.String = "updateContact"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateContact.Input.Path
            /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateContact.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateContact.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateContact.Input.Headers
            /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/requestBody/json/contact`.
                    public struct ContactPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/requestBody/json/contact/country`.
                        public var country: Swift.String?
                        /// Creates a new `ContactPayload`.
                        ///
                        /// - Parameters:
                        ///   - country:
                        public init(country: Swift.String? = nil) {
                            self.country = country
                        }
                        public enum CodingKeys: String, CodingKey {
                            case country
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/requestBody/json/contact`.
                    public var contact: Operations.UpdateContact.Input.Body.JsonPayload.ContactPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - contact:
                    public init(contact: Operations.UpdateContact.Input.Body.JsonPayload.ContactPayload? = nil) {
                        self.contact = contact
                    }
                    public enum CodingKeys: String, CodingKey {
                        case contact
                    }
                }
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateContact.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateContact.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateContact.Input.Path,
                headers: Operations.UpdateContact.Input.Headers = .init(),
                body: Operations.UpdateContact.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateContact.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateContact.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateContact.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateContact.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/contacts/{id}/put(updateContact)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateContact.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateContact.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Contact
    ///
    /// Delete Contact
    ///
    /// - Remark: HTTP `DELETE /v2/contacts/{id}`.
    /// - Remark: Generated from `#/paths//v2/contacts/{id}/delete(deleteContact)`.
    public enum DeleteContact {
        public static let id: Swift.String = "deleteContact"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteContact.Input.Path
            /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteContact.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteContact.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteContact.Input.Headers
            /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/requestBody/json/contact`.
                    public struct ContactPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/requestBody/json/contact/email`.
                        public var email: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/requestBody/json/contact/first_name`.
                        public var firstName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/requestBody/json/contact/last_name`.
                        public var lastName: Swift.String?
                        /// Creates a new `ContactPayload`.
                        ///
                        /// - Parameters:
                        ///   - email:
                        ///   - firstName:
                        ///   - lastName:
                        public init(
                            email: Swift.String? = nil,
                            firstName: Swift.String? = nil,
                            lastName: Swift.String? = nil
                        ) {
                            self.email = email
                            self.firstName = firstName
                            self.lastName = lastName
                        }
                        public enum CodingKeys: String, CodingKey {
                            case email
                            case firstName = "first_name"
                            case lastName = "last_name"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/requestBody/json/contact`.
                    public var contact: Operations.DeleteContact.Input.Body.JsonPayload.ContactPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - contact:
                    public init(contact: Operations.DeleteContact.Input.Body.JsonPayload.ContactPayload? = nil) {
                        self.contact = contact
                    }
                    public enum CodingKeys: String, CodingKey {
                        case contact
                    }
                }
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/requestBody/content/application\/json`.
                case json(Operations.DeleteContact.Input.Body.JsonPayload)
            }
            public var body: Operations.DeleteContact.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteContact.Input.Path,
                headers: Operations.DeleteContact.Input.Headers = .init(),
                body: Operations.DeleteContact.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/contacts/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteContact.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteContact.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteContact.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteContact.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/contacts/{id}/delete(deleteContact)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteContact.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteContact.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark Credit Note as sent
    ///
    /// Mark Credit Note as sent
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}/transitions/mark_as_sent`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_sent/put(markCreditNoteAsSent)`.
    public enum MarkCreditNoteAsSent {
        public static let id: Swift.String = "markCreditNoteAsSent"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_sent/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_sent/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkCreditNoteAsSent.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_sent/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkCreditNoteAsSent.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkCreditNoteAsSent.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkCreditNoteAsSent.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkCreditNoteAsSent.Input.Path,
                headers: Operations.MarkCreditNoteAsSent.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_sent/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_sent/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_sent/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkCreditNoteAsSent.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkCreditNoteAsSent.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkCreditNoteAsSent.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkCreditNoteAsSent.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_sent/put(markCreditNoteAsSent)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkCreditNoteAsSent.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkCreditNoteAsSent.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark Credit Note as cancelled
    ///
    /// Mark Credit Note as cancelled
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}/transitions/mark_as_cancelled`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_cancelled/put(markCreditNoteAsCancelled)`.
    public enum MarkCreditNoteAsCancelled {
        public static let id: Swift.String = "markCreditNoteAsCancelled"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_cancelled/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_cancelled/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkCreditNoteAsCancelled.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_cancelled/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkCreditNoteAsCancelled.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkCreditNoteAsCancelled.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkCreditNoteAsCancelled.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkCreditNoteAsCancelled.Input.Path,
                headers: Operations.MarkCreditNoteAsCancelled.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_cancelled/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_cancelled/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_cancelled/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkCreditNoteAsCancelled.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkCreditNoteAsCancelled.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkCreditNoteAsCancelled.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkCreditNoteAsCancelled.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_cancelled/put(markCreditNoteAsCancelled)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkCreditNoteAsCancelled.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkCreditNoteAsCancelled.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark Credit Notes as draft
    ///
    /// Mark Credit Notes as draft
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}/transitions/mark_as_draft`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_draft/put(markCreditNotesAsDraft)`.
    public enum MarkCreditNotesAsDraft {
        public static let id: Swift.String = "markCreditNotesAsDraft"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_draft/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_draft/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkCreditNotesAsDraft.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_draft/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkCreditNotesAsDraft.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkCreditNotesAsDraft.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkCreditNotesAsDraft.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkCreditNotesAsDraft.Input.Path,
                headers: Operations.MarkCreditNotesAsDraft.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_draft/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_draft/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/transitions/mark_as_draft/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkCreditNotesAsDraft.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkCreditNotesAsDraft.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkCreditNotesAsDraft.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkCreditNotesAsDraft.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/transitions/mark_as_draft/put(markCreditNotesAsDraft)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkCreditNotesAsDraft.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkCreditNotesAsDraft.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Credit Notes
    ///
    /// List Credit Notes
    ///
    /// - Remark: HTTP `GET /v2/credit_notes`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/get(listCreditNotes)`.
    public enum ListCreditNotes {
        public static let id: Swift.String = "listCreditNotes"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/GET/query/contact`.
                public var contact: Swift.String?
                /// - Remark: Generated from `#/paths/v2/credit_notes/GET/query/project`.
                public var project: Swift.String?
                /// - Remark: Generated from `#/paths/v2/credit_notes/GET/query/currency`.
                public var currency: Swift.String?
                /// - Remark: Generated from `#/paths/v2/credit_notes/GET/query/view`.
                public var view: Swift.String?
                /// - Remark: Generated from `#/paths/v2/credit_notes/GET/query/updated_since`.
                public var updatedSince: Swift.String?
                /// - Remark: Generated from `#/paths/v2/credit_notes/GET/query/sort`.
                public var sort: Swift.String?
                /// - Remark: Generated from `#/paths/v2/credit_notes/GET/query/nested_credit_note_items`.
                public var nestedCreditNoteItems: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - contact:
                ///   - project:
                ///   - currency:
                ///   - view:
                ///   - updatedSince:
                ///   - sort:
                ///   - nestedCreditNoteItems:
                public init(
                    contact: Swift.String? = nil,
                    project: Swift.String? = nil,
                    currency: Swift.String? = nil,
                    view: Swift.String? = nil,
                    updatedSince: Swift.String? = nil,
                    sort: Swift.String? = nil,
                    nestedCreditNoteItems: Swift.String? = nil
                ) {
                    self.contact = contact
                    self.project = project
                    self.currency = currency
                    self.view = view
                    self.updatedSince = updatedSince
                    self.sort = sort
                    self.nestedCreditNoteItems = nestedCreditNoteItems
                }
            }
            public var query: Operations.ListCreditNotes.Input.Query
            /// - Remark: Generated from `#/paths/v2/credit_notes/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListCreditNotes.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListCreditNotes.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListCreditNotes.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListCreditNotes.Input.Query = .init(),
                headers: Operations.ListCreditNotes.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/GET/responses/200/content/application\/json`.
                    case json(Operations.ListCreditNotes.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListCreditNotes.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListCreditNotes.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListCreditNotes.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/get(listCreditNotes)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListCreditNotes.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListCreditNotes.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Credit Note
    ///
    /// Create Credit Note
    ///
    /// - Remark: HTTP `POST /v2/credit_notes`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/post(createCreditNote)`.
    public enum CreateCreditNote {
        public static let id: Swift.String = "createCreditNote"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateCreditNote.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateCreditNote.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateCreditNote.Input.Headers
            /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note`.
                    public struct CreditNotePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/always_show_bic_and_iban`.
                        public var alwaysShowBicAndIban: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/contact`.
                        public var contact: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/CreditNoteItemsPayload`.
                        public struct CreditNoteItemsPayloadPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/CreditNoteItemsPayload/description`.
                            public var description: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/CreditNoteItemsPayload/price`.
                            public var price: Swift.Double?
                            /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/CreditNoteItemsPayload/quantity`.
                            public var quantity: Swift.Double?
                            /// Creates a new `CreditNoteItemsPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - description:
                            ///   - price:
                            ///   - quantity:
                            public init(
                                description: Swift.String? = nil,
                                price: Swift.Double? = nil,
                                quantity: Swift.Double? = nil
                            ) {
                                self.description = description
                                self.price = price
                                self.quantity = quantity
                            }
                            public enum CodingKeys: String, CodingKey {
                                case description
                                case price
                                case quantity
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/credit_note_items`.
                        public typealias CreditNoteItemsPayload = [Operations.CreateCreditNote.Input.Body.JsonPayload.CreditNotePayload.CreditNoteItemsPayloadPayload]
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/credit_note_items`.
                        public var creditNoteItems: Operations.CreateCreditNote.Input.Body.JsonPayload.CreditNotePayload.CreditNoteItemsPayload?
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/currency`.
                        public var currency: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/due_on`.
                        public var dueOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/omit_header`.
                        public var omitHeader: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note/payment_terms_in_days`.
                        public var paymentTermsInDays: Swift.Double?
                        /// Creates a new `CreditNotePayload`.
                        ///
                        /// - Parameters:
                        ///   - alwaysShowBicAndIban:
                        ///   - contact:
                        ///   - creditNoteItems:
                        ///   - currency:
                        ///   - datedOn:
                        ///   - dueOn:
                        ///   - omitHeader:
                        ///   - paymentTermsInDays:
                        public init(
                            alwaysShowBicAndIban: Swift.Bool? = nil,
                            contact: Swift.String? = nil,
                            creditNoteItems: Operations.CreateCreditNote.Input.Body.JsonPayload.CreditNotePayload.CreditNoteItemsPayload? = nil,
                            currency: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            dueOn: Swift.String? = nil,
                            omitHeader: Swift.Bool? = nil,
                            paymentTermsInDays: Swift.Double? = nil
                        ) {
                            self.alwaysShowBicAndIban = alwaysShowBicAndIban
                            self.contact = contact
                            self.creditNoteItems = creditNoteItems
                            self.currency = currency
                            self.datedOn = datedOn
                            self.dueOn = dueOn
                            self.omitHeader = omitHeader
                            self.paymentTermsInDays = paymentTermsInDays
                        }
                        public enum CodingKeys: String, CodingKey {
                            case alwaysShowBicAndIban = "always_show_bic_and_iban"
                            case contact
                            case creditNoteItems = "credit_note_items"
                            case currency
                            case datedOn = "dated_on"
                            case dueOn = "due_on"
                            case omitHeader = "omit_header"
                            case paymentTermsInDays = "payment_terms_in_days"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/json/credit_note`.
                    public var creditNote: Operations.CreateCreditNote.Input.Body.JsonPayload.CreditNotePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - creditNote:
                    public init(creditNote: Operations.CreateCreditNote.Input.Body.JsonPayload.CreditNotePayload? = nil) {
                        self.creditNote = creditNote
                    }
                    public enum CodingKeys: String, CodingKey {
                        case creditNote = "credit_note"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/credit_notes/POST/requestBody/content/application\/json`.
                case json(Operations.CreateCreditNote.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateCreditNote.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateCreditNote.Input.Headers = .init(),
                body: Operations.CreateCreditNote.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateCreditNote.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateCreditNote.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateCreditNote.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateCreditNote.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/post(createCreditNote)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateCreditNote.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateCreditNote.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Credit Note
    ///
    /// Show Credit Note
    ///
    /// - Remark: HTTP `GET /v2/credit_notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/get(showCreditNote)`.
    public enum ShowCreditNote {
        public static let id: Swift.String = "showCreditNote"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowCreditNote.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowCreditNote.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowCreditNote.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowCreditNote.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowCreditNote.Input.Path,
                headers: Operations.ShowCreditNote.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowCreditNote.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowCreditNote.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowCreditNote.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowCreditNote.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/get(showCreditNote)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowCreditNote.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowCreditNote.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update Credit Note
    ///
    /// Update Credit Note
    ///
    /// - Remark: HTTP `PUT /v2/credit_notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/put(updateCreditNote)`.
    public enum UpdateCreditNote {
        public static let id: Swift.String = "updateCreditNote"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateCreditNote.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateCreditNote.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateCreditNote.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateCreditNote.Input.Headers
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody/json/credit_note`.
                    public struct CreditNotePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody/json/credit_note/comments`.
                        public var comments: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody/json/credit_note/CreditNoteItemsPayload`.
                        public struct CreditNoteItemsPayloadPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody/json/credit_note/CreditNoteItemsPayload/description`.
                            public var description: Swift.String?
                            /// Creates a new `CreditNoteItemsPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - description:
                            public init(description: Swift.String? = nil) {
                                self.description = description
                            }
                            public enum CodingKeys: String, CodingKey {
                                case description
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody/json/credit_note/credit_note_items`.
                        public typealias CreditNoteItemsPayload = [Operations.UpdateCreditNote.Input.Body.JsonPayload.CreditNotePayload.CreditNoteItemsPayloadPayload]
                        /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody/json/credit_note/credit_note_items`.
                        public var creditNoteItems: Operations.UpdateCreditNote.Input.Body.JsonPayload.CreditNotePayload.CreditNoteItemsPayload?
                        /// Creates a new `CreditNotePayload`.
                        ///
                        /// - Parameters:
                        ///   - comments:
                        ///   - creditNoteItems:
                        public init(
                            comments: Swift.String? = nil,
                            creditNoteItems: Operations.UpdateCreditNote.Input.Body.JsonPayload.CreditNotePayload.CreditNoteItemsPayload? = nil
                        ) {
                            self.comments = comments
                            self.creditNoteItems = creditNoteItems
                        }
                        public enum CodingKeys: String, CodingKey {
                            case comments
                            case creditNoteItems = "credit_note_items"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody/json/credit_note`.
                    public var creditNote: Operations.UpdateCreditNote.Input.Body.JsonPayload.CreditNotePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - creditNote:
                    public init(creditNote: Operations.UpdateCreditNote.Input.Body.JsonPayload.CreditNotePayload? = nil) {
                        self.creditNote = creditNote
                    }
                    public enum CodingKeys: String, CodingKey {
                        case creditNote = "credit_note"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateCreditNote.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateCreditNote.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateCreditNote.Input.Path,
                headers: Operations.UpdateCreditNote.Input.Headers = .init(),
                body: Operations.UpdateCreditNote.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateCreditNote.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateCreditNote.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateCreditNote.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateCreditNote.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/put(updateCreditNote)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateCreditNote.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateCreditNote.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Credit Notes
    ///
    /// Delete Credit Notes
    ///
    /// - Remark: HTTP `DELETE /v2/credit_notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/delete(deleteCreditNotes)`.
    public enum DeleteCreditNotes {
        public static let id: Swift.String = "deleteCreditNotes"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteCreditNotes.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteCreditNotes.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteCreditNotes.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteCreditNotes.Input.Headers
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/DELETE/requestBody/multipartForm`.
                @frozen public enum MultipartFormPayload: Sendable, Hashable {
                    case undocumented(OpenAPIRuntime.MultipartRawPart)
                }
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/DELETE/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Operations.DeleteCreditNotes.Input.Body.MultipartFormPayload>)
            }
            public var body: Operations.DeleteCreditNotes.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteCreditNotes.Input.Path,
                headers: Operations.DeleteCreditNotes.Input.Headers = .init(),
                body: Operations.DeleteCreditNotes.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteCreditNotes.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteCreditNotes.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteCreditNotes.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteCreditNotes.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/delete(deleteCreditNotes)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteCreditNotes.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteCreditNotes.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Credit Note as PDF
    ///
    /// Show Credit Note as PDF
    ///
    /// - Remark: HTTP `GET /v2/credit_notes/{id}/pdf`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/pdf/get(showCreditNoteAsPdf)`.
    public enum ShowCreditNoteAsPdf {
        public static let id: Swift.String = "showCreditNoteAsPdf"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/pdf/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/pdf/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowCreditNoteAsPdf.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/pdf/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowCreditNoteAsPdf.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowCreditNoteAsPdf.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowCreditNoteAsPdf.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowCreditNoteAsPdf.Input.Path,
                headers: Operations.ShowCreditNoteAsPdf.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/pdf/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/pdf/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/pdf/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowCreditNoteAsPdf.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowCreditNoteAsPdf.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowCreditNoteAsPdf.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowCreditNoteAsPdf.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/pdf/get(showCreditNoteAsPdf)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowCreditNoteAsPdf.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowCreditNoteAsPdf.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Send Credit Note Email
    ///
    /// Send Credit Note Email
    ///
    /// - Remark: HTTP `POST /v2/credit_notes/{id}/send_email`.
    /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/send_email/post(sendCreditNoteEmail)`.
    public enum SendCreditNoteEmail {
        public static let id: Swift.String = "sendCreditNoteEmail"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.SendCreditNoteEmail.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.SendCreditNoteEmail.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.SendCreditNoteEmail.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.SendCreditNoteEmail.Input.Headers
            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/json/credit_note`.
                    public struct CreditNotePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/json/credit_note/email`.
                        public struct EmailPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/json/credit_note/email/body`.
                            public var body: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/json/credit_note/email/from`.
                            public var from: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/json/credit_note/email/subject`.
                            public var subject: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/json/credit_note/email/to`.
                            public var to: Swift.String?
                            /// Creates a new `EmailPayload`.
                            ///
                            /// - Parameters:
                            ///   - body:
                            ///   - from:
                            ///   - subject:
                            ///   - to:
                            public init(
                                body: Swift.String? = nil,
                                from: Swift.String? = nil,
                                subject: Swift.String? = nil,
                                to: Swift.String? = nil
                            ) {
                                self.body = body
                                self.from = from
                                self.subject = subject
                                self.to = to
                            }
                            public enum CodingKeys: String, CodingKey {
                                case body
                                case from
                                case subject
                                case to
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/json/credit_note/email`.
                        public var email: Operations.SendCreditNoteEmail.Input.Body.JsonPayload.CreditNotePayload.EmailPayload?
                        /// Creates a new `CreditNotePayload`.
                        ///
                        /// - Parameters:
                        ///   - email:
                        public init(email: Operations.SendCreditNoteEmail.Input.Body.JsonPayload.CreditNotePayload.EmailPayload? = nil) {
                            self.email = email
                        }
                        public enum CodingKeys: String, CodingKey {
                            case email
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/json/credit_note`.
                    public var creditNote: Operations.SendCreditNoteEmail.Input.Body.JsonPayload.CreditNotePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - creditNote:
                    public init(creditNote: Operations.SendCreditNoteEmail.Input.Body.JsonPayload.CreditNotePayload? = nil) {
                        self.creditNote = creditNote
                    }
                    public enum CodingKeys: String, CodingKey {
                        case creditNote = "credit_note"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/requestBody/content/application\/json`.
                case json(Operations.SendCreditNoteEmail.Input.Body.JsonPayload)
            }
            public var body: Operations.SendCreditNoteEmail.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.SendCreditNoteEmail.Input.Path,
                headers: Operations.SendCreditNoteEmail.Input.Headers = .init(),
                body: Operations.SendCreditNoteEmail.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_notes/{id}/send_email/POST/responses/200/content/application\/json`.
                    case json(Operations.SendCreditNoteEmail.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.SendCreditNoteEmail.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.SendCreditNoteEmail.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.SendCreditNoteEmail.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_notes/{id}/send_email/post(sendCreditNoteEmail)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.SendCreditNoteEmail.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.SendCreditNoteEmail.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Credit Note Reconciliations
    ///
    /// List Credit Note Reconciliations
    ///
    /// - Remark: HTTP `GET /v2/credit_note_reconciliations`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/get(listCreditNoteReconciliations)`.
    public enum ListCreditNoteReconciliations {
        public static let id: Swift.String = "listCreditNoteReconciliations"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/GET/query/updated_since`.
                public var updatedSince: Swift.String?
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/GET/query/from_date`.
                public var fromDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/GET/query/to_date`.
                public var toDate: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - updatedSince:
                ///   - fromDate:
                ///   - toDate:
                public init(
                    updatedSince: Swift.String? = nil,
                    fromDate: Swift.String? = nil,
                    toDate: Swift.String? = nil
                ) {
                    self.updatedSince = updatedSince
                    self.fromDate = fromDate
                    self.toDate = toDate
                }
            }
            public var query: Operations.ListCreditNoteReconciliations.Input.Query
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListCreditNoteReconciliations.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListCreditNoteReconciliations.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListCreditNoteReconciliations.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListCreditNoteReconciliations.Input.Query = .init(),
                headers: Operations.ListCreditNoteReconciliations.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/GET/responses/200/content/application\/json`.
                    case json(Operations.ListCreditNoteReconciliations.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListCreditNoteReconciliations.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListCreditNoteReconciliations.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListCreditNoteReconciliations.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/get(listCreditNoteReconciliations)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListCreditNoteReconciliations.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListCreditNoteReconciliations.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Credit Note Reconciliation
    ///
    /// Create Credit Note Reconciliation
    ///
    /// - Remark: HTTP `POST /v2/credit_note_reconciliations`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/post(createCreditNoteReconciliation)`.
    public enum CreateCreditNoteReconciliation {
        public static let id: Swift.String = "createCreditNoteReconciliation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateCreditNoteReconciliation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateCreditNoteReconciliation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateCreditNoteReconciliation.Input.Headers
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/json/credit_note_reconciliation`.
                    public struct CreditNoteReconciliationPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/json/credit_note_reconciliation/credit_note`.
                        public var creditNote: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/json/credit_note_reconciliation/currency`.
                        public var currency: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/json/credit_note_reconciliation/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/json/credit_note_reconciliation/exchange_rate`.
                        public var exchangeRate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/json/credit_note_reconciliation/gross_value`.
                        public var grossValue: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/json/credit_note_reconciliation/invoice`.
                        public var invoice: Swift.String?
                        /// Creates a new `CreditNoteReconciliationPayload`.
                        ///
                        /// - Parameters:
                        ///   - creditNote:
                        ///   - currency:
                        ///   - datedOn:
                        ///   - exchangeRate:
                        ///   - grossValue:
                        ///   - invoice:
                        public init(
                            creditNote: Swift.String? = nil,
                            currency: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            exchangeRate: Swift.String? = nil,
                            grossValue: Swift.String? = nil,
                            invoice: Swift.String? = nil
                        ) {
                            self.creditNote = creditNote
                            self.currency = currency
                            self.datedOn = datedOn
                            self.exchangeRate = exchangeRate
                            self.grossValue = grossValue
                            self.invoice = invoice
                        }
                        public enum CodingKeys: String, CodingKey {
                            case creditNote = "credit_note"
                            case currency
                            case datedOn = "dated_on"
                            case exchangeRate = "exchange_rate"
                            case grossValue = "gross_value"
                            case invoice
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/json/credit_note_reconciliation`.
                    public var creditNoteReconciliation: Operations.CreateCreditNoteReconciliation.Input.Body.JsonPayload.CreditNoteReconciliationPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - creditNoteReconciliation:
                    public init(creditNoteReconciliation: Operations.CreateCreditNoteReconciliation.Input.Body.JsonPayload.CreditNoteReconciliationPayload? = nil) {
                        self.creditNoteReconciliation = creditNoteReconciliation
                    }
                    public enum CodingKeys: String, CodingKey {
                        case creditNoteReconciliation = "credit_note_reconciliation"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/requestBody/content/application\/json`.
                case json(Operations.CreateCreditNoteReconciliation.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateCreditNoteReconciliation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateCreditNoteReconciliation.Input.Headers = .init(),
                body: Operations.CreateCreditNoteReconciliation.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateCreditNoteReconciliation.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateCreditNoteReconciliation.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateCreditNoteReconciliation.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateCreditNoteReconciliation.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/post(createCreditNoteReconciliation)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateCreditNoteReconciliation.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateCreditNoteReconciliation.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Credit Note Reconciliation
    ///
    /// Show Credit Note Reconciliation
    ///
    /// - Remark: HTTP `GET /v2/credit_note_reconciliations/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/get(showCreditNoteReconciliation)`.
    public enum ShowCreditNoteReconciliation {
        public static let id: Swift.String = "showCreditNoteReconciliation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowCreditNoteReconciliation.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowCreditNoteReconciliation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowCreditNoteReconciliation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowCreditNoteReconciliation.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowCreditNoteReconciliation.Input.Path,
                headers: Operations.ShowCreditNoteReconciliation.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowCreditNoteReconciliation.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowCreditNoteReconciliation.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowCreditNoteReconciliation.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowCreditNoteReconciliation.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/get(showCreditNoteReconciliation)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowCreditNoteReconciliation.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowCreditNoteReconciliation.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update Credit Note Reconciliation
    ///
    /// Update Credit Note Reconciliation
    ///
    /// - Remark: HTTP `PUT /v2/credit_note_reconciliations/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/put(updateCreditNoteReconciliation)`.
    public enum UpdateCreditNoteReconciliation {
        public static let id: Swift.String = "updateCreditNoteReconciliation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateCreditNoteReconciliation.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateCreditNoteReconciliation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateCreditNoteReconciliation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateCreditNoteReconciliation.Input.Headers
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/requestBody/json/credit_note_reconciliation`.
                    public struct CreditNoteReconciliationPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/requestBody/json/credit_note_reconciliation/gross_value`.
                        public var grossValue: Swift.String?
                        /// Creates a new `CreditNoteReconciliationPayload`.
                        ///
                        /// - Parameters:
                        ///   - grossValue:
                        public init(grossValue: Swift.String? = nil) {
                            self.grossValue = grossValue
                        }
                        public enum CodingKeys: String, CodingKey {
                            case grossValue = "gross_value"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/requestBody/json/credit_note_reconciliation`.
                    public var creditNoteReconciliation: Operations.UpdateCreditNoteReconciliation.Input.Body.JsonPayload.CreditNoteReconciliationPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - creditNoteReconciliation:
                    public init(creditNoteReconciliation: Operations.UpdateCreditNoteReconciliation.Input.Body.JsonPayload.CreditNoteReconciliationPayload? = nil) {
                        self.creditNoteReconciliation = creditNoteReconciliation
                    }
                    public enum CodingKeys: String, CodingKey {
                        case creditNoteReconciliation = "credit_note_reconciliation"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateCreditNoteReconciliation.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateCreditNoteReconciliation.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateCreditNoteReconciliation.Input.Path,
                headers: Operations.UpdateCreditNoteReconciliation.Input.Headers = .init(),
                body: Operations.UpdateCreditNoteReconciliation.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateCreditNoteReconciliation.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateCreditNoteReconciliation.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateCreditNoteReconciliation.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateCreditNoteReconciliation.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/put(updateCreditNoteReconciliation)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateCreditNoteReconciliation.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateCreditNoteReconciliation.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Credit Note Reconciliation
    ///
    /// Delete Credit Note Reconciliation
    ///
    /// - Remark: HTTP `DELETE /v2/credit_note_reconciliations/{id}`.
    /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/delete(deleteCreditNoteReconciliation)`.
    public enum DeleteCreditNoteReconciliation {
        public static let id: Swift.String = "deleteCreditNoteReconciliation"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteCreditNoteReconciliation.Input.Path
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteCreditNoteReconciliation.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteCreditNoteReconciliation.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteCreditNoteReconciliation.Input.Headers
            /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/requestBody/multipartForm`.
                @frozen public enum MultipartFormPayload: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/requestBody/multipartForm/`.
                    public struct _Empty_Payload: Sendable, Hashable {
                        public var body: OpenAPIRuntime.HTTPBody
                        /// Creates a new `_Empty_Payload`.
                        ///
                        /// - Parameters:
                        ///   - body:
                        public init(body: OpenAPIRuntime.HTTPBody) {
                            self.body = body
                        }
                    }
                    case _empty_(OpenAPIRuntime.MultipartPart<Operations.DeleteCreditNoteReconciliation.Input.Body.MultipartFormPayload._Empty_Payload>)
                    case undocumented(OpenAPIRuntime.MultipartRawPart)
                }
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Operations.DeleteCreditNoteReconciliation.Input.Body.MultipartFormPayload>)
            }
            public var body: Operations.DeleteCreditNoteReconciliation.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteCreditNoteReconciliation.Input.Path,
                headers: Operations.DeleteCreditNoteReconciliation.Input.Headers = .init(),
                body: Operations.DeleteCreditNoteReconciliation.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/credit_note_reconciliations/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteCreditNoteReconciliation.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteCreditNoteReconciliation.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteCreditNoteReconciliation.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteCreditNoteReconciliation.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/credit_note_reconciliations/{id}/delete(deleteCreditNoteReconciliation)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteCreditNoteReconciliation.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteCreditNoteReconciliation.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a list of verified sender email addresses
    ///
    /// Get a list of verified sender email addresses
    ///
    /// - Remark: HTTP `GET /v2/email_addresses`.
    /// - Remark: Generated from `#/paths//v2/email_addresses/get(getAListOfVerifiedSenderEmailAddresses)`.
    public enum GetAListOfVerifiedSenderEmailAddresses {
        public static let id: Swift.String = "getAListOfVerifiedSenderEmailAddresses"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/email_addresses/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetAListOfVerifiedSenderEmailAddresses.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetAListOfVerifiedSenderEmailAddresses.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetAListOfVerifiedSenderEmailAddresses.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.GetAListOfVerifiedSenderEmailAddresses.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/email_addresses/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/email_addresses/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/email_addresses/GET/responses/200/content/application\/json`.
                    case json(Operations.GetAListOfVerifiedSenderEmailAddresses.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetAListOfVerifiedSenderEmailAddresses.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetAListOfVerifiedSenderEmailAddresses.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetAListOfVerifiedSenderEmailAddresses.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/email_addresses/get(getAListOfVerifiedSenderEmailAddresses)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetAListOfVerifiedSenderEmailAddresses.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetAListOfVerifiedSenderEmailAddresses.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark estimate as sent
    ///
    /// Mark estimate as sent
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_sent`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_sent/put(markEstimateAsSent)`.
    public enum MarkEstimateAsSent {
        public static let id: Swift.String = "markEstimateAsSent"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_sent/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_sent/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkEstimateAsSent.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_sent/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkEstimateAsSent.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkEstimateAsSent.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkEstimateAsSent.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkEstimateAsSent.Input.Path,
                headers: Operations.MarkEstimateAsSent.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_sent/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_sent/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_sent/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkEstimateAsSent.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkEstimateAsSent.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkEstimateAsSent.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkEstimateAsSent.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_sent/put(markEstimateAsSent)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkEstimateAsSent.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkEstimateAsSent.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark estimate as draft
    ///
    /// Mark estimate as draft
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_draft`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_draft/put(markEstimateAsDraft)`.
    public enum MarkEstimateAsDraft {
        public static let id: Swift.String = "markEstimateAsDraft"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_draft/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_draft/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkEstimateAsDraft.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_draft/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkEstimateAsDraft.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkEstimateAsDraft.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkEstimateAsDraft.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkEstimateAsDraft.Input.Path,
                headers: Operations.MarkEstimateAsDraft.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_draft/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_draft/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_draft/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkEstimateAsDraft.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkEstimateAsDraft.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkEstimateAsDraft.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkEstimateAsDraft.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_draft/put(markEstimateAsDraft)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkEstimateAsDraft.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkEstimateAsDraft.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark estimate as approved
    ///
    /// Mark estimate as approved
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_approved`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_approved/put(markEstimateAsApproved)`.
    public enum MarkEstimateAsApproved {
        public static let id: Swift.String = "markEstimateAsApproved"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_approved/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_approved/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkEstimateAsApproved.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_approved/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkEstimateAsApproved.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkEstimateAsApproved.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkEstimateAsApproved.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkEstimateAsApproved.Input.Path,
                headers: Operations.MarkEstimateAsApproved.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_approved/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_approved/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_approved/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkEstimateAsApproved.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkEstimateAsApproved.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkEstimateAsApproved.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkEstimateAsApproved.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_approved/put(markEstimateAsApproved)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkEstimateAsApproved.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkEstimateAsApproved.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark estimate as rejected
    ///
    /// Mark estimate as rejected
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}/transitions/mark_as_rejected`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_rejected/put(markEstimateAsRejected)`.
    public enum MarkEstimateAsRejected {
        public static let id: Swift.String = "markEstimateAsRejected"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_rejected/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_rejected/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkEstimateAsRejected.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_rejected/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkEstimateAsRejected.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkEstimateAsRejected.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkEstimateAsRejected.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkEstimateAsRejected.Input.Path,
                headers: Operations.MarkEstimateAsRejected.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_rejected/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_rejected/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/transitions/mark_as_rejected/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkEstimateAsRejected.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkEstimateAsRejected.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkEstimateAsRejected.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkEstimateAsRejected.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/{id}/transitions/mark_as_rejected/put(markEstimateAsRejected)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkEstimateAsRejected.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkEstimateAsRejected.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Estimate Item
    ///
    /// Create Estimate Item
    ///
    /// - Remark: HTTP `POST /v2/estimate_items`.
    /// - Remark: Generated from `#/paths//v2/estimate_items/post(createEstimateItem)`.
    public enum CreateEstimateItem {
        public static let id: Swift.String = "createEstimateItem"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimate_items/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateEstimateItem.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateEstimateItem.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateEstimateItem.Input.Headers
            /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate`.
                    public var estimate: Swift.String?
                    /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item`.
                    public struct EstimateItemPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item/category`.
                        public var category: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item/created_at`.
                        public var createdAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item/item_type`.
                        public var itemType: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item/position`.
                        public var position: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item/price`.
                        public var price: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item/quantity`.
                        public var quantity: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item/sales_tax_value`.
                        public var salesTaxValue: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item/updated_at`.
                        public var updatedAt: Swift.String?
                        /// Creates a new `EstimateItemPayload`.
                        ///
                        /// - Parameters:
                        ///   - category:
                        ///   - createdAt:
                        ///   - description:
                        ///   - itemType:
                        ///   - position:
                        ///   - price:
                        ///   - quantity:
                        ///   - salesTaxValue:
                        ///   - updatedAt:
                        public init(
                            category: Swift.String? = nil,
                            createdAt: Swift.String? = nil,
                            description: Swift.String? = nil,
                            itemType: Swift.String? = nil,
                            position: Swift.String? = nil,
                            price: Swift.String? = nil,
                            quantity: Swift.String? = nil,
                            salesTaxValue: Swift.String? = nil,
                            updatedAt: Swift.String? = nil
                        ) {
                            self.category = category
                            self.createdAt = createdAt
                            self.description = description
                            self.itemType = itemType
                            self.position = position
                            self.price = price
                            self.quantity = quantity
                            self.salesTaxValue = salesTaxValue
                            self.updatedAt = updatedAt
                        }
                        public enum CodingKeys: String, CodingKey {
                            case category
                            case createdAt = "created_at"
                            case description
                            case itemType = "item_type"
                            case position
                            case price
                            case quantity
                            case salesTaxValue = "sales_tax_value"
                            case updatedAt = "updated_at"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/json/estimate_item`.
                    public var estimateItem: Operations.CreateEstimateItem.Input.Body.JsonPayload.EstimateItemPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - estimate:
                    ///   - estimateItem:
                    public init(
                        estimate: Swift.String? = nil,
                        estimateItem: Operations.CreateEstimateItem.Input.Body.JsonPayload.EstimateItemPayload? = nil
                    ) {
                        self.estimate = estimate
                        self.estimateItem = estimateItem
                    }
                    public enum CodingKeys: String, CodingKey {
                        case estimate
                        case estimateItem = "estimate_item"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/estimate_items/POST/requestBody/content/application\/json`.
                case json(Operations.CreateEstimateItem.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateEstimateItem.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateEstimateItem.Input.Headers = .init(),
                body: Operations.CreateEstimateItem.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimate_items/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimate_items/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimate_items/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateEstimateItem.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateEstimateItem.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateEstimateItem.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateEstimateItem.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimate_items/post(createEstimateItem)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateEstimateItem.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateEstimateItem.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update Estimate Item
    ///
    /// Update Estimate Item
    ///
    /// - Remark: HTTP `PUT /v2/estimate_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimate_items/{id}/put(updateEstimateItem)`.
    public enum UpdateEstimateItem {
        public static let id: Swift.String = "updateEstimateItem"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateEstimateItem.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateEstimateItem.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateEstimateItem.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateEstimateItem.Input.Headers
            /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item`.
                    public struct EstimateItemPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/category`.
                        public var category: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/created_at`.
                        public var createdAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/item_type`.
                        public var itemType: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/position`.
                        public var position: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/price`.
                        public var price: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/quantity`.
                        public var quantity: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/sales_tax_value`.
                        public var salesTaxValue: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/updated_at`.
                        public var updatedAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item/url`.
                        public var url: Swift.String?
                        /// Creates a new `EstimateItemPayload`.
                        ///
                        /// - Parameters:
                        ///   - category:
                        ///   - createdAt:
                        ///   - description:
                        ///   - itemType:
                        ///   - position:
                        ///   - price:
                        ///   - quantity:
                        ///   - salesTaxValue:
                        ///   - updatedAt:
                        ///   - url:
                        public init(
                            category: Swift.String? = nil,
                            createdAt: Swift.String? = nil,
                            description: Swift.String? = nil,
                            itemType: Swift.String? = nil,
                            position: Swift.String? = nil,
                            price: Swift.String? = nil,
                            quantity: Swift.String? = nil,
                            salesTaxValue: Swift.String? = nil,
                            updatedAt: Swift.String? = nil,
                            url: Swift.String? = nil
                        ) {
                            self.category = category
                            self.createdAt = createdAt
                            self.description = description
                            self.itemType = itemType
                            self.position = position
                            self.price = price
                            self.quantity = quantity
                            self.salesTaxValue = salesTaxValue
                            self.updatedAt = updatedAt
                            self.url = url
                        }
                        public enum CodingKeys: String, CodingKey {
                            case category
                            case createdAt = "created_at"
                            case description
                            case itemType = "item_type"
                            case position
                            case price
                            case quantity
                            case salesTaxValue = "sales_tax_value"
                            case updatedAt = "updated_at"
                            case url
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/json/estimate_item`.
                    public var estimateItem: Operations.UpdateEstimateItem.Input.Body.JsonPayload.EstimateItemPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - estimateItem:
                    public init(estimateItem: Operations.UpdateEstimateItem.Input.Body.JsonPayload.EstimateItemPayload? = nil) {
                        self.estimateItem = estimateItem
                    }
                    public enum CodingKeys: String, CodingKey {
                        case estimateItem = "estimate_item"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateEstimateItem.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateEstimateItem.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateEstimateItem.Input.Path,
                headers: Operations.UpdateEstimateItem.Input.Headers = .init(),
                body: Operations.UpdateEstimateItem.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateEstimateItem.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateEstimateItem.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateEstimateItem.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateEstimateItem.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimate_items/{id}/put(updateEstimateItem)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateEstimateItem.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateEstimateItem.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Estimate Item
    ///
    /// Delete Estimate Item
    ///
    /// - Remark: HTTP `DELETE /v2/estimate_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimate_items/{id}/delete(deleteEstimateItem)`.
    public enum DeleteEstimateItem {
        public static let id: Swift.String = "deleteEstimateItem"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteEstimateItem.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteEstimateItem.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteEstimateItem.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteEstimateItem.Input.Headers
            /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate`.
                    public struct EstimatePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate/contact`.
                        public var contact: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate/currency`.
                        public var currency: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate/due_on`.
                        public var dueOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate/ec_status`.
                        public var ecStatus: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate/estimate_type`.
                        public var estimateType: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate/notes`.
                        public var notes: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate/status`.
                        public var status: Swift.String?
                        /// Creates a new `EstimatePayload`.
                        ///
                        /// - Parameters:
                        ///   - contact:
                        ///   - currency:
                        ///   - datedOn:
                        ///   - dueOn:
                        ///   - ecStatus:
                        ///   - estimateType:
                        ///   - notes:
                        ///   - status:
                        public init(
                            contact: Swift.String? = nil,
                            currency: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            dueOn: Swift.String? = nil,
                            ecStatus: Swift.String? = nil,
                            estimateType: Swift.String? = nil,
                            notes: Swift.String? = nil,
                            status: Swift.String? = nil
                        ) {
                            self.contact = contact
                            self.currency = currency
                            self.datedOn = datedOn
                            self.dueOn = dueOn
                            self.ecStatus = ecStatus
                            self.estimateType = estimateType
                            self.notes = notes
                            self.status = status
                        }
                        public enum CodingKeys: String, CodingKey {
                            case contact
                            case currency
                            case datedOn = "dated_on"
                            case dueOn = "due_on"
                            case ecStatus = "ec_status"
                            case estimateType = "estimate_type"
                            case notes
                            case status
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/json/estimate`.
                    public var estimate: Operations.DeleteEstimateItem.Input.Body.JsonPayload.EstimatePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - estimate:
                    public init(estimate: Operations.DeleteEstimateItem.Input.Body.JsonPayload.EstimatePayload? = nil) {
                        self.estimate = estimate
                    }
                    public enum CodingKeys: String, CodingKey {
                        case estimate
                    }
                }
                /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/requestBody/content/application\/json`.
                case json(Operations.DeleteEstimateItem.Input.Body.JsonPayload)
            }
            public var body: Operations.DeleteEstimateItem.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteEstimateItem.Input.Path,
                headers: Operations.DeleteEstimateItem.Input.Headers = .init(),
                body: Operations.DeleteEstimateItem.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimate_items/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteEstimateItem.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteEstimateItem.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteEstimateItem.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteEstimateItem.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimate_items/{id}/delete(deleteEstimateItem)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteEstimateItem.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteEstimateItem.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Estimates
    ///
    /// List Estimates
    ///
    /// - Remark: HTTP `GET /v2/estimates`.
    /// - Remark: Generated from `#/paths//v2/estimates/get(listEstimates)`.
    public enum ListEstimates {
        public static let id: Swift.String = "listEstimates"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/GET/query/view`.
                public var view: Swift.String?
                /// - Remark: Generated from `#/paths/v2/estimates/GET/query/from_date`.
                public var fromDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/estimates/GET/query/to_date`.
                public var toDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/estimates/GET/query/updated_since`.
                public var updatedSince: Swift.String?
                /// - Remark: Generated from `#/paths/v2/estimates/GET/query/nested_estimate_items`.
                public var nestedEstimateItems: Swift.String?
                /// - Remark: Generated from `#/paths/v2/estimates/GET/query/contact`.
                public var contact: Swift.String?
                /// - Remark: Generated from `#/paths/v2/estimates/GET/query/project`.
                public var project: Swift.String?
                /// - Remark: Generated from `#/paths/v2/estimates/GET/query/invoice`.
                public var invoice: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - view:
                ///   - fromDate:
                ///   - toDate:
                ///   - updatedSince:
                ///   - nestedEstimateItems:
                ///   - contact:
                ///   - project:
                ///   - invoice:
                public init(
                    view: Swift.String? = nil,
                    fromDate: Swift.String? = nil,
                    toDate: Swift.String? = nil,
                    updatedSince: Swift.String? = nil,
                    nestedEstimateItems: Swift.String? = nil,
                    contact: Swift.String? = nil,
                    project: Swift.String? = nil,
                    invoice: Swift.String? = nil
                ) {
                    self.view = view
                    self.fromDate = fromDate
                    self.toDate = toDate
                    self.updatedSince = updatedSince
                    self.nestedEstimateItems = nestedEstimateItems
                    self.contact = contact
                    self.project = project
                    self.invoice = invoice
                }
            }
            public var query: Operations.ListEstimates.Input.Query
            /// - Remark: Generated from `#/paths/v2/estimates/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListEstimates.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListEstimates.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListEstimates.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListEstimates.Input.Query = .init(),
                headers: Operations.ListEstimates.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/GET/responses/200/content/application\/json`.
                    case json(Operations.ListEstimates.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListEstimates.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListEstimates.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListEstimates.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/get(listEstimates)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListEstimates.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListEstimates.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Estimate
    ///
    /// Create Estimate
    ///
    /// - Remark: HTTP `POST /v2/estimates`.
    /// - Remark: Generated from `#/paths//v2/estimates/post(createEstimate)`.
    public enum CreateEstimate {
        public static let id: Swift.String = "createEstimate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateEstimate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateEstimate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateEstimate.Input.Headers
            /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/json/estimate`.
                    public struct EstimatePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/json/estimate/contact`.
                        public var contact: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/json/estimate/currency`.
                        public var currency: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/json/estimate/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/json/estimate/due_on`.
                        public var dueOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/json/estimate/estimate_type`.
                        public var estimateType: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/json/estimate/status`.
                        public var status: Swift.String?
                        /// Creates a new `EstimatePayload`.
                        ///
                        /// - Parameters:
                        ///   - contact:
                        ///   - currency:
                        ///   - datedOn:
                        ///   - dueOn:
                        ///   - estimateType:
                        ///   - status:
                        public init(
                            contact: Swift.String? = nil,
                            currency: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            dueOn: Swift.String? = nil,
                            estimateType: Swift.String? = nil,
                            status: Swift.String? = nil
                        ) {
                            self.contact = contact
                            self.currency = currency
                            self.datedOn = datedOn
                            self.dueOn = dueOn
                            self.estimateType = estimateType
                            self.status = status
                        }
                        public enum CodingKeys: String, CodingKey {
                            case contact
                            case currency
                            case datedOn = "dated_on"
                            case dueOn = "due_on"
                            case estimateType = "estimate_type"
                            case status
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/json/estimate`.
                    public var estimate: Operations.CreateEstimate.Input.Body.JsonPayload.EstimatePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - estimate:
                    public init(estimate: Operations.CreateEstimate.Input.Body.JsonPayload.EstimatePayload? = nil) {
                        self.estimate = estimate
                    }
                    public enum CodingKeys: String, CodingKey {
                        case estimate
                    }
                }
                /// - Remark: Generated from `#/paths/v2/estimates/POST/requestBody/content/application\/json`.
                case json(Operations.CreateEstimate.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateEstimate.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateEstimate.Input.Headers = .init(),
                body: Operations.CreateEstimate.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateEstimate.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateEstimate.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateEstimate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateEstimate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/post(createEstimate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateEstimate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateEstimate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Estimate
    ///
    /// Show Estimate
    ///
    /// - Remark: HTTP `GET /v2/estimates/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/get(showEstimate)`.
    public enum ShowEstimate {
        public static let id: Swift.String = "showEstimate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowEstimate.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowEstimate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowEstimate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowEstimate.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowEstimate.Input.Path,
                headers: Operations.ShowEstimate.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowEstimate.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowEstimate.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowEstimate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowEstimate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/{id}/get(showEstimate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowEstimate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowEstimate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update Estimate
    ///
    /// Update Estimate
    ///
    /// - Remark: HTTP `PUT /v2/estimates/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/put(updateEstimate)`.
    public enum UpdateEstimate {
        public static let id: Swift.String = "updateEstimate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateEstimate.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateEstimate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateEstimate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateEstimate.Input.Headers
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/requestBody/json/estimate`.
                    public struct EstimatePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/requestBody/json/estimate/notes`.
                        public var notes: Swift.String?
                        /// Creates a new `EstimatePayload`.
                        ///
                        /// - Parameters:
                        ///   - notes:
                        public init(notes: Swift.String? = nil) {
                            self.notes = notes
                        }
                        public enum CodingKeys: String, CodingKey {
                            case notes
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/requestBody/json/estimate`.
                    public var estimate: Operations.UpdateEstimate.Input.Body.JsonPayload.EstimatePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - estimate:
                    public init(estimate: Operations.UpdateEstimate.Input.Body.JsonPayload.EstimatePayload? = nil) {
                        self.estimate = estimate
                    }
                    public enum CodingKeys: String, CodingKey {
                        case estimate
                    }
                }
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateEstimate.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateEstimate.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateEstimate.Input.Path,
                headers: Operations.UpdateEstimate.Input.Headers = .init(),
                body: Operations.UpdateEstimate.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateEstimate.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateEstimate.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateEstimate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateEstimate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/{id}/put(updateEstimate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateEstimate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateEstimate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Estimate
    ///
    /// Delete Estimate
    ///
    /// - Remark: HTTP `DELETE /v2/estimates/{id}`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/delete(deleteEstimate)`.
    public enum DeleteEstimate {
        public static let id: Swift.String = "deleteEstimate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteEstimate.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteEstimate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteEstimate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteEstimate.Input.Headers
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate`.
                    public struct EstimatePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate/contact`.
                        public var contact: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate/currency`.
                        public var currency: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate/due_on`.
                        public var dueOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate/ec_status`.
                        public var ecStatus: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate/estimate_type`.
                        public var estimateType: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate/notes`.
                        public var notes: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate/status`.
                        public var status: Swift.String?
                        /// Creates a new `EstimatePayload`.
                        ///
                        /// - Parameters:
                        ///   - contact:
                        ///   - currency:
                        ///   - datedOn:
                        ///   - dueOn:
                        ///   - ecStatus:
                        ///   - estimateType:
                        ///   - notes:
                        ///   - status:
                        public init(
                            contact: Swift.String? = nil,
                            currency: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            dueOn: Swift.String? = nil,
                            ecStatus: Swift.String? = nil,
                            estimateType: Swift.String? = nil,
                            notes: Swift.String? = nil,
                            status: Swift.String? = nil
                        ) {
                            self.contact = contact
                            self.currency = currency
                            self.datedOn = datedOn
                            self.dueOn = dueOn
                            self.ecStatus = ecStatus
                            self.estimateType = estimateType
                            self.notes = notes
                            self.status = status
                        }
                        public enum CodingKeys: String, CodingKey {
                            case contact
                            case currency
                            case datedOn = "dated_on"
                            case dueOn = "due_on"
                            case ecStatus = "ec_status"
                            case estimateType = "estimate_type"
                            case notes
                            case status
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/json/estimate`.
                    public var estimate: Operations.DeleteEstimate.Input.Body.JsonPayload.EstimatePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - estimate:
                    public init(estimate: Operations.DeleteEstimate.Input.Body.JsonPayload.EstimatePayload? = nil) {
                        self.estimate = estimate
                    }
                    public enum CodingKeys: String, CodingKey {
                        case estimate
                    }
                }
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/requestBody/content/application\/json`.
                case json(Operations.DeleteEstimate.Input.Body.JsonPayload)
            }
            public var body: Operations.DeleteEstimate.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteEstimate.Input.Path,
                headers: Operations.DeleteEstimate.Input.Headers = .init(),
                body: Operations.DeleteEstimate.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteEstimate.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteEstimate.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteEstimate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteEstimate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/{id}/delete(deleteEstimate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteEstimate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteEstimate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Estimate as PDF
    ///
    /// Show Estimate as PDF
    ///
    /// - Remark: HTTP `GET /v2/estimates/{id}/pdf`.
    /// - Remark: Generated from `#/paths//v2/estimates/{id}/pdf/get(showEstimateAsPdf)`.
    public enum ShowEstimateAsPdf {
        public static let id: Swift.String = "showEstimateAsPdf"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/pdf/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/pdf/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowEstimateAsPdf.Input.Path
            /// - Remark: Generated from `#/paths/v2/estimates/{id}/pdf/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowEstimateAsPdf.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowEstimateAsPdf.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowEstimateAsPdf.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowEstimateAsPdf.Input.Path,
                headers: Operations.ShowEstimateAsPdf.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/estimates/{id}/pdf/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/pdf/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/estimates/{id}/pdf/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowEstimateAsPdf.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowEstimateAsPdf.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowEstimateAsPdf.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowEstimateAsPdf.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/estimates/{id}/pdf/get(showEstimateAsPdf)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowEstimateAsPdf.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowEstimateAsPdf.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all expenses
    ///
    /// List all expenses
    ///
    /// - Remark: HTTP `GET /v2/expenses`.
    /// - Remark: Generated from `#/paths//v2/expenses/get(listAllExpenses)`.
    public enum ListAllExpenses {
        public static let id: Swift.String = "listAllExpenses"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/expenses/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllExpenses.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllExpenses.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllExpenses.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListAllExpenses.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/expenses/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/expenses/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/expenses/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllExpenses.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllExpenses.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllExpenses.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllExpenses.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/expenses/get(listAllExpenses)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllExpenses.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllExpenses.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create expense
    ///
    /// Create expense
    ///
    /// - Remark: HTTP `POST /v2/expenses`.
    /// - Remark: Generated from `#/paths//v2/expenses/post(createExpense)`.
    public enum CreateExpense {
        public static let id: Swift.String = "createExpense"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/expenses/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateExpense.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateExpense.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateExpense.Input.Headers
            /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload`.
                    public struct ExpensesPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload/category`.
                        public var category: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload/created_at`.
                        public var createdAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload/gross_value`.
                        public var grossValue: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload/manual_sales_tax_amount`.
                        public var manualSalesTaxAmount: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload/sales_tax_rate`.
                        public var salesTaxRate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload/updated_at`.
                        public var updatedAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/ExpensesPayload/user`.
                        public var user: Swift.String?
                        /// Creates a new `ExpensesPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - category:
                        ///   - createdAt:
                        ///   - datedOn:
                        ///   - description:
                        ///   - grossValue:
                        ///   - manualSalesTaxAmount:
                        ///   - salesTaxRate:
                        ///   - updatedAt:
                        ///   - user:
                        public init(
                            category: Swift.String? = nil,
                            createdAt: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            description: Swift.String? = nil,
                            grossValue: Swift.String? = nil,
                            manualSalesTaxAmount: Swift.String? = nil,
                            salesTaxRate: Swift.String? = nil,
                            updatedAt: Swift.String? = nil,
                            user: Swift.String? = nil
                        ) {
                            self.category = category
                            self.createdAt = createdAt
                            self.datedOn = datedOn
                            self.description = description
                            self.grossValue = grossValue
                            self.manualSalesTaxAmount = manualSalesTaxAmount
                            self.salesTaxRate = salesTaxRate
                            self.updatedAt = updatedAt
                            self.user = user
                        }
                        public enum CodingKeys: String, CodingKey {
                            case category
                            case createdAt = "created_at"
                            case datedOn = "dated_on"
                            case description
                            case grossValue = "gross_value"
                            case manualSalesTaxAmount = "manual_sales_tax_amount"
                            case salesTaxRate = "sales_tax_rate"
                            case updatedAt = "updated_at"
                            case user
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/expenses`.
                    public typealias ExpensesPayload = [Operations.CreateExpense.Input.Body.JsonPayload.ExpensesPayloadPayload]
                    /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/json/expenses`.
                    public var expenses: Operations.CreateExpense.Input.Body.JsonPayload.ExpensesPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - expenses:
                    public init(expenses: Operations.CreateExpense.Input.Body.JsonPayload.ExpensesPayload? = nil) {
                        self.expenses = expenses
                    }
                    public enum CodingKeys: String, CodingKey {
                        case expenses
                    }
                }
                /// - Remark: Generated from `#/paths/v2/expenses/POST/requestBody/content/application\/json`.
                case json(Operations.CreateExpense.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateExpense.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateExpense.Input.Headers = .init(),
                body: Operations.CreateExpense.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/expenses/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/expenses/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/expenses/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateExpense.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateExpense.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateExpense.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateExpense.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/expenses/post(createExpense)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateExpense.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateExpense.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single expense
    ///
    /// Get a single expense
    ///
    /// - Remark: HTTP `GET /v2/expenses/{id}`.
    /// - Remark: Generated from `#/paths//v2/expenses/{id}/get(getASingleExpense)`.
    public enum GetASingleExpense {
        public static let id: Swift.String = "getASingleExpense"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/expenses/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/expenses/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleExpense.Input.Path
            /// - Remark: Generated from `#/paths/v2/expenses/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleExpense.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleExpense.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleExpense.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleExpense.Input.Path,
                headers: Operations.GetASingleExpense.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/expenses/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/expenses/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/expenses/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleExpense.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleExpense.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleExpense.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleExpense.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/expenses/{id}/get(getASingleExpense)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleExpense.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleExpense.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete expense
    ///
    /// Delete expense
    ///
    /// - Remark: HTTP `DELETE /v2/expenses/{id}`.
    /// - Remark: Generated from `#/paths//v2/expenses/{id}/delete(deleteExpense)`.
    public enum DeleteExpense {
        public static let id: Swift.String = "deleteExpense"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/expenses/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/expenses/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteExpense.Input.Path
            /// - Remark: Generated from `#/paths/v2/expenses/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteExpense.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteExpense.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteExpense.Input.Headers
            /// - Remark: Generated from `#/paths/v2/expenses/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/expenses/{id}/DELETE/requestBody/multipartForm`.
                @frozen public enum MultipartFormPayload: Sendable, Hashable {
                    case undocumented(OpenAPIRuntime.MultipartRawPart)
                }
                /// - Remark: Generated from `#/paths/v2/expenses/{id}/DELETE/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Operations.DeleteExpense.Input.Body.MultipartFormPayload>)
            }
            public var body: Operations.DeleteExpense.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteExpense.Input.Path,
                headers: Operations.DeleteExpense.Input.Headers = .init(),
                body: Operations.DeleteExpense.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/expenses/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/expenses/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/expenses/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteExpense.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteExpense.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteExpense.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteExpense.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/expenses/{id}/delete(deleteExpense)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteExpense.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteExpense.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get mileage settings
    ///
    /// Get mileage settings
    ///
    /// - Remark: HTTP `GET /v2/expenses/mileage_settings`.
    /// - Remark: Generated from `#/paths//v2/expenses/mileage_settings/get(getMileageSettings)`.
    public enum GetMileageSettings {
        public static let id: Swift.String = "getMileageSettings"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/expenses/mileage_settings/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetMileageSettings.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetMileageSettings.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetMileageSettings.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.GetMileageSettings.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/expenses/mileage_settings/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/expenses/mileage_settings/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/expenses/mileage_settings/GET/responses/200/content/application\/json`.
                    case json(Operations.GetMileageSettings.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetMileageSettings.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetMileageSettings.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetMileageSettings.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/expenses/mileage_settings/get(getMileageSettings)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetMileageSettings.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetMileageSettings.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark invoice as sent
    ///
    /// Mark invoice as sent
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_sent`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_sent/put(markInvoiceAsSent)`.
    public enum MarkInvoiceAsSent {
        public static let id: Swift.String = "markInvoiceAsSent"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_sent/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_sent/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkInvoiceAsSent.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_sent/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkInvoiceAsSent.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkInvoiceAsSent.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkInvoiceAsSent.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkInvoiceAsSent.Input.Path,
                headers: Operations.MarkInvoiceAsSent.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_sent/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_sent/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_sent/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkInvoiceAsSent.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkInvoiceAsSent.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkInvoiceAsSent.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkInvoiceAsSent.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_sent/put(markInvoiceAsSent)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkInvoiceAsSent.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkInvoiceAsSent.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark invoice as cancelled
    ///
    /// Mark invoice as cancelled
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_cancelled`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_cancelled/put(markInvoiceAsCancelled)`.
    public enum MarkInvoiceAsCancelled {
        public static let id: Swift.String = "markInvoiceAsCancelled"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_cancelled/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_cancelled/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkInvoiceAsCancelled.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_cancelled/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkInvoiceAsCancelled.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkInvoiceAsCancelled.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkInvoiceAsCancelled.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkInvoiceAsCancelled.Input.Path,
                headers: Operations.MarkInvoiceAsCancelled.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_cancelled/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_cancelled/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_cancelled/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkInvoiceAsCancelled.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkInvoiceAsCancelled.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkInvoiceAsCancelled.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkInvoiceAsCancelled.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_cancelled/put(markInvoiceAsCancelled)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkInvoiceAsCancelled.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkInvoiceAsCancelled.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark invoice as scheduled
    ///
    /// Mark invoice as scheduled
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_scheduled`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_scheduled/put(markInvoiceAsScheduled)`.
    public enum MarkInvoiceAsScheduled {
        public static let id: Swift.String = "markInvoiceAsScheduled"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_scheduled/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_scheduled/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkInvoiceAsScheduled.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_scheduled/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkInvoiceAsScheduled.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkInvoiceAsScheduled.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkInvoiceAsScheduled.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkInvoiceAsScheduled.Input.Path,
                headers: Operations.MarkInvoiceAsScheduled.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_scheduled/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_scheduled/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_scheduled/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkInvoiceAsScheduled.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkInvoiceAsScheduled.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkInvoiceAsScheduled.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkInvoiceAsScheduled.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_scheduled/put(markInvoiceAsScheduled)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkInvoiceAsScheduled.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkInvoiceAsScheduled.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Mark invoice as draft
    ///
    /// Mark invoice as draft
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}/transitions/mark_as_draft`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_draft/put(markInvoiceAsDraft)`.
    public enum MarkInvoiceAsDraft {
        public static let id: Swift.String = "markInvoiceAsDraft"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_draft/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_draft/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.MarkInvoiceAsDraft.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_draft/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkInvoiceAsDraft.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.MarkInvoiceAsDraft.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.MarkInvoiceAsDraft.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.MarkInvoiceAsDraft.Input.Path,
                headers: Operations.MarkInvoiceAsDraft.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_draft/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_draft/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/transitions/mark_as_draft/PUT/responses/200/content/application\/json`.
                    case json(Operations.MarkInvoiceAsDraft.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.MarkInvoiceAsDraft.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.MarkInvoiceAsDraft.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.MarkInvoiceAsDraft.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/transitions/mark_as_draft/put(markInvoiceAsDraft)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.MarkInvoiceAsDraft.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.MarkInvoiceAsDraft.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Invoices
    ///
    /// List Invoices
    ///
    /// - Remark: HTTP `GET /v2/invoices`.
    /// - Remark: Generated from `#/paths//v2/invoices/get(listInvoices)`.
    public enum ListInvoices {
        public static let id: Swift.String = "listInvoices"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Include nested invoice items in response
                ///
                /// - Remark: Generated from `#/paths/v2/invoices/GET/query/nested_invoice_items`.
                public var nestedInvoiceItems: Swift.Bool?
                /// Filter invoices by contact URL
                ///
                /// - Remark: Generated from `#/paths/v2/invoices/GET/query/contact`.
                public var contact: Swift.String?
                /// Filter invoices by project URL
                ///
                /// - Remark: Generated from `#/paths/v2/invoices/GET/query/project`.
                public var project: Swift.String?
                /// Filter invoices by currency code
                ///
                /// - Remark: Generated from `#/paths/v2/invoices/GET/query/currency`.
                public var currency: Swift.String?
                /// Filter invoices by view type
                ///
                /// - Remark: Generated from `#/paths/v2/invoices/GET/query/view`.
                public var view: Components.Schemas.InvoiceView?
                /// Show invoices updated since this date (YYYY-MM-DD)
                ///
                /// - Remark: Generated from `#/paths/v2/invoices/GET/query/updated_since`.
                public var updatedSince: Swift.String?
                /// - Remark: Generated from `#/paths/v2/invoices/GET/query/sort`.
                @frozen public enum SortPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case updatedAt = "updated_at"
                    case createdAt = "created_at"
                }
                /// Sort invoices by specified field
                ///
                /// - Remark: Generated from `#/paths/v2/invoices/GET/query/sort`.
                public var sort: Operations.ListInvoices.Input.Query.SortPayload?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - nestedInvoiceItems: Include nested invoice items in response
                ///   - contact: Filter invoices by contact URL
                ///   - project: Filter invoices by project URL
                ///   - currency: Filter invoices by currency code
                ///   - view: Filter invoices by view type
                ///   - updatedSince: Show invoices updated since this date (YYYY-MM-DD)
                ///   - sort: Sort invoices by specified field
                public init(
                    nestedInvoiceItems: Swift.Bool? = nil,
                    contact: Swift.String? = nil,
                    project: Swift.String? = nil,
                    currency: Swift.String? = nil,
                    view: Components.Schemas.InvoiceView? = nil,
                    updatedSince: Swift.String? = nil,
                    sort: Operations.ListInvoices.Input.Query.SortPayload? = nil
                ) {
                    self.nestedInvoiceItems = nestedInvoiceItems
                    self.contact = contact
                    self.project = project
                    self.currency = currency
                    self.view = view
                    self.updatedSince = updatedSince
                    self.sort = sort
                }
            }
            public var query: Operations.ListInvoices.Input.Query
            /// - Remark: Generated from `#/paths/v2/invoices/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListInvoices.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListInvoices.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListInvoices.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListInvoices.Input.Query = .init(),
                headers: Operations.ListInvoices.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/GET/responses/200/content/application\/json`.
                    case json(Operations.ListInvoices.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListInvoices.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListInvoices.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListInvoices.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/get(listInvoices)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListInvoices.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListInvoices.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Invoice
    ///
    /// Create Invoice
    ///
    /// - Remark: HTTP `POST /v2/invoices`.
    /// - Remark: Generated from `#/paths//v2/invoices/post(createInvoice)`.
    public enum CreateInvoice {
        public static let id: Swift.String = "createInvoice"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateInvoice.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateInvoice.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateInvoice.Input.Headers
            /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json/invoice`.
                    public struct InvoicePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json/invoice/always_show_bic_and_iban`.
                        public var alwaysShowBicAndIban: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json/invoice/contact`.
                        public var contact: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json/invoice/currency`.
                        public var currency: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json/invoice/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json/invoice/due_on`.
                        public var dueOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json/invoice/omit_header`.
                        public var omitHeader: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json/invoice/payment_terms_in_days`.
                        public var paymentTermsInDays: Swift.Double?
                        /// Creates a new `InvoicePayload`.
                        ///
                        /// - Parameters:
                        ///   - alwaysShowBicAndIban:
                        ///   - contact:
                        ///   - currency:
                        ///   - datedOn:
                        ///   - dueOn:
                        ///   - omitHeader:
                        ///   - paymentTermsInDays:
                        public init(
                            alwaysShowBicAndIban: Swift.Bool? = nil,
                            contact: Swift.String? = nil,
                            currency: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            dueOn: Swift.String? = nil,
                            omitHeader: Swift.Bool? = nil,
                            paymentTermsInDays: Swift.Double? = nil
                        ) {
                            self.alwaysShowBicAndIban = alwaysShowBicAndIban
                            self.contact = contact
                            self.currency = currency
                            self.datedOn = datedOn
                            self.dueOn = dueOn
                            self.omitHeader = omitHeader
                            self.paymentTermsInDays = paymentTermsInDays
                        }
                        public enum CodingKeys: String, CodingKey {
                            case alwaysShowBicAndIban = "always_show_bic_and_iban"
                            case contact
                            case currency
                            case datedOn = "dated_on"
                            case dueOn = "due_on"
                            case omitHeader = "omit_header"
                            case paymentTermsInDays = "payment_terms_in_days"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/json/invoice`.
                    public var invoice: Operations.CreateInvoice.Input.Body.JsonPayload.InvoicePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - invoice:
                    public init(invoice: Operations.CreateInvoice.Input.Body.JsonPayload.InvoicePayload? = nil) {
                        self.invoice = invoice
                    }
                    public enum CodingKeys: String, CodingKey {
                        case invoice
                    }
                }
                /// - Remark: Generated from `#/paths/v2/invoices/POST/requestBody/content/application\/json`.
                case json(Operations.CreateInvoice.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateInvoice.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateInvoice.Input.Headers = .init(),
                body: Operations.CreateInvoice.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/POST/responses/201/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/POST/responses/201/content/application\/json`.
                    case json(Operations.CreateInvoice.Output.Created.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateInvoice.Output.Created.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateInvoice.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateInvoice.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/post(createInvoice)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.CreateInvoice.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.CreateInvoice.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/POST/responses/422/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateInvoice.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateInvoice.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable Entity - Validation Error
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/post(createInvoice)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.CreateInvoice.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            public var unprocessableContent: Operations.CreateInvoice.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Invoice
    ///
    /// Show Invoice
    ///
    /// - Remark: HTTP `GET /v2/invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/get(showInvoice)`.
    public enum ShowInvoice {
        public static let id: Swift.String = "showInvoice"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowInvoice.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowInvoice.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowInvoice.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowInvoice.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowInvoice.Input.Path,
                headers: Operations.ShowInvoice.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowInvoice.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowInvoice.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowInvoice.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowInvoice.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/get(showInvoice)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowInvoice.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowInvoice.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update Invoice
    ///
    /// Update Invoice
    ///
    /// - Remark: HTTP `PUT /v2/invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/put(updateInvoice)`.
    public enum UpdateInvoice {
        public static let id: Swift.String = "updateInvoice"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateInvoice.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateInvoice.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateInvoice.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateInvoice.Input.Headers
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/requestBody/json/invoice`.
                    public struct InvoicePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/requestBody/json/invoice/notes`.
                        public var notes: Swift.String?
                        /// Creates a new `InvoicePayload`.
                        ///
                        /// - Parameters:
                        ///   - notes:
                        public init(notes: Swift.String? = nil) {
                            self.notes = notes
                        }
                        public enum CodingKeys: String, CodingKey {
                            case notes
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/requestBody/json/invoice`.
                    public var invoice: Operations.UpdateInvoice.Input.Body.JsonPayload.InvoicePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - invoice:
                    public init(invoice: Operations.UpdateInvoice.Input.Body.JsonPayload.InvoicePayload? = nil) {
                        self.invoice = invoice
                    }
                    public enum CodingKeys: String, CodingKey {
                        case invoice
                    }
                }
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateInvoice.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateInvoice.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateInvoice.Input.Path,
                headers: Operations.UpdateInvoice.Input.Headers = .init(),
                body: Operations.UpdateInvoice.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateInvoice.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateInvoice.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateInvoice.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateInvoice.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/put(updateInvoice)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateInvoice.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateInvoice.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/responses/422/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/PUT/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateInvoice.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateInvoice.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable Entity - Validation Error
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/put(updateInvoice)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.UpdateInvoice.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            public var unprocessableContent: Operations.UpdateInvoice.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Invoice
    ///
    /// Delete Invoice
    ///
    /// - Remark: HTTP `DELETE /v2/invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/delete(deleteInvoice)`.
    public enum DeleteInvoice {
        public static let id: Swift.String = "deleteInvoice"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteInvoice.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteInvoice.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteInvoice.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteInvoice.Input.Headers
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/DELETE/requestBody/multipartForm`.
                @frozen public enum MultipartFormPayload: Sendable, Hashable {
                    case undocumented(OpenAPIRuntime.MultipartRawPart)
                }
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/DELETE/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Operations.DeleteInvoice.Input.Body.MultipartFormPayload>)
            }
            public var body: Operations.DeleteInvoice.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteInvoice.Input.Path,
                headers: Operations.DeleteInvoice.Input.Headers = .init(),
                body: Operations.DeleteInvoice.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteInvoice.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteInvoice.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteInvoice.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteInvoice.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/delete(deleteInvoice)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteInvoice.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteInvoice.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get invoice timeline
    ///
    /// Get invoice timeline
    ///
    /// - Remark: HTTP `GET /v2/invoices/timeline`.
    /// - Remark: Generated from `#/paths//v2/invoices/timeline/get(getInvoiceTimeline)`.
    public enum GetInvoiceTimeline {
        public static let id: Swift.String = "getInvoiceTimeline"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/timeline/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetInvoiceTimeline.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetInvoiceTimeline.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetInvoiceTimeline.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.GetInvoiceTimeline.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/timeline/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/timeline/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/timeline/GET/responses/200/content/application\/json`.
                    case json(Operations.GetInvoiceTimeline.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetInvoiceTimeline.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetInvoiceTimeline.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetInvoiceTimeline.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/timeline/get(getInvoiceTimeline)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetInvoiceTimeline.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetInvoiceTimeline.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Invoice as PDF
    ///
    /// Show Invoice as PDF
    ///
    /// - Remark: HTTP `GET /v2/invoices/{id}/pdf`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/pdf/get(showInvoiceAsPdf)`.
    public enum ShowInvoiceAsPdf {
        public static let id: Swift.String = "showInvoiceAsPdf"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/pdf/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/pdf/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowInvoiceAsPdf.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/pdf/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowInvoiceAsPdf.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowInvoiceAsPdf.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowInvoiceAsPdf.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowInvoiceAsPdf.Input.Path,
                headers: Operations.ShowInvoiceAsPdf.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/pdf/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/pdf/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/pdf/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowInvoiceAsPdf.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowInvoiceAsPdf.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowInvoiceAsPdf.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowInvoiceAsPdf.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/pdf/get(showInvoiceAsPdf)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowInvoiceAsPdf.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowInvoiceAsPdf.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Send Invoice Email
    ///
    /// Send Invoice Email
    ///
    /// - Remark: HTTP `POST /v2/invoices/{id}/send_email`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/send_email/post(sendInvoiceEmail)`.
    public enum SendInvoiceEmail {
        public static let id: Swift.String = "sendInvoiceEmail"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.SendInvoiceEmail.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.SendInvoiceEmail.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.SendInvoiceEmail.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.SendInvoiceEmail.Input.Headers
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/json/invoice`.
                    public struct InvoicePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/json/invoice/email`.
                        public struct EmailPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/json/invoice/email/body`.
                            public var body: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/json/invoice/email/from`.
                            public var from: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/json/invoice/email/subject`.
                            public var subject: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/json/invoice/email/to`.
                            public var to: Swift.String?
                            /// Creates a new `EmailPayload`.
                            ///
                            /// - Parameters:
                            ///   - body:
                            ///   - from:
                            ///   - subject:
                            ///   - to:
                            public init(
                                body: Swift.String? = nil,
                                from: Swift.String? = nil,
                                subject: Swift.String? = nil,
                                to: Swift.String? = nil
                            ) {
                                self.body = body
                                self.from = from
                                self.subject = subject
                                self.to = to
                            }
                            public enum CodingKeys: String, CodingKey {
                                case body
                                case from
                                case subject
                                case to
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/json/invoice/email`.
                        public var email: Operations.SendInvoiceEmail.Input.Body.JsonPayload.InvoicePayload.EmailPayload?
                        /// Creates a new `InvoicePayload`.
                        ///
                        /// - Parameters:
                        ///   - email:
                        public init(email: Operations.SendInvoiceEmail.Input.Body.JsonPayload.InvoicePayload.EmailPayload? = nil) {
                            self.email = email
                        }
                        public enum CodingKeys: String, CodingKey {
                            case email
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/json/invoice`.
                    public var invoice: Operations.SendInvoiceEmail.Input.Body.JsonPayload.InvoicePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - invoice:
                    public init(invoice: Operations.SendInvoiceEmail.Input.Body.JsonPayload.InvoicePayload? = nil) {
                        self.invoice = invoice
                    }
                    public enum CodingKeys: String, CodingKey {
                        case invoice
                    }
                }
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/requestBody/content/application\/json`.
                case json(Operations.SendInvoiceEmail.Input.Body.JsonPayload)
            }
            public var body: Operations.SendInvoiceEmail.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.SendInvoiceEmail.Input.Path,
                headers: Operations.SendInvoiceEmail.Input.Headers = .init(),
                body: Operations.SendInvoiceEmail.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/send_email/POST/responses/200/content/application\/json`.
                    case json(Operations.SendInvoiceEmail.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.SendInvoiceEmail.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.SendInvoiceEmail.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.SendInvoiceEmail.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/send_email/post(sendInvoiceEmail)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.SendInvoiceEmail.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.SendInvoiceEmail.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Take Payment using GoCardless Direct Debit Mandate
    ///
    /// Only available for invoices which fit the following criteria:
    ///
    /// - The invoice must be sent
    /// - The invoice must have gocardless_preauth available and enabled as a payment method
    /// - The invoice must not have already had a payment taken for it
    ///
    /// - Remark: HTTP `POST /v2/invoices/{id}/direct_debit`.
    /// - Remark: Generated from `#/paths//v2/invoices/{id}/direct_debit/post(takePaymentUsingGocardlessDirectDebitMandate)`.
    public enum TakePaymentUsingGocardlessDirectDebitMandate {
        public static let id: Swift.String = "takePaymentUsingGocardlessDirectDebitMandate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/direct_debit/POST/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/direct_debit/POST/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input.Path
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/direct_debit/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TakePaymentUsingGocardlessDirectDebitMandate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TakePaymentUsingGocardlessDirectDebitMandate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input.Headers
            /// - Remark: Generated from `#/paths/v2/invoices/{id}/direct_debit/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/direct_debit/POST/requestBody/content/text\/plain`.
                case plainText(OpenAPIRuntime.HTTPBody)
            }
            public var body: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input.Path,
                headers: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input.Headers = .init(),
                body: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoices/{id}/direct_debit/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/direct_debit/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoices/{id}/direct_debit/POST/responses/200/content/application\/json`.
                    case json(Operations.TakePaymentUsingGocardlessDirectDebitMandate.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/invoices/{id}/direct_debit/post(takePaymentUsingGocardlessDirectDebitMandate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.TakePaymentUsingGocardlessDirectDebitMandate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.TakePaymentUsingGocardlessDirectDebitMandate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Invoice Item
    ///
    /// Create Invoice Item
    ///
    /// - Remark: HTTP `POST /v2/invoice_items`.
    /// - Remark: Generated from `#/paths//v2/invoice_items/post(createInvoiceItem)`.
    public enum CreateInvoiceItem {
        public static let id: Swift.String = "createInvoiceItem"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/invoice_items/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateInvoiceItem.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateInvoiceItem.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateInvoiceItem.Input.Headers
            /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody/json/invoice`.
                    public var invoice: Swift.String?
                    /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody/json/invoice_item`.
                    public struct InvoiceItemPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody/json/invoice_item/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody/json/invoice_item/item_type`.
                        public var itemType: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody/json/invoice_item/price`.
                        public var price: Swift.Double?
                        /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody/json/invoice_item/quantity`.
                        public var quantity: Swift.Double?
                        /// Creates a new `InvoiceItemPayload`.
                        ///
                        /// - Parameters:
                        ///   - description:
                        ///   - itemType:
                        ///   - price:
                        ///   - quantity:
                        public init(
                            description: Swift.String? = nil,
                            itemType: Swift.String? = nil,
                            price: Swift.Double? = nil,
                            quantity: Swift.Double? = nil
                        ) {
                            self.description = description
                            self.itemType = itemType
                            self.price = price
                            self.quantity = quantity
                        }
                        public enum CodingKeys: String, CodingKey {
                            case description
                            case itemType = "item_type"
                            case price
                            case quantity
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody/json/invoice_item`.
                    public var invoiceItem: Operations.CreateInvoiceItem.Input.Body.JsonPayload.InvoiceItemPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - invoice:
                    ///   - invoiceItem:
                    public init(
                        invoice: Swift.String? = nil,
                        invoiceItem: Operations.CreateInvoiceItem.Input.Body.JsonPayload.InvoiceItemPayload? = nil
                    ) {
                        self.invoice = invoice
                        self.invoiceItem = invoiceItem
                    }
                    public enum CodingKeys: String, CodingKey {
                        case invoice
                        case invoiceItem = "invoice_item"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/invoice_items/POST/requestBody/content/application\/json`.
                case json(Operations.CreateInvoiceItem.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateInvoiceItem.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateInvoiceItem.Input.Headers = .init(),
                body: Operations.CreateInvoiceItem.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoice_items/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoice_items/POST/responses/201/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/invoice_items/POST/responses/201/content/application\/json`.
                    case json(Operations.CreateInvoiceItem.Output.Created.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateInvoiceItem.Output.Created.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateInvoiceItem.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateInvoiceItem.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//v2/invoice_items/post(createInvoiceItem)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.CreateInvoiceItem.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.CreateInvoiceItem.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/invoice_items/POST/responses/422/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/invoice_items/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateInvoiceItem.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateInvoiceItem.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable Entity - Validation Error
            ///
            /// - Remark: Generated from `#/paths//v2/invoice_items/post(createInvoiceItem)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.CreateInvoiceItem.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            public var unprocessableContent: Operations.CreateInvoiceItem.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all journal sets
    ///
    /// List all journal sets
    ///
    /// - Remark: HTTP `GET /v2/journal_sets`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/get(listAllJournalSets)`.
    public enum ListAllJournalSets {
        public static let id: Swift.String = "listAllJournalSets"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/journal_sets/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/GET/query/to_date`.
                public var toDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/journal_sets/GET/query/from_date`.
                public var fromDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/journal_sets/GET/query/tag`.
                public var tag: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - toDate:
                ///   - fromDate:
                ///   - tag:
                public init(
                    toDate: Swift.String? = nil,
                    fromDate: Swift.String? = nil,
                    tag: Swift.String? = nil
                ) {
                    self.toDate = toDate
                    self.fromDate = fromDate
                    self.tag = tag
                }
            }
            public var query: Operations.ListAllJournalSets.Input.Query
            /// - Remark: Generated from `#/paths/v2/journal_sets/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllJournalSets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllJournalSets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllJournalSets.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListAllJournalSets.Input.Query = .init(),
                headers: Operations.ListAllJournalSets.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/journal_sets/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/journal_sets/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllJournalSets.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllJournalSets.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllJournalSets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllJournalSets.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/journal_sets/get(listAllJournalSets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllJournalSets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllJournalSets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a journal set
    ///
    /// Create a journal set
    ///
    /// - Remark: HTTP `POST /v2/journal_sets`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/post(createAJournalSet)`.
    public enum CreateAJournalSet {
        public static let id: Swift.String = "createAJournalSet"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/journal_sets/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateAJournalSet.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateAJournalSet.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateAJournalSet.Input.Headers
            /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set`.
                    public struct JournalSetPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/JournalEntriesPayload`.
                        public struct JournalEntriesPayloadPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/JournalEntriesPayload/category`.
                            public var category: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/JournalEntriesPayload/debit_value`.
                            public var debitValue: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/JournalEntriesPayload/description`.
                            public var description: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/JournalEntriesPayload/user`.
                            public var user: Swift.String?
                            /// Creates a new `JournalEntriesPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - category:
                            ///   - debitValue:
                            ///   - description:
                            ///   - user:
                            public init(
                                category: Swift.String? = nil,
                                debitValue: Swift.String? = nil,
                                description: Swift.String? = nil,
                                user: Swift.String? = nil
                            ) {
                                self.category = category
                                self.debitValue = debitValue
                                self.description = description
                                self.user = user
                            }
                            public enum CodingKeys: String, CodingKey {
                                case category
                                case debitValue = "debit_value"
                                case description
                                case user
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/journal_entries`.
                        public typealias JournalEntriesPayload = [Operations.CreateAJournalSet.Input.Body.JsonPayload.JournalSetPayload.JournalEntriesPayloadPayload]
                        /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/journal_entries`.
                        public var journalEntries: Operations.CreateAJournalSet.Input.Body.JsonPayload.JournalSetPayload.JournalEntriesPayload?
                        /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set/tag`.
                        public var tag: Swift.String?
                        /// Creates a new `JournalSetPayload`.
                        ///
                        /// - Parameters:
                        ///   - datedOn:
                        ///   - description:
                        ///   - journalEntries:
                        ///   - tag:
                        public init(
                            datedOn: Swift.String? = nil,
                            description: Swift.String? = nil,
                            journalEntries: Operations.CreateAJournalSet.Input.Body.JsonPayload.JournalSetPayload.JournalEntriesPayload? = nil,
                            tag: Swift.String? = nil
                        ) {
                            self.datedOn = datedOn
                            self.description = description
                            self.journalEntries = journalEntries
                            self.tag = tag
                        }
                        public enum CodingKeys: String, CodingKey {
                            case datedOn = "dated_on"
                            case description
                            case journalEntries = "journal_entries"
                            case tag
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/json/journal_set`.
                    public var journalSet: Operations.CreateAJournalSet.Input.Body.JsonPayload.JournalSetPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - journalSet:
                    public init(journalSet: Operations.CreateAJournalSet.Input.Body.JsonPayload.JournalSetPayload? = nil) {
                        self.journalSet = journalSet
                    }
                    public enum CodingKeys: String, CodingKey {
                        case journalSet = "journal_set"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/journal_sets/POST/requestBody/content/application\/json`.
                case json(Operations.CreateAJournalSet.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateAJournalSet.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateAJournalSet.Input.Headers = .init(),
                body: Operations.CreateAJournalSet.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/journal_sets/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/journal_sets/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateAJournalSet.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateAJournalSet.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateAJournalSet.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateAJournalSet.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/journal_sets/post(createAJournalSet)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateAJournalSet.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateAJournalSet.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a journal set
    ///
    /// Update a journal set
    ///
    /// - Remark: HTTP `PUT /v2/journal_sets`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/put(updateAJournalSet)`.
    public enum UpdateAJournalSet {
        public static let id: Swift.String = "updateAJournalSet"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateAJournalSet.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateAJournalSet.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateAJournalSet.Input.Headers
            /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set`.
                    public struct JournalSetPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/description`.
                        public var description: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/JournalEntriesPayload`.
                        public struct JournalEntriesPayloadPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/JournalEntriesPayload/category`.
                            public var category: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/JournalEntriesPayload/debit_value`.
                            public var debitValue: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/JournalEntriesPayload/description`.
                            public var description: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/JournalEntriesPayload/url`.
                            public var url: Swift.String?
                            /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/JournalEntriesPayload/user`.
                            public var user: Swift.String?
                            /// Creates a new `JournalEntriesPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - category:
                            ///   - debitValue:
                            ///   - description:
                            ///   - url:
                            ///   - user:
                            public init(
                                category: Swift.String? = nil,
                                debitValue: Swift.String? = nil,
                                description: Swift.String? = nil,
                                url: Swift.String? = nil,
                                user: Swift.String? = nil
                            ) {
                                self.category = category
                                self.debitValue = debitValue
                                self.description = description
                                self.url = url
                                self.user = user
                            }
                            public enum CodingKeys: String, CodingKey {
                                case category
                                case debitValue = "debit_value"
                                case description
                                case url
                                case user
                            }
                        }
                        /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/journal_entries`.
                        public typealias JournalEntriesPayload = [Operations.UpdateAJournalSet.Input.Body.JsonPayload.JournalSetPayload.JournalEntriesPayloadPayload]
                        /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/journal_entries`.
                        public var journalEntries: Operations.UpdateAJournalSet.Input.Body.JsonPayload.JournalSetPayload.JournalEntriesPayload?
                        /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/tag`.
                        public var tag: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set/url`.
                        public var url: Swift.String?
                        /// Creates a new `JournalSetPayload`.
                        ///
                        /// - Parameters:
                        ///   - datedOn:
                        ///   - description:
                        ///   - journalEntries:
                        ///   - tag:
                        ///   - url:
                        public init(
                            datedOn: Swift.String? = nil,
                            description: Swift.String? = nil,
                            journalEntries: Operations.UpdateAJournalSet.Input.Body.JsonPayload.JournalSetPayload.JournalEntriesPayload? = nil,
                            tag: Swift.String? = nil,
                            url: Swift.String? = nil
                        ) {
                            self.datedOn = datedOn
                            self.description = description
                            self.journalEntries = journalEntries
                            self.tag = tag
                            self.url = url
                        }
                        public enum CodingKeys: String, CodingKey {
                            case datedOn = "dated_on"
                            case description
                            case journalEntries = "journal_entries"
                            case tag
                            case url
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/json/journal_set`.
                    public var journalSet: Operations.UpdateAJournalSet.Input.Body.JsonPayload.JournalSetPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - journalSet:
                    public init(journalSet: Operations.UpdateAJournalSet.Input.Body.JsonPayload.JournalSetPayload? = nil) {
                        self.journalSet = journalSet
                    }
                    public enum CodingKeys: String, CodingKey {
                        case journalSet = "journal_set"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateAJournalSet.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateAJournalSet.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.UpdateAJournalSet.Input.Headers = .init(),
                body: Operations.UpdateAJournalSet.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/journal_sets/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateAJournalSet.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateAJournalSet.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateAJournalSet.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateAJournalSet.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/journal_sets/put(updateAJournalSet)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateAJournalSet.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateAJournalSet.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single journal set
    ///
    /// Get a single journal set
    ///
    /// - Remark: HTTP `GET /v2/journal_sets/{id}`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/{id}/get(getASingleJournalSet)`.
    public enum GetASingleJournalSet {
        public static let id: Swift.String = "getASingleJournalSet"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleJournalSet.Input.Path
            /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleJournalSet.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleJournalSet.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleJournalSet.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleJournalSet.Input.Path,
                headers: Operations.GetASingleJournalSet.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleJournalSet.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleJournalSet.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleJournalSet.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleJournalSet.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/journal_sets/{id}/get(getASingleJournalSet)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleJournalSet.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleJournalSet.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a journal set
    ///
    /// Delete a journal set
    ///
    /// - Remark: HTTP `DELETE /v2/journal_sets/{id}`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/{id}/delete(deleteAJournalSet)`.
    public enum DeleteAJournalSet {
        public static let id: Swift.String = "deleteAJournalSet"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteAJournalSet.Input.Path
            /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteAJournalSet.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteAJournalSet.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteAJournalSet.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.DeleteAJournalSet.Input.Path,
                headers: Operations.DeleteAJournalSet.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/journal_sets/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteAJournalSet.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteAJournalSet.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteAJournalSet.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteAJournalSet.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/journal_sets/{id}/delete(deleteAJournalSet)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteAJournalSet.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteAJournalSet.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get the Opening Balances
    ///
    /// Get the Opening Balances
    ///
    /// - Remark: HTTP `GET /v2/journal_sets/opening_balances`.
    /// - Remark: Generated from `#/paths//v2/journal_sets/opening_balances/get(getTheOpeningBalances)`.
    public enum GetTheOpeningBalances {
        public static let id: Swift.String = "getTheOpeningBalances"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/journal_sets/opening_balances/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetTheOpeningBalances.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetTheOpeningBalances.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetTheOpeningBalances.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.GetTheOpeningBalances.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/journal_sets/opening_balances/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/journal_sets/opening_balances/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/journal_sets/opening_balances/GET/responses/200/content/application\/json`.
                    case json(Operations.GetTheOpeningBalances.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetTheOpeningBalances.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetTheOpeningBalances.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetTheOpeningBalances.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/journal_sets/opening_balances/get(getTheOpeningBalances)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetTheOpeningBalances.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetTheOpeningBalances.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Notes
    ///
    /// List Notes
    ///
    /// - Remark: HTTP `GET /v2/notes`.
    /// - Remark: Generated from `#/paths//v2/notes/get(listNotes)`.
    public enum ListNotes {
        public static let id: Swift.String = "listNotes"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/notes/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/GET/query/contact`.
                public var contact: Swift.String?
                /// - Remark: Generated from `#/paths/v2/notes/GET/query/project`.
                public var project: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - contact:
                ///   - project:
                public init(
                    contact: Swift.String? = nil,
                    project: Swift.String? = nil
                ) {
                    self.contact = contact
                    self.project = project
                }
            }
            public var query: Operations.ListNotes.Input.Query
            /// - Remark: Generated from `#/paths/v2/notes/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListNotes.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListNotes.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListNotes.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListNotes.Input.Query = .init(),
                headers: Operations.ListNotes.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/notes/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/notes/GET/responses/200/content/application\/json`.
                    case json(Operations.ListNotes.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListNotes.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListNotes.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListNotes.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/notes/get(listNotes)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListNotes.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListNotes.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single note
    ///
    /// Get a single note
    ///
    /// - Remark: HTTP `GET /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/get(getASingleNote)`.
    public enum GetASingleNote {
        public static let id: Swift.String = "getASingleNote"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/notes/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleNote.Input.Path
            /// - Remark: Generated from `#/paths/v2/notes/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleNote.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleNote.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleNote.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleNote.Input.Path,
                headers: Operations.GetASingleNote.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleNote.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleNote.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleNote.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleNote.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/notes/{id}/get(getASingleNote)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleNote.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleNote.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a Note
    ///
    /// Create a Note
    ///
    /// - Remark: HTTP `POST /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/post(createANote)`.
    public enum CreateANote {
        public static let id: Swift.String = "createANote"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.CreateANote.Input.Path
            /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/query/contact`.
                public var contact: Swift.String?
                /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/query/project`.
                public var project: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - contact:
                ///   - project:
                public init(
                    contact: Swift.String? = nil,
                    project: Swift.String? = nil
                ) {
                    self.contact = contact
                    self.project = project
                }
            }
            public var query: Operations.CreateANote.Input.Query
            /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateANote.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateANote.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateANote.Input.Headers
            /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody/json/note`.
                    public struct NotePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody/json/note/author`.
                        public var author: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody/json/note/created_at`.
                        public var createdAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody/json/note/note`.
                        public var note: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody/json/note/parent_url`.
                        public var parentUrl: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody/json/note/updated_at`.
                        public var updatedAt: Swift.String?
                        /// Creates a new `NotePayload`.
                        ///
                        /// - Parameters:
                        ///   - author:
                        ///   - createdAt:
                        ///   - note:
                        ///   - parentUrl:
                        ///   - updatedAt:
                        public init(
                            author: Swift.String? = nil,
                            createdAt: Swift.String? = nil,
                            note: Swift.String? = nil,
                            parentUrl: Swift.String? = nil,
                            updatedAt: Swift.String? = nil
                        ) {
                            self.author = author
                            self.createdAt = createdAt
                            self.note = note
                            self.parentUrl = parentUrl
                            self.updatedAt = updatedAt
                        }
                        public enum CodingKeys: String, CodingKey {
                            case author
                            case createdAt = "created_at"
                            case note
                            case parentUrl = "parent_url"
                            case updatedAt = "updated_at"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody/json/note`.
                    public var note: Operations.CreateANote.Input.Body.JsonPayload.NotePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - note:
                    public init(note: Operations.CreateANote.Input.Body.JsonPayload.NotePayload? = nil) {
                        self.note = note
                    }
                    public enum CodingKeys: String, CodingKey {
                        case note
                    }
                }
                /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/requestBody/content/application\/json`.
                case json(Operations.CreateANote.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateANote.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.CreateANote.Input.Path,
                query: Operations.CreateANote.Input.Query = .init(),
                headers: Operations.CreateANote.Input.Headers = .init(),
                body: Operations.CreateANote.Input.Body? = nil
            ) {
                self.path = path
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateANote.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateANote.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateANote.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateANote.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/notes/{id}/post(createANote)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateANote.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateANote.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a Note
    ///
    /// Update a Note
    ///
    /// - Remark: HTTP `PUT /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/put(updateANote)`.
    public enum UpdateANote {
        public static let id: Swift.String = "updateANote"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateANote.Input.Path
            /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateANote.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateANote.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateANote.Input.Headers
            /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody/json/note`.
                    public struct NotePayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody/json/note/author`.
                        public var author: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody/json/note/created_at`.
                        public var createdAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody/json/note/note`.
                        public var note: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody/json/note/parent_url`.
                        public var parentUrl: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody/json/note/updated_at`.
                        public var updatedAt: Swift.String?
                        /// Creates a new `NotePayload`.
                        ///
                        /// - Parameters:
                        ///   - author:
                        ///   - createdAt:
                        ///   - note:
                        ///   - parentUrl:
                        ///   - updatedAt:
                        public init(
                            author: Swift.String? = nil,
                            createdAt: Swift.String? = nil,
                            note: Swift.String? = nil,
                            parentUrl: Swift.String? = nil,
                            updatedAt: Swift.String? = nil
                        ) {
                            self.author = author
                            self.createdAt = createdAt
                            self.note = note
                            self.parentUrl = parentUrl
                            self.updatedAt = updatedAt
                        }
                        public enum CodingKeys: String, CodingKey {
                            case author
                            case createdAt = "created_at"
                            case note
                            case parentUrl = "parent_url"
                            case updatedAt = "updated_at"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody/json/note`.
                    public var note: Operations.UpdateANote.Input.Body.JsonPayload.NotePayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - note:
                    public init(note: Operations.UpdateANote.Input.Body.JsonPayload.NotePayload? = nil) {
                        self.note = note
                    }
                    public enum CodingKeys: String, CodingKey {
                        case note
                    }
                }
                /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateANote.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateANote.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateANote.Input.Path,
                headers: Operations.UpdateANote.Input.Headers = .init(),
                body: Operations.UpdateANote.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateANote.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateANote.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateANote.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateANote.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/notes/{id}/put(updateANote)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateANote.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateANote.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a note
    ///
    /// Delete a note
    ///
    /// - Remark: HTTP `DELETE /v2/notes/{id}`.
    /// - Remark: Generated from `#/paths//v2/notes/{id}/delete(deleteANote)`.
    public enum DeleteANote {
        public static let id: Swift.String = "deleteANote"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/notes/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteANote.Input.Path
            /// - Remark: Generated from `#/paths/v2/notes/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteANote.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteANote.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteANote.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.DeleteANote.Input.Path,
                headers: Operations.DeleteANote.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/notes/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/notes/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteANote.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteANote.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteANote.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteANote.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/notes/{id}/delete(deleteANote)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteANote.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteANote.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all periods for a given tax year
    ///
    /// List all periods for a given tax year
    ///
    /// - Remark: HTTP `GET /v2/payroll/{year}`.
    /// - Remark: Generated from `#/paths//v2/payroll/{year}/get(listAllPeriodsForAGivenTaxYear)`.
    public enum ListAllPeriodsForAGivenTaxYear {
        public static let id: Swift.String = "listAllPeriodsForAGivenTaxYear"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/payroll/{year}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/payroll/{year}/GET/path/year`.
                public var year: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - year:
                public init(year: Swift.String) {
                    self.year = year
                }
            }
            public var path: Operations.ListAllPeriodsForAGivenTaxYear.Input.Path
            /// - Remark: Generated from `#/paths/v2/payroll/{year}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllPeriodsForAGivenTaxYear.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllPeriodsForAGivenTaxYear.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllPeriodsForAGivenTaxYear.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ListAllPeriodsForAGivenTaxYear.Input.Path,
                headers: Operations.ListAllPeriodsForAGivenTaxYear.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/payroll/{year}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/payroll/{year}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/payroll/{year}/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllPeriodsForAGivenTaxYear.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllPeriodsForAGivenTaxYear.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllPeriodsForAGivenTaxYear.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllPeriodsForAGivenTaxYear.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/payroll/{year}/get(listAllPeriodsForAGivenTaxYear)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllPeriodsForAGivenTaxYear.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllPeriodsForAGivenTaxYear.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all payslips for a given period
    ///
    /// List all payslips for a given period
    ///
    /// - Remark: HTTP `GET /v2/payroll/{year}/{period}`.
    /// - Remark: Generated from `#/paths//v2/payroll/{year}/{period}/get(listAllPayslipsForAGivenPeriod)`.
    public enum ListAllPayslipsForAGivenPeriod {
        public static let id: Swift.String = "listAllPayslipsForAGivenPeriod"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/payroll/{year}/{period}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/payroll/{year}/{period}/GET/path/year`.
                public var year: Swift.String
                /// - Remark: Generated from `#/paths/v2/payroll/{year}/{period}/GET/path/period`.
                public var period: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - year:
                ///   - period:
                public init(
                    year: Swift.String,
                    period: Swift.String
                ) {
                    self.year = year
                    self.period = period
                }
            }
            public var path: Operations.ListAllPayslipsForAGivenPeriod.Input.Path
            /// - Remark: Generated from `#/paths/v2/payroll/{year}/{period}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllPayslipsForAGivenPeriod.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllPayslipsForAGivenPeriod.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllPayslipsForAGivenPeriod.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ListAllPayslipsForAGivenPeriod.Input.Path,
                headers: Operations.ListAllPayslipsForAGivenPeriod.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/payroll/{year}/{period}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/payroll/{year}/{period}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/payroll/{year}/{period}/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllPayslipsForAGivenPeriod.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllPayslipsForAGivenPeriod.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllPayslipsForAGivenPeriod.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllPayslipsForAGivenPeriod.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/payroll/{year}/{period}/get(listAllPayslipsForAGivenPeriod)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllPayslipsForAGivenPeriod.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllPayslipsForAGivenPeriod.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all profiles for a given tax year
    ///
    /// List all profiles for a given tax year
    ///
    /// - Remark: HTTP `GET /v2/payroll_profiles/{year}`.
    /// - Remark: Generated from `#/paths//v2/payroll_profiles/{year}/get(listAllProfilesForAGivenTaxYear)`.
    public enum ListAllProfilesForAGivenTaxYear {
        public static let id: Swift.String = "listAllProfilesForAGivenTaxYear"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/payroll_profiles/{year}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/payroll_profiles/{year}/GET/path/year`.
                public var year: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - year:
                public init(year: Swift.String) {
                    self.year = year
                }
            }
            public var path: Operations.ListAllProfilesForAGivenTaxYear.Input.Path
            /// - Remark: Generated from `#/paths/v2/payroll_profiles/{year}/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/payroll_profiles/{year}/GET/query/user`.
                public var user: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - user:
                public init(user: Swift.String? = nil) {
                    self.user = user
                }
            }
            public var query: Operations.ListAllProfilesForAGivenTaxYear.Input.Query
            /// - Remark: Generated from `#/paths/v2/payroll_profiles/{year}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllProfilesForAGivenTaxYear.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllProfilesForAGivenTaxYear.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllProfilesForAGivenTaxYear.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.ListAllProfilesForAGivenTaxYear.Input.Path,
                query: Operations.ListAllProfilesForAGivenTaxYear.Input.Query = .init(),
                headers: Operations.ListAllProfilesForAGivenTaxYear.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/payroll_profiles/{year}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/payroll_profiles/{year}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/payroll_profiles/{year}/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllProfilesForAGivenTaxYear.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllProfilesForAGivenTaxYear.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllProfilesForAGivenTaxYear.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllProfilesForAGivenTaxYear.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/payroll_profiles/{year}/get(listAllProfilesForAGivenTaxYear)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllProfilesForAGivenTaxYear.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllProfilesForAGivenTaxYear.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all Price List Items
    ///
    /// List all Price List Items
    ///
    /// - Remark: HTTP `GET /v2/price_list_items`.
    /// - Remark: Generated from `#/paths//v2/price_list_items/get(listAllPriceListItems)`.
    public enum ListAllPriceListItems {
        public static let id: Swift.String = "listAllPriceListItems"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/price_list_items/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllPriceListItems.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllPriceListItems.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllPriceListItems.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListAllPriceListItems.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/price_list_items/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/price_list_items/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/price_list_items/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllPriceListItems.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllPriceListItems.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllPriceListItems.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllPriceListItems.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/price_list_items/get(listAllPriceListItems)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllPriceListItems.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllPriceListItems.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single Price List Item
    ///
    /// Get a single Price List Item
    ///
    /// - Remark: HTTP `GET /v2/price_list_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/price_list_items/{id}/get(getASinglePriceListItem)`.
    public enum GetASinglePriceListItem {
        public static let id: Swift.String = "getASinglePriceListItem"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/price_list_items/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/price_list_items/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASinglePriceListItem.Input.Path
            /// - Remark: Generated from `#/paths/v2/price_list_items/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASinglePriceListItem.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASinglePriceListItem.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASinglePriceListItem.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASinglePriceListItem.Input.Path,
                headers: Operations.GetASinglePriceListItem.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/price_list_items/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/price_list_items/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/price_list_items/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASinglePriceListItem.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASinglePriceListItem.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASinglePriceListItem.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASinglePriceListItem.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/price_list_items/{id}/get(getASinglePriceListItem)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASinglePriceListItem.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASinglePriceListItem.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get the P&L summary
    ///
    /// Get the P&L summary
    ///
    /// - Remark: HTTP `GET /v2/accounting/profit_and_loss/summary`.
    /// - Remark: Generated from `#/paths//v2/accounting/profit_and_loss/summary/get(getThePLSummary)`.
    public enum GetThePLSummary {
        public static let id: Swift.String = "getThePLSummary"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/accounting/profit_and_loss/summary/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetThePLSummary.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetThePLSummary.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetThePLSummary.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.GetThePLSummary.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/accounting/profit_and_loss/summary/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/accounting/profit_and_loss/summary/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/accounting/profit_and_loss/summary/GET/responses/200/content/application\/json`.
                    case json(Operations.GetThePLSummary.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetThePLSummary.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetThePLSummary.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetThePLSummary.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/accounting/profit_and_loss/summary/get(getThePLSummary)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetThePLSummary.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetThePLSummary.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all properties
    ///
    /// List all properties
    ///
    /// - Remark: HTTP `GET /v2/properties`.
    /// - Remark: Generated from `#/paths//v2/properties/get(listAllProperties)`.
    public enum ListAllProperties {
        public static let id: Swift.String = "listAllProperties"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/properties/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllProperties.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllProperties.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllProperties.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListAllProperties.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/properties/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/properties/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllProperties.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllProperties.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllProperties.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllProperties.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/properties/get(listAllProperties)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllProperties.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllProperties.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a new property
    ///
    /// Create a new property
    ///
    /// - Remark: HTTP `POST /v2/properties`.
    /// - Remark: Generated from `#/paths//v2/properties/post(createANewProperty)`.
    public enum CreateANewProperty {
        public static let id: Swift.String = "createANewProperty"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/properties/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateANewProperty.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateANewProperty.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateANewProperty.Input.Headers
            /// - Remark: Generated from `#/paths/v2/properties/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/properties/POST/requestBody/json/property`.
                    public struct PropertyPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/properties/POST/requestBody/json/property/address1`.
                        public var address1: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/properties/POST/requestBody/json/property/country`.
                        public var country: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/properties/POST/requestBody/json/property/region`.
                        public var region: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/properties/POST/requestBody/json/property/town`.
                        public var town: Swift.String?
                        /// Creates a new `PropertyPayload`.
                        ///
                        /// - Parameters:
                        ///   - address1:
                        ///   - country:
                        ///   - region:
                        ///   - town:
                        public init(
                            address1: Swift.String? = nil,
                            country: Swift.String? = nil,
                            region: Swift.String? = nil,
                            town: Swift.String? = nil
                        ) {
                            self.address1 = address1
                            self.country = country
                            self.region = region
                            self.town = town
                        }
                        public enum CodingKeys: String, CodingKey {
                            case address1
                            case country
                            case region
                            case town
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/properties/POST/requestBody/json/property`.
                    public var property: Operations.CreateANewProperty.Input.Body.JsonPayload.PropertyPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - property:
                    public init(property: Operations.CreateANewProperty.Input.Body.JsonPayload.PropertyPayload? = nil) {
                        self.property = property
                    }
                    public enum CodingKeys: String, CodingKey {
                        case property
                    }
                }
                /// - Remark: Generated from `#/paths/v2/properties/POST/requestBody/content/application\/json`.
                case json(Operations.CreateANewProperty.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateANewProperty.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateANewProperty.Input.Headers = .init(),
                body: Operations.CreateANewProperty.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/properties/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/properties/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateANewProperty.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateANewProperty.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateANewProperty.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateANewProperty.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/properties/post(createANewProperty)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateANewProperty.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateANewProperty.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single property
    ///
    /// Get a single property
    ///
    /// - Remark: HTTP `GET /v2/properties/{id}`.
    /// - Remark: Generated from `#/paths//v2/properties/{id}/get(getASingleProperty)`.
    public enum GetASingleProperty {
        public static let id: Swift.String = "getASingleProperty"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/properties/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleProperty.Input.Path
            /// - Remark: Generated from `#/paths/v2/properties/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleProperty.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleProperty.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleProperty.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleProperty.Input.Path,
                headers: Operations.GetASingleProperty.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/properties/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/properties/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleProperty.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleProperty.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleProperty.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleProperty.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/properties/{id}/get(getASingleProperty)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleProperty.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleProperty.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a property
    ///
    /// Update a property
    ///
    /// - Remark: HTTP `PUT /v2/properties/{id}`.
    /// - Remark: Generated from `#/paths//v2/properties/{id}/put(updateAProperty)`.
    public enum UpdateAProperty {
        public static let id: Swift.String = "updateAProperty"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateAProperty.Input.Path
            /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateAProperty.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateAProperty.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateAProperty.Input.Headers
            /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/requestBody/json/property`.
                    public struct PropertyPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/requestBody/json/property/address2`.
                        public var address2: Swift.String?
                        /// Creates a new `PropertyPayload`.
                        ///
                        /// - Parameters:
                        ///   - address2:
                        public init(address2: Swift.String? = nil) {
                            self.address2 = address2
                        }
                        public enum CodingKeys: String, CodingKey {
                            case address2
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/requestBody/json/property`.
                    public var property: Operations.UpdateAProperty.Input.Body.JsonPayload.PropertyPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - property:
                    public init(property: Operations.UpdateAProperty.Input.Body.JsonPayload.PropertyPayload? = nil) {
                        self.property = property
                    }
                    public enum CodingKeys: String, CodingKey {
                        case property
                    }
                }
                /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateAProperty.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateAProperty.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateAProperty.Input.Path,
                headers: Operations.UpdateAProperty.Input.Headers = .init(),
                body: Operations.UpdateAProperty.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/properties/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateAProperty.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateAProperty.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateAProperty.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateAProperty.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/properties/{id}/put(updateAProperty)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateAProperty.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateAProperty.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a property
    ///
    /// Delete a property
    ///
    /// - Remark: HTTP `DELETE /v2/properties/{id}`.
    /// - Remark: Generated from `#/paths//v2/properties/{id}/delete(deleteAProperty)`.
    public enum DeleteAProperty {
        public static let id: Swift.String = "deleteAProperty"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/properties/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteAProperty.Input.Path
            /// - Remark: Generated from `#/paths/v2/properties/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteAProperty.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteAProperty.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteAProperty.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.DeleteAProperty.Input.Path,
                headers: Operations.DeleteAProperty.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/properties/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/properties/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/properties/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteAProperty.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteAProperty.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteAProperty.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteAProperty.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/properties/{id}/delete(deleteAProperty)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteAProperty.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteAProperty.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Projects
    ///
    /// List Projects
    ///
    /// - Remark: HTTP `GET /v2/projects`.
    /// - Remark: Generated from `#/paths//v2/projects/get(listProjects)`.
    public enum ListProjects {
        public static let id: Swift.String = "listProjects"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/projects/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/GET/query/contact`.
                public var contact: Swift.String?
                /// Retrieves contact's details as nested JSON objects rather than URL references.
                ///
                /// - Remark: Generated from `#/paths/v2/projects/GET/query/nested`.
                public var nested: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - contact:
                ///   - nested: Retrieves contact's details as nested JSON objects rather than URL references.
                public init(
                    contact: Swift.String? = nil,
                    nested: Swift.String? = nil
                ) {
                    self.contact = contact
                    self.nested = nested
                }
            }
            public var query: Operations.ListProjects.Input.Query
            /// - Remark: Generated from `#/paths/v2/projects/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListProjects.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListProjects.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListProjects.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListProjects.Input.Query = .init(),
                headers: Operations.ListProjects.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/projects/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/projects/GET/responses/200/content/application\/json`.
                    case json(Operations.ListProjects.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListProjects.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListProjects.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListProjects.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/projects/get(listProjects)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListProjects.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListProjects.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create Project
    ///
    /// Create Project
    ///
    /// - Remark: HTTP `POST /v2/projects`.
    /// - Remark: Generated from `#/paths//v2/projects/post(createProject)`.
    public enum CreateProject {
        public static let id: Swift.String = "createProject"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/projects/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateProject.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateProject.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateProject.Input.Headers
            /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project`.
                    public struct ProjectPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/billing_period`.
                        public var billingPeriod: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/budget`.
                        public var budget: Swift.Double?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/budget_units`.
                        public var budgetUnits: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/contact`.
                        public var contact: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/currency`.
                        public var currency: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/ends_on`.
                        public var endsOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/hours_per_day`.
                        public var hoursPerDay: Swift.Double?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/is_ir35`.
                        public var isIr35: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/name`.
                        public var name: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/normal_billing_rate`.
                        public var normalBillingRate: Swift.Double?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/starts_on`.
                        public var startsOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/status`.
                        public var status: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project/uses_project_invoice_sequence`.
                        public var usesProjectInvoiceSequence: Swift.Bool?
                        /// Creates a new `ProjectPayload`.
                        ///
                        /// - Parameters:
                        ///   - billingPeriod:
                        ///   - budget:
                        ///   - budgetUnits:
                        ///   - contact:
                        ///   - currency:
                        ///   - endsOn:
                        ///   - hoursPerDay:
                        ///   - isIr35:
                        ///   - name:
                        ///   - normalBillingRate:
                        ///   - startsOn:
                        ///   - status:
                        ///   - usesProjectInvoiceSequence:
                        public init(
                            billingPeriod: Swift.String? = nil,
                            budget: Swift.Double? = nil,
                            budgetUnits: Swift.String? = nil,
                            contact: Swift.String? = nil,
                            currency: Swift.String? = nil,
                            endsOn: Swift.String? = nil,
                            hoursPerDay: Swift.Double? = nil,
                            isIr35: Swift.Bool? = nil,
                            name: Swift.String? = nil,
                            normalBillingRate: Swift.Double? = nil,
                            startsOn: Swift.String? = nil,
                            status: Swift.String? = nil,
                            usesProjectInvoiceSequence: Swift.Bool? = nil
                        ) {
                            self.billingPeriod = billingPeriod
                            self.budget = budget
                            self.budgetUnits = budgetUnits
                            self.contact = contact
                            self.currency = currency
                            self.endsOn = endsOn
                            self.hoursPerDay = hoursPerDay
                            self.isIr35 = isIr35
                            self.name = name
                            self.normalBillingRate = normalBillingRate
                            self.startsOn = startsOn
                            self.status = status
                            self.usesProjectInvoiceSequence = usesProjectInvoiceSequence
                        }
                        public enum CodingKeys: String, CodingKey {
                            case billingPeriod = "billing_period"
                            case budget
                            case budgetUnits = "budget_units"
                            case contact
                            case currency
                            case endsOn = "ends_on"
                            case hoursPerDay = "hours_per_day"
                            case isIr35 = "is_ir35"
                            case name
                            case normalBillingRate = "normal_billing_rate"
                            case startsOn = "starts_on"
                            case status
                            case usesProjectInvoiceSequence = "uses_project_invoice_sequence"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/json/project`.
                    public var project: Operations.CreateProject.Input.Body.JsonPayload.ProjectPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - project:
                    public init(project: Operations.CreateProject.Input.Body.JsonPayload.ProjectPayload? = nil) {
                        self.project = project
                    }
                    public enum CodingKeys: String, CodingKey {
                        case project
                    }
                }
                /// - Remark: Generated from `#/paths/v2/projects/POST/requestBody/content/application\/json`.
                case json(Operations.CreateProject.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateProject.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateProject.Input.Headers = .init(),
                body: Operations.CreateProject.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/projects/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/projects/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateProject.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateProject.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateProject.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateProject.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/projects/post(createProject)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateProject.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateProject.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Project
    ///
    /// Show Project
    ///
    /// - Remark: HTTP `GET /v2/projects/{id}`.
    /// - Remark: Generated from `#/paths//v2/projects/{id}/get(showProject)`.
    public enum ShowProject {
        public static let id: Swift.String = "showProject"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/projects/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowProject.Input.Path
            /// - Remark: Generated from `#/paths/v2/projects/{id}/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Retrieves contact's details as nested JSON objects rather than URL references.
                ///
                /// - Remark: Generated from `#/paths/v2/projects/{id}/GET/query/nested`.
                public var nested: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - nested: Retrieves contact's details as nested JSON objects rather than URL references.
                public init(nested: Swift.String? = nil) {
                    self.nested = nested
                }
            }
            public var query: Operations.ShowProject.Input.Query
            /// - Remark: Generated from `#/paths/v2/projects/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowProject.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowProject.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowProject.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.ShowProject.Input.Path,
                query: Operations.ShowProject.Input.Query = .init(),
                headers: Operations.ShowProject.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/projects/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/projects/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowProject.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowProject.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowProject.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowProject.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/projects/{id}/get(showProject)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowProject.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowProject.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update Project
    ///
    /// Update Project
    ///
    /// - Remark: HTTP `PUT /v2/projects/{id}`.
    /// - Remark: Generated from `#/paths//v2/projects/{id}/put(updateProject)`.
    public enum UpdateProject {
        public static let id: Swift.String = "updateProject"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateProject.Input.Path
            /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateProject.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateProject.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateProject.Input.Headers
            /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/requestBody/json/project`.
                    public struct ProjectPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/requestBody/json/project/name`.
                        public var name: Swift.String?
                        /// Creates a new `ProjectPayload`.
                        ///
                        /// - Parameters:
                        ///   - name:
                        public init(name: Swift.String? = nil) {
                            self.name = name
                        }
                        public enum CodingKeys: String, CodingKey {
                            case name
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/requestBody/json/project`.
                    public var project: Operations.UpdateProject.Input.Body.JsonPayload.ProjectPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - project:
                    public init(project: Operations.UpdateProject.Input.Body.JsonPayload.ProjectPayload? = nil) {
                        self.project = project
                    }
                    public enum CodingKeys: String, CodingKey {
                        case project
                    }
                }
                /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateProject.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateProject.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateProject.Input.Path,
                headers: Operations.UpdateProject.Input.Headers = .init(),
                body: Operations.UpdateProject.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/projects/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateProject.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateProject.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateProject.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateProject.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/projects/{id}/put(updateProject)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateProject.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateProject.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Project
    ///
    /// Delete Project
    ///
    /// - Remark: HTTP `DELETE /v2/projects/{id}`.
    /// - Remark: Generated from `#/paths//v2/projects/{id}/delete(deleteProject)`.
    public enum DeleteProject {
        public static let id: Swift.String = "deleteProject"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/projects/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteProject.Input.Path
            /// - Remark: Generated from `#/paths/v2/projects/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteProject.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteProject.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteProject.Input.Headers
            /// - Remark: Generated from `#/paths/v2/projects/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/{id}/DELETE/requestBody/multipartForm`.
                @frozen public enum MultipartFormPayload: Sendable, Hashable {
                    case undocumented(OpenAPIRuntime.MultipartRawPart)
                }
                /// - Remark: Generated from `#/paths/v2/projects/{id}/DELETE/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Operations.DeleteProject.Input.Body.MultipartFormPayload>)
            }
            public var body: Operations.DeleteProject.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteProject.Input.Path,
                headers: Operations.DeleteProject.Input.Headers = .init(),
                body: Operations.DeleteProject.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/projects/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/projects/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/projects/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteProject.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteProject.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteProject.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteProject.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/projects/{id}/delete(deleteProject)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteProject.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteProject.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all recurring invoices
    ///
    /// List all recurring invoices
    ///
    /// - Remark: HTTP `GET /v2/recurring_invoices`.
    /// - Remark: Generated from `#/paths//v2/recurring_invoices/get(listAllRecurringInvoices)`.
    public enum ListAllRecurringInvoices {
        public static let id: Swift.String = "listAllRecurringInvoices"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/recurring_invoices/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/recurring_invoices/GET/query/view`.
                @frozen public enum ViewPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case draft = "draft"
                    case active = "active"
                    case inactive = "inactive"
                }
                /// Filter recurring invoices by view type
                ///
                /// - Remark: Generated from `#/paths/v2/recurring_invoices/GET/query/view`.
                public var view: Operations.ListAllRecurringInvoices.Input.Query.ViewPayload?
                /// Filter by contact URL
                ///
                /// - Remark: Generated from `#/paths/v2/recurring_invoices/GET/query/contact`.
                public var contact: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - view: Filter recurring invoices by view type
                ///   - contact: Filter by contact URL
                public init(
                    view: Operations.ListAllRecurringInvoices.Input.Query.ViewPayload? = nil,
                    contact: Swift.String? = nil
                ) {
                    self.view = view
                    self.contact = contact
                }
            }
            public var query: Operations.ListAllRecurringInvoices.Input.Query
            /// - Remark: Generated from `#/paths/v2/recurring_invoices/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllRecurringInvoices.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllRecurringInvoices.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllRecurringInvoices.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListAllRecurringInvoices.Input.Query = .init(),
                headers: Operations.ListAllRecurringInvoices.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/recurring_invoices/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/recurring_invoices/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/recurring_invoices/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllRecurringInvoices.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllRecurringInvoices.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllRecurringInvoices.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllRecurringInvoices.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/recurring_invoices/get(listAllRecurringInvoices)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllRecurringInvoices.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllRecurringInvoices.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Show Recurring Invoice
    ///
    /// Show Recurring Invoice
    ///
    /// - Remark: HTTP `GET /v2/recurring_invoices/{id}`.
    /// - Remark: Generated from `#/paths//v2/recurring_invoices/{id}/get(showRecurringInvoice)`.
    public enum ShowRecurringInvoice {
        public static let id: Swift.String = "showRecurringInvoice"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/recurring_invoices/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/recurring_invoices/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.ShowRecurringInvoice.Input.Path
            /// - Remark: Generated from `#/paths/v2/recurring_invoices/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowRecurringInvoice.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ShowRecurringInvoice.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ShowRecurringInvoice.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.ShowRecurringInvoice.Input.Path,
                headers: Operations.ShowRecurringInvoice.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/recurring_invoices/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/recurring_invoices/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/recurring_invoices/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.ShowRecurringInvoice.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ShowRecurringInvoice.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ShowRecurringInvoice.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ShowRecurringInvoice.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/recurring_invoices/{id}/get(showRecurringInvoice)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ShowRecurringInvoice.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ShowRecurringInvoice.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all sales tax periods for a company
    ///
    /// Only available to US and Universal companies
    ///
    /// - Remark: HTTP `GET /v2/sales_tax_periods`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/get(listAllSalesTaxPeriodsForACompany)`.
    public enum ListAllSalesTaxPeriodsForACompany {
        public static let id: Swift.String = "listAllSalesTaxPeriodsForACompany"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllSalesTaxPeriodsForACompany.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllSalesTaxPeriodsForACompany.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllSalesTaxPeriodsForACompany.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListAllSalesTaxPeriodsForACompany.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllSalesTaxPeriodsForACompany.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllSalesTaxPeriodsForACompany.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllSalesTaxPeriodsForACompany.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllSalesTaxPeriodsForACompany.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/sales_tax_periods/get(listAllSalesTaxPeriodsForACompany)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllSalesTaxPeriodsForACompany.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllSalesTaxPeriodsForACompany.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `POST /v2/sales_tax_periods`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/post(createASalesTaxPeriod)`.
    public enum CreateASalesTaxPeriod {
        public static let id: Swift.String = "createASalesTaxPeriod"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateASalesTaxPeriod.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateASalesTaxPeriod.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateASalesTaxPeriod.Input.Headers
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period`.
                    public struct SalesTaxPeriodPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/effective_date`.
                        public var effectiveDate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/sales_tax_is_value_added`.
                        public var salesTaxIsValueAdded: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/sales_tax_name`.
                        public var salesTaxName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/sales_tax_rate_1`.
                        public var salesTaxRate1: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/sales_tax_rate_2`.
                        public var salesTaxRate2: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/sales_tax_rate_3`.
                        public var salesTaxRate3: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/sales_tax_registration_number`.
                        public var salesTaxRegistrationNumber: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/sales_tax_registration_status`.
                        public var salesTaxRegistrationStatus: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/second_sales_tax_is_compound`.
                        public var secondSalesTaxIsCompound: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/second_sales_tax_name`.
                        public var secondSalesTaxName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/second_sales_tax_rate_1`.
                        public var secondSalesTaxRate1: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/second_sales_tax_rate_2`.
                        public var secondSalesTaxRate2: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period/second_sales_tax_rate_3`.
                        public var secondSalesTaxRate3: Swift.String?
                        /// Creates a new `SalesTaxPeriodPayload`.
                        ///
                        /// - Parameters:
                        ///   - effectiveDate:
                        ///   - salesTaxIsValueAdded:
                        ///   - salesTaxName:
                        ///   - salesTaxRate1:
                        ///   - salesTaxRate2:
                        ///   - salesTaxRate3:
                        ///   - salesTaxRegistrationNumber:
                        ///   - salesTaxRegistrationStatus:
                        ///   - secondSalesTaxIsCompound:
                        ///   - secondSalesTaxName:
                        ///   - secondSalesTaxRate1:
                        ///   - secondSalesTaxRate2:
                        ///   - secondSalesTaxRate3:
                        public init(
                            effectiveDate: Swift.String? = nil,
                            salesTaxIsValueAdded: Swift.Bool? = nil,
                            salesTaxName: Swift.String? = nil,
                            salesTaxRate1: Swift.String? = nil,
                            salesTaxRate2: Swift.String? = nil,
                            salesTaxRate3: Swift.String? = nil,
                            salesTaxRegistrationNumber: Swift.String? = nil,
                            salesTaxRegistrationStatus: Swift.String? = nil,
                            secondSalesTaxIsCompound: Swift.Bool? = nil,
                            secondSalesTaxName: Swift.String? = nil,
                            secondSalesTaxRate1: Swift.String? = nil,
                            secondSalesTaxRate2: Swift.String? = nil,
                            secondSalesTaxRate3: Swift.String? = nil
                        ) {
                            self.effectiveDate = effectiveDate
                            self.salesTaxIsValueAdded = salesTaxIsValueAdded
                            self.salesTaxName = salesTaxName
                            self.salesTaxRate1 = salesTaxRate1
                            self.salesTaxRate2 = salesTaxRate2
                            self.salesTaxRate3 = salesTaxRate3
                            self.salesTaxRegistrationNumber = salesTaxRegistrationNumber
                            self.salesTaxRegistrationStatus = salesTaxRegistrationStatus
                            self.secondSalesTaxIsCompound = secondSalesTaxIsCompound
                            self.secondSalesTaxName = secondSalesTaxName
                            self.secondSalesTaxRate1 = secondSalesTaxRate1
                            self.secondSalesTaxRate2 = secondSalesTaxRate2
                            self.secondSalesTaxRate3 = secondSalesTaxRate3
                        }
                        public enum CodingKeys: String, CodingKey {
                            case effectiveDate = "effective_date"
                            case salesTaxIsValueAdded = "sales_tax_is_value_added"
                            case salesTaxName = "sales_tax_name"
                            case salesTaxRate1 = "sales_tax_rate_1"
                            case salesTaxRate2 = "sales_tax_rate_2"
                            case salesTaxRate3 = "sales_tax_rate_3"
                            case salesTaxRegistrationNumber = "sales_tax_registration_number"
                            case salesTaxRegistrationStatus = "sales_tax_registration_status"
                            case secondSalesTaxIsCompound = "second_sales_tax_is_compound"
                            case secondSalesTaxName = "second_sales_tax_name"
                            case secondSalesTaxRate1 = "second_sales_tax_rate_1"
                            case secondSalesTaxRate2 = "second_sales_tax_rate_2"
                            case secondSalesTaxRate3 = "second_sales_tax_rate_3"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/json/sales_tax_period`.
                    public var salesTaxPeriod: Operations.CreateASalesTaxPeriod.Input.Body.JsonPayload.SalesTaxPeriodPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - salesTaxPeriod:
                    public init(salesTaxPeriod: Operations.CreateASalesTaxPeriod.Input.Body.JsonPayload.SalesTaxPeriodPayload? = nil) {
                        self.salesTaxPeriod = salesTaxPeriod
                    }
                    public enum CodingKeys: String, CodingKey {
                        case salesTaxPeriod = "sales_tax_period"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/requestBody/content/application\/json`.
                case json(Operations.CreateASalesTaxPeriod.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateASalesTaxPeriod.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateASalesTaxPeriod.Input.Headers = .init(),
                body: Operations.CreateASalesTaxPeriod.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateASalesTaxPeriod.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateASalesTaxPeriod.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateASalesTaxPeriod.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateASalesTaxPeriod.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/sales_tax_periods/post(createASalesTaxPeriod)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateASalesTaxPeriod.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateASalesTaxPeriod.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `GET /v2/sales_tax_periods/{id}`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/get(getASingleSalesTaxPeriod)`.
    public enum GetASingleSalesTaxPeriod {
        public static let id: Swift.String = "getASingleSalesTaxPeriod"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleSalesTaxPeriod.Input.Path
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleSalesTaxPeriod.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleSalesTaxPeriod.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleSalesTaxPeriod.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleSalesTaxPeriod.Input.Path,
                headers: Operations.GetASingleSalesTaxPeriod.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleSalesTaxPeriod.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleSalesTaxPeriod.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleSalesTaxPeriod.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleSalesTaxPeriod.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/get(getASingleSalesTaxPeriod)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleSalesTaxPeriod.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleSalesTaxPeriod.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `PUT /v2/sales_tax_periods/{id}`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/put(updateASalesTaxPeriod)`.
    public enum UpdateASalesTaxPeriod {
        public static let id: Swift.String = "updateASalesTaxPeriod"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateASalesTaxPeriod.Input.Path
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateASalesTaxPeriod.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateASalesTaxPeriod.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateASalesTaxPeriod.Input.Headers
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period`.
                    public struct SalesTaxPeriodPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/effective_date`.
                        public var effectiveDate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/sales_tax_is_value_added`.
                        public var salesTaxIsValueAdded: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/sales_tax_name`.
                        public var salesTaxName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/sales_tax_rate_1`.
                        public var salesTaxRate1: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/sales_tax_rate_2`.
                        public var salesTaxRate2: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/sales_tax_rate_3`.
                        public var salesTaxRate3: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/sales_tax_registration_number`.
                        public var salesTaxRegistrationNumber: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/sales_tax_registration_status`.
                        public var salesTaxRegistrationStatus: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/second_sales_tax_is_compound`.
                        public var secondSalesTaxIsCompound: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/second_sales_tax_name`.
                        public var secondSalesTaxName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/second_sales_tax_rate_1`.
                        public var secondSalesTaxRate1: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/second_sales_tax_rate_2`.
                        public var secondSalesTaxRate2: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period/second_sales_tax_rate_3`.
                        public var secondSalesTaxRate3: Swift.String?
                        /// Creates a new `SalesTaxPeriodPayload`.
                        ///
                        /// - Parameters:
                        ///   - effectiveDate:
                        ///   - salesTaxIsValueAdded:
                        ///   - salesTaxName:
                        ///   - salesTaxRate1:
                        ///   - salesTaxRate2:
                        ///   - salesTaxRate3:
                        ///   - salesTaxRegistrationNumber:
                        ///   - salesTaxRegistrationStatus:
                        ///   - secondSalesTaxIsCompound:
                        ///   - secondSalesTaxName:
                        ///   - secondSalesTaxRate1:
                        ///   - secondSalesTaxRate2:
                        ///   - secondSalesTaxRate3:
                        public init(
                            effectiveDate: Swift.String? = nil,
                            salesTaxIsValueAdded: Swift.Bool? = nil,
                            salesTaxName: Swift.String? = nil,
                            salesTaxRate1: Swift.String? = nil,
                            salesTaxRate2: Swift.String? = nil,
                            salesTaxRate3: Swift.String? = nil,
                            salesTaxRegistrationNumber: Swift.String? = nil,
                            salesTaxRegistrationStatus: Swift.String? = nil,
                            secondSalesTaxIsCompound: Swift.Bool? = nil,
                            secondSalesTaxName: Swift.String? = nil,
                            secondSalesTaxRate1: Swift.String? = nil,
                            secondSalesTaxRate2: Swift.String? = nil,
                            secondSalesTaxRate3: Swift.String? = nil
                        ) {
                            self.effectiveDate = effectiveDate
                            self.salesTaxIsValueAdded = salesTaxIsValueAdded
                            self.salesTaxName = salesTaxName
                            self.salesTaxRate1 = salesTaxRate1
                            self.salesTaxRate2 = salesTaxRate2
                            self.salesTaxRate3 = salesTaxRate3
                            self.salesTaxRegistrationNumber = salesTaxRegistrationNumber
                            self.salesTaxRegistrationStatus = salesTaxRegistrationStatus
                            self.secondSalesTaxIsCompound = secondSalesTaxIsCompound
                            self.secondSalesTaxName = secondSalesTaxName
                            self.secondSalesTaxRate1 = secondSalesTaxRate1
                            self.secondSalesTaxRate2 = secondSalesTaxRate2
                            self.secondSalesTaxRate3 = secondSalesTaxRate3
                        }
                        public enum CodingKeys: String, CodingKey {
                            case effectiveDate = "effective_date"
                            case salesTaxIsValueAdded = "sales_tax_is_value_added"
                            case salesTaxName = "sales_tax_name"
                            case salesTaxRate1 = "sales_tax_rate_1"
                            case salesTaxRate2 = "sales_tax_rate_2"
                            case salesTaxRate3 = "sales_tax_rate_3"
                            case salesTaxRegistrationNumber = "sales_tax_registration_number"
                            case salesTaxRegistrationStatus = "sales_tax_registration_status"
                            case secondSalesTaxIsCompound = "second_sales_tax_is_compound"
                            case secondSalesTaxName = "second_sales_tax_name"
                            case secondSalesTaxRate1 = "second_sales_tax_rate_1"
                            case secondSalesTaxRate2 = "second_sales_tax_rate_2"
                            case secondSalesTaxRate3 = "second_sales_tax_rate_3"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/json/sales_tax_period`.
                    public var salesTaxPeriod: Operations.UpdateASalesTaxPeriod.Input.Body.JsonPayload.SalesTaxPeriodPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - salesTaxPeriod:
                    public init(salesTaxPeriod: Operations.UpdateASalesTaxPeriod.Input.Body.JsonPayload.SalesTaxPeriodPayload? = nil) {
                        self.salesTaxPeriod = salesTaxPeriod
                    }
                    public enum CodingKeys: String, CodingKey {
                        case salesTaxPeriod = "sales_tax_period"
                    }
                }
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateASalesTaxPeriod.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateASalesTaxPeriod.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateASalesTaxPeriod.Input.Path,
                headers: Operations.UpdateASalesTaxPeriod.Input.Headers = .init(),
                body: Operations.UpdateASalesTaxPeriod.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateASalesTaxPeriod.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateASalesTaxPeriod.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateASalesTaxPeriod.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateASalesTaxPeriod.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/put(updateASalesTaxPeriod)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateASalesTaxPeriod.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateASalesTaxPeriod.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a sales tax period
    ///
    /// Only available to US and Universal companies.
    ///
    /// - Remark: HTTP `DELETE /v2/sales_tax_periods/{id}`.
    /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/delete(deleteASalesTaxPeriod)`.
    public enum DeleteASalesTaxPeriod {
        public static let id: Swift.String = "deleteASalesTaxPeriod"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteASalesTaxPeriod.Input.Path
            /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteASalesTaxPeriod.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteASalesTaxPeriod.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteASalesTaxPeriod.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.DeleteASalesTaxPeriod.Input.Path,
                headers: Operations.DeleteASalesTaxPeriod.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/sales_tax_periods/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteASalesTaxPeriod.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteASalesTaxPeriod.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteASalesTaxPeriod.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteASalesTaxPeriod.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/sales_tax_periods/{id}/delete(deleteASalesTaxPeriod)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteASalesTaxPeriod.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteASalesTaxPeriod.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all Stock Items
    ///
    /// List all Stock Items
    ///
    /// - Remark: HTTP `GET /v2/stock_items`.
    /// - Remark: Generated from `#/paths//v2/stock_items/get(listAllStockItems)`.
    public enum ListAllStockItems {
        public static let id: Swift.String = "listAllStockItems"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/stock_items/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/stock_items/GET/query/contact`.
                public var contact: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - contact:
                public init(contact: Swift.String? = nil) {
                    self.contact = contact
                }
            }
            public var query: Operations.ListAllStockItems.Input.Query
            /// - Remark: Generated from `#/paths/v2/stock_items/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllStockItems.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllStockItems.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllStockItems.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListAllStockItems.Input.Query = .init(),
                headers: Operations.ListAllStockItems.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/stock_items/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/stock_items/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/stock_items/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllStockItems.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllStockItems.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllStockItems.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllStockItems.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/stock_items/get(listAllStockItems)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllStockItems.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllStockItems.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single Stock Item
    ///
    /// Get a single Stock Item
    ///
    /// - Remark: HTTP `GET /v2/stock_items/{id}`.
    /// - Remark: Generated from `#/paths//v2/stock_items/{id}/get(getASingleStockItem)`.
    public enum GetASingleStockItem {
        public static let id: Swift.String = "getASingleStockItem"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/stock_items/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/stock_items/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleStockItem.Input.Path
            /// - Remark: Generated from `#/paths/v2/stock_items/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleStockItem.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleStockItem.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleStockItem.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleStockItem.Input.Path,
                headers: Operations.GetASingleStockItem.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/stock_items/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/stock_items/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/stock_items/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleStockItem.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleStockItem.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleStockItem.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleStockItem.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/stock_items/{id}/get(getASingleStockItem)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleStockItem.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleStockItem.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all tasks
    ///
    /// List all tasks
    ///
    /// - Remark: HTTP `GET /v2/tasks`.
    /// - Remark: Generated from `#/paths//v2/tasks/get(listAllTasks)`.
    public enum ListAllTasks {
        public static let id: Swift.String = "listAllTasks"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/tasks/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/GET/query/view`.
                public var view: Swift.String?
                /// - Remark: Generated from `#/paths/v2/tasks/GET/query/updated_since`.
                public var updatedSince: Swift.String?
                /// - Remark: Generated from `#/paths/v2/tasks/GET/query/project`.
                public var project: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - view:
                ///   - updatedSince:
                ///   - project:
                public init(
                    view: Swift.String? = nil,
                    updatedSince: Swift.String? = nil,
                    project: Swift.String? = nil
                ) {
                    self.view = view
                    self.updatedSince = updatedSince
                    self.project = project
                }
            }
            public var query: Operations.ListAllTasks.Input.Query
            /// - Remark: Generated from `#/paths/v2/tasks/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllTasks.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllTasks.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllTasks.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListAllTasks.Input.Query = .init(),
                headers: Operations.ListAllTasks.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/tasks/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/tasks/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllTasks.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllTasks.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllTasks.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllTasks.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/tasks/get(listAllTasks)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllTasks.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllTasks.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a task under a certain project
    ///
    /// Create a task under a certain project
    ///
    /// - Remark: HTTP `POST /v2/tasks`.
    /// - Remark: Generated from `#/paths//v2/tasks/post(createATaskUnderACertainProject)`.
    public enum CreateATaskUnderACertainProject {
        public static let id: Swift.String = "createATaskUnderACertainProject"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/tasks/POST/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/POST/query/project`.
                public var project: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - project:
                public init(project: Swift.String? = nil) {
                    self.project = project
                }
            }
            public var query: Operations.CreateATaskUnderACertainProject.Input.Query
            /// - Remark: Generated from `#/paths/v2/tasks/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateATaskUnderACertainProject.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateATaskUnderACertainProject.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateATaskUnderACertainProject.Input.Headers
            /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody/json/task`.
                    public struct TaskPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody/json/task/billing_period`.
                        public var billingPeriod: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody/json/task/billing_rate`.
                        public var billingRate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody/json/task/is_billable`.
                        public var isBillable: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody/json/task/name`.
                        public var name: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody/json/task/status`.
                        public var status: Swift.String?
                        /// Creates a new `TaskPayload`.
                        ///
                        /// - Parameters:
                        ///   - billingPeriod:
                        ///   - billingRate:
                        ///   - isBillable:
                        ///   - name:
                        ///   - status:
                        public init(
                            billingPeriod: Swift.String? = nil,
                            billingRate: Swift.String? = nil,
                            isBillable: Swift.Bool? = nil,
                            name: Swift.String? = nil,
                            status: Swift.String? = nil
                        ) {
                            self.billingPeriod = billingPeriod
                            self.billingRate = billingRate
                            self.isBillable = isBillable
                            self.name = name
                            self.status = status
                        }
                        public enum CodingKeys: String, CodingKey {
                            case billingPeriod = "billing_period"
                            case billingRate = "billing_rate"
                            case isBillable = "is_billable"
                            case name
                            case status
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody/json/task`.
                    public var task: Operations.CreateATaskUnderACertainProject.Input.Body.JsonPayload.TaskPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - task:
                    public init(task: Operations.CreateATaskUnderACertainProject.Input.Body.JsonPayload.TaskPayload? = nil) {
                        self.task = task
                    }
                    public enum CodingKeys: String, CodingKey {
                        case task
                    }
                }
                /// - Remark: Generated from `#/paths/v2/tasks/POST/requestBody/content/application\/json`.
                case json(Operations.CreateATaskUnderACertainProject.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateATaskUnderACertainProject.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            ///   - body:
            public init(
                query: Operations.CreateATaskUnderACertainProject.Input.Query = .init(),
                headers: Operations.CreateATaskUnderACertainProject.Input.Headers = .init(),
                body: Operations.CreateATaskUnderACertainProject.Input.Body? = nil
            ) {
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/tasks/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/tasks/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateATaskUnderACertainProject.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateATaskUnderACertainProject.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateATaskUnderACertainProject.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateATaskUnderACertainProject.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/tasks/post(createATaskUnderACertainProject)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateATaskUnderACertainProject.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateATaskUnderACertainProject.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single task
    ///
    /// Get a single task
    ///
    /// - Remark: HTTP `GET /v2/tasks/{id}`.
    /// - Remark: Generated from `#/paths//v2/tasks/{id}/get(getASingleTask)`.
    public enum GetASingleTask {
        public static let id: Swift.String = "getASingleTask"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/tasks/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleTask.Input.Path
            /// - Remark: Generated from `#/paths/v2/tasks/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleTask.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleTask.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleTask.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleTask.Input.Path,
                headers: Operations.GetASingleTask.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/tasks/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/tasks/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleTask.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleTask.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleTask.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleTask.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/tasks/{id}/get(getASingleTask)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleTask.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleTask.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a task
    ///
    /// Update a task
    ///
    /// - Remark: HTTP `PUT /v2/tasks/{id}`.
    /// - Remark: Generated from `#/paths//v2/tasks/{id}/put(updateATask)`.
    public enum UpdateATask {
        public static let id: Swift.String = "updateATask"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateATask.Input.Path
            /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateATask.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateATask.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateATask.Input.Headers
            /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody/json/task`.
                    public struct TaskPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody/json/task/billing_period`.
                        public var billingPeriod: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody/json/task/billing_rate`.
                        public var billingRate: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody/json/task/is_billable`.
                        public var isBillable: Swift.Bool?
                        /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody/json/task/name`.
                        public var name: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody/json/task/status`.
                        public var status: Swift.String?
                        /// Creates a new `TaskPayload`.
                        ///
                        /// - Parameters:
                        ///   - billingPeriod:
                        ///   - billingRate:
                        ///   - isBillable:
                        ///   - name:
                        ///   - status:
                        public init(
                            billingPeriod: Swift.String? = nil,
                            billingRate: Swift.String? = nil,
                            isBillable: Swift.Bool? = nil,
                            name: Swift.String? = nil,
                            status: Swift.String? = nil
                        ) {
                            self.billingPeriod = billingPeriod
                            self.billingRate = billingRate
                            self.isBillable = isBillable
                            self.name = name
                            self.status = status
                        }
                        public enum CodingKeys: String, CodingKey {
                            case billingPeriod = "billing_period"
                            case billingRate = "billing_rate"
                            case isBillable = "is_billable"
                            case name
                            case status
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody/json/task`.
                    public var task: Operations.UpdateATask.Input.Body.JsonPayload.TaskPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - task:
                    public init(task: Operations.UpdateATask.Input.Body.JsonPayload.TaskPayload? = nil) {
                        self.task = task
                    }
                    public enum CodingKeys: String, CodingKey {
                        case task
                    }
                }
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateATask.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateATask.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateATask.Input.Path,
                headers: Operations.UpdateATask.Input.Headers = .init(),
                body: Operations.UpdateATask.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/tasks/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateATask.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateATask.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateATask.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateATask.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/tasks/{id}/put(updateATask)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateATask.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateATask.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete Task
    ///
    /// Delete Task
    ///
    /// - Remark: HTTP `DELETE /v2/tasks/{id}`.
    /// - Remark: Generated from `#/paths//v2/tasks/{id}/delete(deleteTask)`.
    public enum DeleteTask {
        public static let id: Swift.String = "deleteTask"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/tasks/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteTask.Input.Path
            /// - Remark: Generated from `#/paths/v2/tasks/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteTask.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteTask.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteTask.Input.Headers
            /// - Remark: Generated from `#/paths/v2/tasks/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/DELETE/requestBody/multipartForm`.
                @frozen public enum MultipartFormPayload: Sendable, Hashable {
                    case undocumented(OpenAPIRuntime.MultipartRawPart)
                }
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/DELETE/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Operations.DeleteTask.Input.Body.MultipartFormPayload>)
            }
            public var body: Operations.DeleteTask.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteTask.Input.Path,
                headers: Operations.DeleteTask.Input.Headers = .init(),
                body: Operations.DeleteTask.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/tasks/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/tasks/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/tasks/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteTask.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteTask.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteTask.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteTask.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/tasks/{id}/delete(deleteTask)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteTask.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteTask.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Start a Timer
    ///
    /// Start a Timer
    ///
    /// - Remark: HTTP `POST /v2/timeslips/{id}/timer`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/timer/post(startATimer)`.
    public enum StartATimer {
        public static let id: Swift.String = "startATimer"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.StartATimer.Input.Path
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/query`.
            public struct Query: Sendable, Hashable {
                /// Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                ///
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/query/nested`.
                public var nested: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - nested: Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                public init(nested: Swift.String? = nil) {
                    self.nested = nested
                }
            }
            public var query: Operations.StartATimer.Input.Query
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.StartATimer.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.StartATimer.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.StartATimer.Input.Headers
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json/timeslip`.
                    public struct TimeslipPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json/timeslip/created_at`.
                        public var createdAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json/timeslip/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json/timeslip/hours`.
                        public var hours: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json/timeslip/project`.
                        public var project: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json/timeslip/task`.
                        public var task: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json/timeslip/updated_at`.
                        public var updatedAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json/timeslip/user`.
                        public var user: Swift.String?
                        /// Creates a new `TimeslipPayload`.
                        ///
                        /// - Parameters:
                        ///   - createdAt:
                        ///   - datedOn:
                        ///   - hours:
                        ///   - project:
                        ///   - task:
                        ///   - updatedAt:
                        ///   - user:
                        public init(
                            createdAt: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            hours: Swift.String? = nil,
                            project: Swift.String? = nil,
                            task: Swift.String? = nil,
                            updatedAt: Swift.String? = nil,
                            user: Swift.String? = nil
                        ) {
                            self.createdAt = createdAt
                            self.datedOn = datedOn
                            self.hours = hours
                            self.project = project
                            self.task = task
                            self.updatedAt = updatedAt
                            self.user = user
                        }
                        public enum CodingKeys: String, CodingKey {
                            case createdAt = "created_at"
                            case datedOn = "dated_on"
                            case hours
                            case project
                            case task
                            case updatedAt = "updated_at"
                            case user
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/json/timeslip`.
                    public var timeslip: Operations.StartATimer.Input.Body.JsonPayload.TimeslipPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - timeslip:
                    public init(timeslip: Operations.StartATimer.Input.Body.JsonPayload.TimeslipPayload? = nil) {
                        self.timeslip = timeslip
                    }
                    public enum CodingKeys: String, CodingKey {
                        case timeslip
                    }
                }
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/requestBody/content/application\/json`.
                case json(Operations.StartATimer.Input.Body.JsonPayload)
            }
            public var body: Operations.StartATimer.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.StartATimer.Input.Path,
                query: Operations.StartATimer.Input.Query = .init(),
                headers: Operations.StartATimer.Input.Headers = .init(),
                body: Operations.StartATimer.Input.Body? = nil
            ) {
                self.path = path
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/POST/responses/200/content/application\/json`.
                    case json(Operations.StartATimer.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.StartATimer.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.StartATimer.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.StartATimer.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/timeslips/{id}/timer/post(startATimer)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.StartATimer.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.StartATimer.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Stop a Timer
    ///
    /// Stop a Timer
    ///
    /// - Remark: HTTP `DELETE /v2/timeslips/{id}/timer`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/timer/delete(stopATimer)`.
    public enum StopATimer {
        public static let id: Swift.String = "stopATimer"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.StopATimer.Input.Path
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/query`.
            public struct Query: Sendable, Hashable {
                /// Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                ///
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/query/nested`.
                public var nested: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - nested: Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                public init(nested: Swift.String? = nil) {
                    self.nested = nested
                }
            }
            public var query: Operations.StopATimer.Input.Query
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.StopATimer.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.StopATimer.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.StopATimer.Input.Headers
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/requestBody/multipartForm`.
                @frozen public enum MultipartFormPayload: Sendable, Hashable {
                    case undocumented(OpenAPIRuntime.MultipartRawPart)
                }
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Operations.StopATimer.Input.Body.MultipartFormPayload>)
            }
            public var body: Operations.StopATimer.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.StopATimer.Input.Path,
                query: Operations.StopATimer.Input.Query = .init(),
                headers: Operations.StopATimer.Input.Headers = .init(),
                body: Operations.StopATimer.Input.Body
            ) {
                self.path = path
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/timer/DELETE/responses/200/content/application\/json`.
                    case json(Operations.StopATimer.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.StopATimer.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.StopATimer.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.StopATimer.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/timeslips/{id}/timer/delete(stopATimer)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.StopATimer.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.StopATimer.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all timeslips
    ///
    /// List all timeslips
    ///
    /// - Remark: HTTP `GET /v2/timeslips`.
    /// - Remark: Generated from `#/paths//v2/timeslips/get(listAllTimeslips)`.
    public enum ListAllTimeslips {
        public static let id: Swift.String = "listAllTimeslips"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/timeslips/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/GET/query/view`.
                public var view: Swift.String?
                /// - Remark: Generated from `#/paths/v2/timeslips/GET/query/from_date`.
                public var fromDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/timeslips/GET/query/to_date`.
                public var toDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/timeslips/GET/query/updated_since`.
                public var updatedSince: Swift.String?
                /// - Remark: Generated from `#/paths/v2/timeslips/GET/query/user`.
                public var user: Swift.String?
                /// - Remark: Generated from `#/paths/v2/timeslips/GET/query/task`.
                public var task: Swift.String?
                /// - Remark: Generated from `#/paths/v2/timeslips/GET/query/project`.
                public var project: Swift.String?
                /// Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                ///
                /// - Remark: Generated from `#/paths/v2/timeslips/GET/query/nested`.
                public var nested: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - view:
                ///   - fromDate:
                ///   - toDate:
                ///   - updatedSince:
                ///   - user:
                ///   - task:
                ///   - project:
                ///   - nested: Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                public init(
                    view: Swift.String? = nil,
                    fromDate: Swift.String? = nil,
                    toDate: Swift.String? = nil,
                    updatedSince: Swift.String? = nil,
                    user: Swift.String? = nil,
                    task: Swift.String? = nil,
                    project: Swift.String? = nil,
                    nested: Swift.String? = nil
                ) {
                    self.view = view
                    self.fromDate = fromDate
                    self.toDate = toDate
                    self.updatedSince = updatedSince
                    self.user = user
                    self.task = task
                    self.project = project
                    self.nested = nested
                }
            }
            public var query: Operations.ListAllTimeslips.Input.Query
            /// - Remark: Generated from `#/paths/v2/timeslips/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllTimeslips.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllTimeslips.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllTimeslips.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.ListAllTimeslips.Input.Query = .init(),
                headers: Operations.ListAllTimeslips.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllTimeslips.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllTimeslips.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllTimeslips.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllTimeslips.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/timeslips/get(listAllTimeslips)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllTimeslips.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllTimeslips.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a timeslip
    ///
    /// Create a timeslip
    ///
    /// - Remark: HTTP `POST /v2/timeslips`.
    /// - Remark: Generated from `#/paths//v2/timeslips/post(createATimeslip)`.
    public enum CreateATimeslip {
        public static let id: Swift.String = "createATimeslip"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/timeslips/POST/query`.
            public struct Query: Sendable, Hashable {
                /// Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                ///
                /// - Remark: Generated from `#/paths/v2/timeslips/POST/query/nested`.
                public var nested: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - nested: Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                public init(nested: Swift.String? = nil) {
                    self.nested = nested
                }
            }
            public var query: Operations.CreateATimeslip.Input.Query
            /// - Remark: Generated from `#/paths/v2/timeslips/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateATimeslip.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateATimeslip.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateATimeslip.Input.Headers
            /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json/timeslip`.
                    public struct TimeslipPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json/timeslip/created_at`.
                        public var createdAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json/timeslip/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json/timeslip/hours`.
                        public var hours: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json/timeslip/project`.
                        public var project: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json/timeslip/task`.
                        public var task: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json/timeslip/updated_at`.
                        public var updatedAt: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json/timeslip/user`.
                        public var user: Swift.String?
                        /// Creates a new `TimeslipPayload`.
                        ///
                        /// - Parameters:
                        ///   - createdAt:
                        ///   - datedOn:
                        ///   - hours:
                        ///   - project:
                        ///   - task:
                        ///   - updatedAt:
                        ///   - user:
                        public init(
                            createdAt: Swift.String? = nil,
                            datedOn: Swift.String? = nil,
                            hours: Swift.String? = nil,
                            project: Swift.String? = nil,
                            task: Swift.String? = nil,
                            updatedAt: Swift.String? = nil,
                            user: Swift.String? = nil
                        ) {
                            self.createdAt = createdAt
                            self.datedOn = datedOn
                            self.hours = hours
                            self.project = project
                            self.task = task
                            self.updatedAt = updatedAt
                            self.user = user
                        }
                        public enum CodingKeys: String, CodingKey {
                            case createdAt = "created_at"
                            case datedOn = "dated_on"
                            case hours
                            case project
                            case task
                            case updatedAt = "updated_at"
                            case user
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/json/timeslip`.
                    public var timeslip: Operations.CreateATimeslip.Input.Body.JsonPayload.TimeslipPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - timeslip:
                    public init(timeslip: Operations.CreateATimeslip.Input.Body.JsonPayload.TimeslipPayload? = nil) {
                        self.timeslip = timeslip
                    }
                    public enum CodingKeys: String, CodingKey {
                        case timeslip
                    }
                }
                /// - Remark: Generated from `#/paths/v2/timeslips/POST/requestBody/content/application\/json`.
                case json(Operations.CreateATimeslip.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateATimeslip.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            ///   - body:
            public init(
                query: Operations.CreateATimeslip.Input.Query = .init(),
                headers: Operations.CreateATimeslip.Input.Headers = .init(),
                body: Operations.CreateATimeslip.Input.Body? = nil
            ) {
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateATimeslip.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateATimeslip.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateATimeslip.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateATimeslip.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/timeslips/post(createATimeslip)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateATimeslip.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateATimeslip.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single timeslip
    ///
    /// Get a single timeslip
    ///
    /// - Remark: HTTP `GET /v2/timeslips/{id}`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/get(getASingleTimeslip)`.
    public enum GetASingleTimeslip {
        public static let id: Swift.String = "getASingleTimeslip"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleTimeslip.Input.Path
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                ///
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/GET/query/nested`.
                public var nested: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - nested: Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                public init(nested: Swift.String? = nil) {
                    self.nested = nested
                }
            }
            public var query: Operations.GetASingleTimeslip.Input.Query
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleTimeslip.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleTimeslip.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleTimeslip.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.GetASingleTimeslip.Input.Path,
                query: Operations.GetASingleTimeslip.Input.Query = .init(),
                headers: Operations.GetASingleTimeslip.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleTimeslip.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleTimeslip.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleTimeslip.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleTimeslip.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/timeslips/{id}/get(getASingleTimeslip)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleTimeslip.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleTimeslip.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a timeslip
    ///
    /// Update a timeslip
    ///
    /// - Remark: HTTP `PUT /v2/timeslips/{id}`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/put(updateATimeslip)`.
    public enum UpdateATimeslip {
        public static let id: Swift.String = "updateATimeslip"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateATimeslip.Input.Path
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/query`.
            public struct Query: Sendable, Hashable {
                /// Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                ///
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/query/nested`.
                public var nested: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - nested: Retrieves full details of resources associated with the timeslip(s) - such as user, project, task - as nested JSON objects rather than URL references.
                public init(nested: Swift.String? = nil) {
                    self.nested = nested
                }
            }
            public var query: Operations.UpdateATimeslip.Input.Query
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateATimeslip.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateATimeslip.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateATimeslip.Input.Headers
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody/json/timeslip`.
                    public struct TimeslipPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody/json/timeslip/dated_on`.
                        public var datedOn: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody/json/timeslip/hours`.
                        public var hours: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody/json/timeslip/project`.
                        public var project: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody/json/timeslip/task`.
                        public var task: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody/json/timeslip/user`.
                        public var user: Swift.String?
                        /// Creates a new `TimeslipPayload`.
                        ///
                        /// - Parameters:
                        ///   - datedOn:
                        ///   - hours:
                        ///   - project:
                        ///   - task:
                        ///   - user:
                        public init(
                            datedOn: Swift.String? = nil,
                            hours: Swift.String? = nil,
                            project: Swift.String? = nil,
                            task: Swift.String? = nil,
                            user: Swift.String? = nil
                        ) {
                            self.datedOn = datedOn
                            self.hours = hours
                            self.project = project
                            self.task = task
                            self.user = user
                        }
                        public enum CodingKeys: String, CodingKey {
                            case datedOn = "dated_on"
                            case hours
                            case project
                            case task
                            case user
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody/json/timeslip`.
                    public var timeslip: Operations.UpdateATimeslip.Input.Body.JsonPayload.TimeslipPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - timeslip:
                    public init(timeslip: Operations.UpdateATimeslip.Input.Body.JsonPayload.TimeslipPayload? = nil) {
                        self.timeslip = timeslip
                    }
                    public enum CodingKeys: String, CodingKey {
                        case timeslip
                    }
                }
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateATimeslip.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateATimeslip.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateATimeslip.Input.Path,
                query: Operations.UpdateATimeslip.Input.Query = .init(),
                headers: Operations.UpdateATimeslip.Input.Headers = .init(),
                body: Operations.UpdateATimeslip.Input.Body? = nil
            ) {
                self.path = path
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateATimeslip.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateATimeslip.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateATimeslip.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateATimeslip.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/timeslips/{id}/put(updateATimeslip)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateATimeslip.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateATimeslip.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a timeslip
    ///
    /// Delete a timeslip
    ///
    /// - Remark: HTTP `DELETE /v2/timeslips/{id}`.
    /// - Remark: Generated from `#/paths//v2/timeslips/{id}/delete(deleteATimeslip)`.
    public enum DeleteATimeslip {
        public static let id: Swift.String = "deleteATimeslip"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteATimeslip.Input.Path
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteATimeslip.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteATimeslip.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteATimeslip.Input.Headers
            /// - Remark: Generated from `#/paths/v2/timeslips/{id}/DELETE/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/DELETE/requestBody/multipartForm`.
                @frozen public enum MultipartFormPayload: Sendable, Hashable {
                    case undocumented(OpenAPIRuntime.MultipartRawPart)
                }
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/DELETE/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Operations.DeleteATimeslip.Input.Body.MultipartFormPayload>)
            }
            public var body: Operations.DeleteATimeslip.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.DeleteATimeslip.Input.Path,
                headers: Operations.DeleteATimeslip.Input.Headers = .init(),
                body: Operations.DeleteATimeslip.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/timeslips/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/timeslips/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteATimeslip.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteATimeslip.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteATimeslip.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteATimeslip.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/timeslips/{id}/delete(deleteATimeslip)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteATimeslip.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteATimeslip.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get the trial balance summary
    ///
    /// Get the trial balance summary
    ///
    /// - Remark: HTTP `GET /v2/accounting/trial_balance/summary`.
    /// - Remark: Generated from `#/paths//v2/accounting/trial_balance/summary/get(getTheTrialBalanceSummary)`.
    public enum GetTheTrialBalanceSummary {
        public static let id: Swift.String = "getTheTrialBalanceSummary"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/GET/query/to_date`.
                public var toDate: Swift.String?
                /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/GET/query/from_date`.
                public var fromDate: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - toDate:
                ///   - fromDate:
                public init(
                    toDate: Swift.String? = nil,
                    fromDate: Swift.String? = nil
                ) {
                    self.toDate = toDate
                    self.fromDate = fromDate
                }
            }
            public var query: Operations.GetTheTrialBalanceSummary.Input.Query
            /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetTheTrialBalanceSummary.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetTheTrialBalanceSummary.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetTheTrialBalanceSummary.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.GetTheTrialBalanceSummary.Input.Query = .init(),
                headers: Operations.GetTheTrialBalanceSummary.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/GET/responses/200/content/application\/json`.
                    case json(Operations.GetTheTrialBalanceSummary.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetTheTrialBalanceSummary.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetTheTrialBalanceSummary.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetTheTrialBalanceSummary.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/accounting/trial_balance/summary/get(getTheTrialBalanceSummary)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetTheTrialBalanceSummary.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetTheTrialBalanceSummary.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get the opening balances
    ///
    /// Get the opening balances
    ///
    /// - Remark: HTTP `GET /v2/accounting/trial_balance/summary/opening_balances`.
    /// - Remark: Generated from `#/paths//v2/accounting/trial_balance/summary/opening_balances/get(getTheOpeningBalances1)`.
    public enum GetTheOpeningBalances1 {
        public static let id: Swift.String = "getTheOpeningBalances1"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/opening_balances/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetTheOpeningBalances1.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetTheOpeningBalances1.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetTheOpeningBalances1.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.GetTheOpeningBalances1.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/opening_balances/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/opening_balances/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/accounting/trial_balance/summary/opening_balances/GET/responses/200/content/application\/json`.
                    case json(Operations.GetTheOpeningBalances1.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetTheOpeningBalances1.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetTheOpeningBalances1.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetTheOpeningBalances1.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/accounting/trial_balance/summary/opening_balances/get(getTheOpeningBalances1)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetTheOpeningBalances1.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetTheOpeningBalances1.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List All Users
    ///
    /// List All Users
    ///
    /// - Remark: HTTP `GET /v2/users`.
    /// - Remark: Generated from `#/paths//v2/users/get(listAllUsers)`.
    public enum ListAllUsers {
        public static let id: Swift.String = "listAllUsers"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/users/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllUsers.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ListAllUsers.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.ListAllUsers.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.ListAllUsers.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/users/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/users/GET/responses/200/content/application\/json`.
                    case json(Operations.ListAllUsers.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.ListAllUsers.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.ListAllUsers.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.ListAllUsers.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/users/get(listAllUsers)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ListAllUsers.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.ListAllUsers.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a user
    ///
    /// Create a user
    ///
    /// - Remark: HTTP `POST /v2/users`.
    /// - Remark: Generated from `#/paths//v2/users/post(createAUser)`.
    public enum CreateAUser {
        public static let id: Swift.String = "createAUser"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/users/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateAUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.CreateAUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.CreateAUser.Input.Headers
            /// - Remark: Generated from `#/paths/v2/users/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user`.
                    public struct UserPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user/email`.
                        public var email: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user/first_name`.
                        public var firstName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user/last_name`.
                        public var lastName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user/ni_number`.
                        public var niNumber: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user/opening_mileage`.
                        public var openingMileage: Swift.Double?
                        /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user/permission_level`.
                        public var permissionLevel: Swift.Double?
                        /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user/role`.
                        public var role: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user/unique_tax_reference`.
                        public var uniqueTaxReference: Swift.String?
                        /// Creates a new `UserPayload`.
                        ///
                        /// - Parameters:
                        ///   - email:
                        ///   - firstName:
                        ///   - lastName:
                        ///   - niNumber:
                        ///   - openingMileage:
                        ///   - permissionLevel:
                        ///   - role:
                        ///   - uniqueTaxReference:
                        public init(
                            email: Swift.String? = nil,
                            firstName: Swift.String? = nil,
                            lastName: Swift.String? = nil,
                            niNumber: Swift.String? = nil,
                            openingMileage: Swift.Double? = nil,
                            permissionLevel: Swift.Double? = nil,
                            role: Swift.String? = nil,
                            uniqueTaxReference: Swift.String? = nil
                        ) {
                            self.email = email
                            self.firstName = firstName
                            self.lastName = lastName
                            self.niNumber = niNumber
                            self.openingMileage = openingMileage
                            self.permissionLevel = permissionLevel
                            self.role = role
                            self.uniqueTaxReference = uniqueTaxReference
                        }
                        public enum CodingKeys: String, CodingKey {
                            case email
                            case firstName = "first_name"
                            case lastName = "last_name"
                            case niNumber = "ni_number"
                            case openingMileage = "opening_mileage"
                            case permissionLevel = "permission_level"
                            case role
                            case uniqueTaxReference = "unique_tax_reference"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/json/user`.
                    public var user: Operations.CreateAUser.Input.Body.JsonPayload.UserPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - user:
                    public init(user: Operations.CreateAUser.Input.Body.JsonPayload.UserPayload? = nil) {
                        self.user = user
                    }
                    public enum CodingKeys: String, CodingKey {
                        case user
                    }
                }
                /// - Remark: Generated from `#/paths/v2/users/POST/requestBody/content/application\/json`.
                case json(Operations.CreateAUser.Input.Body.JsonPayload)
            }
            public var body: Operations.CreateAUser.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.CreateAUser.Input.Headers = .init(),
                body: Operations.CreateAUser.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/users/POST/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/users/POST/responses/200/content/application\/json`.
                    case json(Operations.CreateAUser.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.CreateAUser.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.CreateAUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.CreateAUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/users/post(createAUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.CreateAUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.CreateAUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single user
    ///
    /// Get a single user
    ///
    /// - Remark: HTTP `GET /v2/users/{id}`.
    /// - Remark: Generated from `#/paths//v2/users/{id}/get(getASingleUser)`.
    public enum GetASingleUser {
        public static let id: Swift.String = "getASingleUser"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/users/{id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/{id}/GET/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.GetASingleUser.Input.Path
            /// - Remark: Generated from `#/paths/v2/users/{id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetASingleUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetASingleUser.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.GetASingleUser.Input.Path,
                headers: Operations.GetASingleUser.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/{id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/users/{id}/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/users/{id}/GET/responses/200/content/application\/json`.
                    case json(Operations.GetASingleUser.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetASingleUser.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetASingleUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetASingleUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/users/{id}/get(getASingleUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetASingleUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetASingleUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a user
    ///
    /// Update a user
    ///
    /// - Remark: HTTP `PUT /v2/users/{id}`.
    /// - Remark: Generated from `#/paths//v2/users/{id}/put(updateAUser)`.
    public enum UpdateAUser {
        public static let id: Swift.String = "updateAUser"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.UpdateAUser.Input.Path
            /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateAUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UpdateAUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UpdateAUser.Input.Headers
            /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user`.
                    public struct UserPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user/email`.
                        public var email: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user/first_name`.
                        public var firstName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user/last_name`.
                        public var lastName: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user/ni_number`.
                        public var niNumber: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user/opening_mileage`.
                        public var openingMileage: Swift.Double?
                        /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user/permission_level`.
                        public var permissionLevel: Swift.Double?
                        /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user/role`.
                        public var role: Swift.String?
                        /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user/unique_tax_reference`.
                        public var uniqueTaxReference: Swift.String?
                        /// Creates a new `UserPayload`.
                        ///
                        /// - Parameters:
                        ///   - email:
                        ///   - firstName:
                        ///   - lastName:
                        ///   - niNumber:
                        ///   - openingMileage:
                        ///   - permissionLevel:
                        ///   - role:
                        ///   - uniqueTaxReference:
                        public init(
                            email: Swift.String? = nil,
                            firstName: Swift.String? = nil,
                            lastName: Swift.String? = nil,
                            niNumber: Swift.String? = nil,
                            openingMileage: Swift.Double? = nil,
                            permissionLevel: Swift.Double? = nil,
                            role: Swift.String? = nil,
                            uniqueTaxReference: Swift.String? = nil
                        ) {
                            self.email = email
                            self.firstName = firstName
                            self.lastName = lastName
                            self.niNumber = niNumber
                            self.openingMileage = openingMileage
                            self.permissionLevel = permissionLevel
                            self.role = role
                            self.uniqueTaxReference = uniqueTaxReference
                        }
                        public enum CodingKeys: String, CodingKey {
                            case email
                            case firstName = "first_name"
                            case lastName = "last_name"
                            case niNumber = "ni_number"
                            case openingMileage = "opening_mileage"
                            case permissionLevel = "permission_level"
                            case role
                            case uniqueTaxReference = "unique_tax_reference"
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/json/user`.
                    public var user: Operations.UpdateAUser.Input.Body.JsonPayload.UserPayload?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - user:
                    public init(user: Operations.UpdateAUser.Input.Body.JsonPayload.UserPayload? = nil) {
                        self.user = user
                    }
                    public enum CodingKeys: String, CodingKey {
                        case user
                    }
                }
                /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/requestBody/content/application\/json`.
                case json(Operations.UpdateAUser.Input.Body.JsonPayload)
            }
            public var body: Operations.UpdateAUser.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.UpdateAUser.Input.Path,
                headers: Operations.UpdateAUser.Input.Headers = .init(),
                body: Operations.UpdateAUser.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/users/{id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.UpdateAUser.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.UpdateAUser.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UpdateAUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UpdateAUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/users/{id}/put(updateAUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UpdateAUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UpdateAUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a user
    ///
    /// Delete a user
    ///
    /// - Remark: HTTP `DELETE /v2/users/{id}`.
    /// - Remark: Generated from `#/paths//v2/users/{id}/delete(deleteAUser)`.
    public enum DeleteAUser {
        public static let id: Swift.String = "deleteAUser"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/users/{id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/{id}/DELETE/path/id`.
                public var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                public init(id: Swift.String) {
                    self.id = id
                }
            }
            public var path: Operations.DeleteAUser.Input.Path
            /// - Remark: Generated from `#/paths/v2/users/{id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteAUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.DeleteAUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.DeleteAUser.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.DeleteAUser.Input.Path,
                headers: Operations.DeleteAUser.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/{id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/users/{id}/DELETE/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/users/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.DeleteAUser.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.DeleteAUser.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.DeleteAUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.DeleteAUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/users/{id}/delete(deleteAUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.DeleteAUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.DeleteAUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get personal profile
    ///
    /// Get personal profile
    ///
    /// - Remark: HTTP `GET /v2/users/me`.
    /// - Remark: Generated from `#/paths//v2/users/me/get(getPersonalProfile)`.
    public enum GetPersonalProfile {
        public static let id: Swift.String = "getPersonalProfile"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/users/me/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetPersonalProfile.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.GetPersonalProfile.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.GetPersonalProfile.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.GetPersonalProfile.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/users/me/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/users/me/GET/responses/200/content/json`.
                    public struct JsonPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                        /// Creates a new `JsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        public init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// - Remark: Generated from `#/paths/v2/users/me/GET/responses/200/content/application\/json`.
                    case json(Operations.GetPersonalProfile.Output.Ok.Body.JsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.GetPersonalProfile.Output.Ok.Body.JsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.GetPersonalProfile.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.GetPersonalProfile.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//v2/users/me/get(getPersonalProfile)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.GetPersonalProfile.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.GetPersonalProfile.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
